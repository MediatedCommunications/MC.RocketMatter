{
  "swagger": "2.0",
  "info": {
    "description": "\r\nWelcome to the Rocket Matter API.  By integrating your technology with Rocket Matter, you’ll be able to work with our population of thousands of the most technically advanced law firms around the world.\r\n\r\nIntroduced in 2007, Rocket Matter was the first cloud-based practice management software and has a reputation for coupling the most innovative product with the best service in the industry.  We’d be happy to discuss co-marketing initiatives for your project.  Just email us at marketing@rocketmatter.com and let’s talk about your ideas.\r\n\r\nOur API support is robust and gives you access to nearly every object and operation in our system.  We’re happy to steer you in the right direction if you need any help.\r\n",
    "version": "2.0",
    "title": "Rocket Matter",
    "termsOfService": "www.rocketmatter.com",
    "contact": { "email": "developer@rocketmatter.com" },
    "license": {
      "name": "Rocket Matter",
      "url": "www.rocketmatter.com"
    },
    "x-logo": { "url": "https://www.rocketmatter.com/wp-content/themes/rocket-matter/assets/img/images/logo-red.png" }
  },
  "host": "<DOMAIN>/<INSTALL>",
  "basePath": "/API_V2",
  "tags": [
    {
      "name": "Authentication",
      "description": "How to authenticate against Rocket Matter API"
    },
    { "name": "Badges" },
    {
      "name": "BillableActivity",
      "description": "View, add, edit, and delete billable activities."
    },
    { "name": "BillingTiers" },
    {
      "name": "CalendarEntries",
      "description": "View, create, and delete calendar events."
    },
    {
      "name": "Clients",
      "description": "View, create, and delete clients."
    },
    { "name": "Communicator" },
    {
      "name": "Contacts",
      "description": "View, edit, create, and delete contacts."
    },
    { "name": "CourtRules" },
    { "name": "DataImporter" },
    {
      "name": "Discounts",
      "description": "Attorney matter discounts."
    },
    { "name": "Documents" },
    {
      "name": "DocumentTemplates",
      "description": "Document template operations."
    },
    { "name": "Features" },
    { "name": "FirmRoles" },
    { "name": "Interests" },
    { "name": "DropBox" },
    { "name": "Invoices" },
    { "name": "Matters" },
    {
      "name": "MatterTemplateDateOptions",
      "description": "\r\n            Manages the date options for a matter template.\r\n            "
    },
    {
      "name": "MatterTemplateMilestoneActions",
      "description": "\r\n            Handles cascading milestone dependencies with tasks and events created from matter templates.\r\n            "
    },
    {
      "name": "MatterTemplates",
      "description": "\r\n            Manage creating, editing and deleting matter templates.\r\n            "
    },
    { "name": "MatterTypes" },
    {
      "name": "Messages",
      "description": "Phone message operations."
    },
    {
      "name": "Mobile",
      "description": "\r\n            Manage mobile device-specific actions.\r\n            "
    },
    {
      "name": "Office",
      "description": "\r\n            Manages Office 365 integration.\r\n            "
    },
    {
      "name": "Rates",
      "description": "Operations for user hourly rates."
    },
    { "name": "RecurringBilling" },
    {
      "name": "Reports",
      "description": "Operations for running reports."
    },
    {
      "name": "Search",
      "description": "Search for Contacts, Clients, Matters, Activities, Tags, ContactCustomFields, and MatterCustomFields."
    },
    {
      "name": "Signup",
      "description": "Operations to create new Rocket Matter accounts."
    },
    { "name": "OriginSystem" },
    { "name": "SurchargeRates" },
    {
      "name": "Tags",
      "description": "Tags can be attached to contacts, documents, matters and events in order to group, sort, and find related items."
    },
    {
      "name": "Tasks",
      "description": "Operations for user tasks. All tasks must be assigned to a user but are not required to be attached to a matter."
    },
    {
      "name": "TaxRates",
      "description": "Operations for managing tax rates."
    },
    { "name": "TimeOptions" },
    {
      "name": "Timer",
      "description": "Operations for timer activities to track billable time worked."
    },
    {
      "name": "Trust",
      "description": "Client trust accounts to hold retainer funds."
    },
    {
      "name": "TwoFactorAuthentication",
      "description": "Operations to configure and manage SMS two-factor authentication for user login security."
    },
    {
      "name": "Users",
      "description": "Operations to manage Rocket Matter users."
    },
    { "name": "Validations" },
    { "name": "WorkFlow" },
    { "name": "Google" },
    {
      "name": "Quickbooks",
      "description": "\r\n            Manages the Quickbooks Online integration.\r\n            "
    }
  ],
  "schemes": [ "https" ],
  "paths": {
    "/Authentication.svc/json/GrantToken": {
      "post": {
        "tags": [ "Authentication" ],
        "description": "\r\n            Grants token and refresh token to the API consumer based on the grant type.\r\n            ",
        "operationId": "GrantToken",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GrantTokenRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GrantTokenResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Authentication.svc/json/RefreshToken": {
      "post": {
        "tags": [ "Authentication" ],
        "description": "\r\n            Generates a new access and refresh token from a valid refresh token.\r\n            ",
        "operationId": "RefreshToken",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/RefreshTokenRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GrantTokenResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Authentication.svc/json/LogOut": {
      "post": {
        "tags": [ "Authentication" ],
        "description": "\r\n            Revokes tokens for the user.\r\n            ",
        "operationId": "LogOut",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/BaseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Authentication.svc/json/GetNewRefreshToken": {
      "post": {
        "tags": [ "Authentication" ],
        "description": "\r\n            Gets new refresh token from existing access token.\r\n            ",
        "operationId": "GetNewRefreshToken",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GrantTokenRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GrantTokenResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Authentication.svc/json/RevokeToken": {
      "post": {
        "tags": [ "Authentication" ],
        "description": "\r\n            Revokes the token that is passed in.\r\n            ",
        "operationId": "RevokeToken",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/RevokeTokenRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/RevokeTokenResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Authentication.svc/json/GetMobileAuthenticationCode": {
      "post": {
        "tags": [ "Authentication" ],
        "description": "\r\n            Gets a temporary authentication code to be used for granting a token for the given device and authentication token.\r\n            ",
        "operationId": "GetMobileAuthenticationCode",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMobileAuthenticationCodeRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMobileAuthenticationCodeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Badges.svc/json/GetCurrentBadge": {
      "post": {
        "tags": [ "Badges" ],
        "description": "\r\n            Get current badge and upcoming badges based on current user id.\r\n            ",
        "operationId": "GetCurrentBadge",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetCurrentBadgeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Badges.svc/json/UserViewBadge": {
      "post": {
        "tags": [ "Badges" ],
        "description": "\r\n            View badge by name. Takes in current userid and badge name.\r\n            ",
        "operationId": "UserViewBadge",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UserViewBadgeRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UserViewBadgeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Badges.svc/json/GetUserBadgeHistory": {
      "post": {
        "tags": [ "Badges" ],
        "description": "\r\n            Gets badge history based on current userid.\r\n            ",
        "operationId": "GetUserBadgeHistory",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUserBadgeHistoryResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/BillableActivity.svc/json/GetBillableActivities": {
      "post": {
        "tags": [ "BillableActivity" ],
        "description": "\r\n            Get billable activities for a user by ID.\r\n            ",
        "operationId": "GetBillableActivities",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetBillableActivitiesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetBillableActivitiesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/BillableActivity.svc/json/GetFirmBalances": {
      "post": {
        "tags": [ "BillableActivity" ],
        "description": "\r\n            To get the various balances of pending billable activity for the firm.\r\n            ",
        "operationId": "GetFirmBalances",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetFirmBalancesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetFirmBalancesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/BillableActivity.svc/json/SaveBillableTime": {
      "post": {
        "tags": [ "BillableActivity" ],
        "description": "\r\n            To create a new billable time activity (non-expense).\r\n            ",
        "operationId": "SaveBillableTime",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveBillableTimeRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveBillableTimeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/BillableActivity.svc/json/SaveExpense": {
      "post": {
        "tags": [ "BillableActivity" ],
        "description": "\r\n            To create a new billable expense activity.\r\n            ",
        "operationId": "SaveExpense",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveExpenseRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveExpenseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/BillableActivity.svc/json/GetUnitsBilledForPeriod": {
      "post": {
        "tags": [ "BillableActivity" ],
        "description": "\r\n            Gets all the billable units for a user over a specific time period.\r\n            ",
        "operationId": "GetUnitsBilledForPeriod",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetUnitsBilledForPeriodRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUnitsBilledForPeriodResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/BillableActivity.svc/json/GetUnitsBilledForFirm": {
      "post": {
        "tags": [ "BillableActivity" ],
        "description": "\r\n            Gets all the billable units for the entire firm over a specific time period.\r\n            ",
        "operationId": "GetUnitsBilledForFirm",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetUnitsBilledForPeriodRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUnitsBilledForPeriodResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/BillableActivity.svc/json/GetTimeExpense": {
      "post": {
        "tags": [ "BillableActivity" ],
        "description": "\r\n            Get a time or expense billable activity by ID.\r\n            ",
        "operationId": "GetTimeExpense",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetTimeExpenseRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTimeExpenseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/BillableActivity.svc/json/GetActivityTypeId": {
      "post": {
        "tags": [ "BillableActivity" ],
        "description": "\r\n            See the type of an activity.\r\n            ",
        "operationId": "GetActivityTypeId",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetActivityTypeIdRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetActivityTypeIdResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/BillableActivity.svc/json/DeleteActivity": {
      "post": {
        "tags": [ "BillableActivity" ],
        "description": "\r\n            To delete a specific activity.\r\n            ",
        "operationId": "DeleteActivity",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteActivityRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteActivityResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/BillableActivity.svc/json/GetActivitiesForMatter": {
      "post": {
        "tags": [ "BillableActivity" ],
        "description": "\r\n            See all billable activities for a specific matter.\r\n            ",
        "operationId": "GetActivitiesForMatter",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetActivitiesForMatterRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetActivitiesForMatterResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/BillableActivity.svc/json/GetAllLedes": {
      "post": {
        "tags": [ "BillableActivity" ],
        "description": "\r\n            Get all LEDES codes for expense activities.\r\n            ",
        "operationId": "GetAllLedes",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetAllLedesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/BillingTiers.svc/json/SaveBillingFeatureInterest": {
      "post": {
        "tags": [ "BillingTiers" ],
        "description": "\r\n            Saves billing feature for current install.\r\n            ",
        "operationId": "SaveBillingFeatureInterest",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveBillingFeatureInterestRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveBillingFeatureInterestResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/BillingTiers.svc/json/GetDefaultBillingTiers": {
      "post": {
        "tags": [ "BillingTiers" ],
        "description": "\r\n            Gets default tiers for current install.\r\n            ",
        "operationId": "GetDefaultBillingTiers",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDefaultBillingTiersResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CalendarEntries.svc/json/GetUpcomingEventsForMatter": {
      "post": {
        "tags": [ "CalendarEntries" ],
        "description": "\r\n            Get all upcoming events for a specific matter.\r\n            ",
        "operationId": "GetUpcomingEventsForMatter",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetUpcomingEventsForMatterRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUpcomingEventsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CalendarEntries.svc/json/SyncEvents": {
      "post": {
        "tags": [ "CalendarEntries" ],
        "description": "\r\n            Sync event with the Rocket Matter Outlook plugin. Note: Only for desktop PC version of Microsoft Outlook.\r\n            ",
        "operationId": "SyncEvents",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SyncEventsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SyncEventsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CalendarEntries.svc/json/GetUpcomingEventsForUser": {
      "post": {
        "tags": [ "CalendarEntries" ],
        "description": "\r\n            Get all upcoming events for the current user.\r\n            ",
        "operationId": "GetUpcomingEventsForUser",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetUpcomingEventsForUserRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUpcomingEventsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CalendarEntries.svc/json/SaveCalendarEntry": {
      "post": {
        "tags": [ "CalendarEntries" ],
        "description": "\r\n            Create a new calendar event.\r\n            ",
        "operationId": "SaveCalendarEntry",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveCalendarEntryRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveCalendarEntryResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CalendarEntries.svc/json/CheckContactAvailability": {
      "post": {
        "tags": [ "CalendarEntries" ],
        "description": "\r\n            Check a contact(s) calendar availability.\r\n            ",
        "operationId": "CheckContactAvailability",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CheckContactAvailabilityRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/CheckContactAvailabilityResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CalendarEntries.svc/json/GetCalendarEntry": {
      "post": {
        "tags": [ "CalendarEntries" ],
        "description": "\r\n            Get a specific calendar event based on ID.\r\n            ",
        "operationId": "GetCalendarEntry",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetCalendarEntryRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetCalendarEntryResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CalendarEntries.svc/json/DeleteCalendarEntry": {
      "post": {
        "tags": [ "CalendarEntries" ],
        "description": "\r\n            Delete a specific calendar event, or series of recurring events.\r\n            ",
        "operationId": "DeleteCalendarEntry",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteCalendarEntryRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteCalendarEntryResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CalendarEntries.svc/json/GetCalendarEntriesForDateRange": {
      "post": {
        "tags": [ "CalendarEntries" ],
        "description": "\r\n            See user(s) calendar events for a specific date range and/or a specific matter.\r\n            ",
        "operationId": "GetCalendarEntriesForDateRange",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetCalendarEntriesForDateRangeRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetCalendarEntriesForDateRangeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CalendarEntries.svc/json/GetCalendarEntriesDates": {
      "post": {
        "tags": [ "CalendarEntries" ],
        "description": "\r\n            Get all event dates for specific user(s).\r\n            ",
        "operationId": "GetCalendarEntriesDates",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetCalendarEntriesForDateRangeRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetCalendarEntriesDatesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Clients.svc/json/Save": {
      "post": {
        "tags": [ "Clients" ],
        "description": "\r\n            Create a new client by specifying all attributes.\r\n            ",
        "operationId": "SaveClients",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ClientSaveRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/ClientSaveResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Clients.svc/json/CreateClientFromString": {
      "post": {
        "tags": [ "Clients" ],
        "description": "\r\n            Create a new client with only the client name.\r\n            ",
        "operationId": "CreateClientFromString",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateClientFromStringRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/CreateClientFromStringResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Clients.svc/json/GetCountries": {
      "post": {
        "tags": [ "Clients" ],
        "description": "\r\n            See a list of all available countries.\r\n            ",
        "operationId": "GetCountries",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetCountriesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetCountriesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Clients.svc/json/GetAllClients": {
      "post": {
        "tags": [ "Clients" ],
        "description": "\r\n            See a list of all clients.\r\n            ",
        "operationId": "GetAllClients",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetAllClientsReponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Clients.svc/json/Search": {
      "post": {
        "tags": [ "Clients" ],
        "description": "\r\n            Search through all existing clients by text keyword.\r\n            ",
        "operationId": "Search",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SearchClientsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SearchClientsReponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Clients.svc/json/SearchClientAndPotentialClients": {
      "post": {
        "tags": [ "Clients" ],
        "description": "\r\n            Search through existing clients and potential clients by text keyword.\r\n            ",
        "operationId": "SearchClientAndPotentialClients",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SearchClientsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SearchClientsReponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Clients.svc/json/SearchClientIncludePendingClients": {
      "post": {
        "tags": [ "Clients" ],
        "description": "\r\n            Search through existing clients and pending clients by text keyword.\r\n            ",
        "operationId": "SearchClientIncludePendingClients",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SearchClientsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SearchClientsReponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Clients.svc/json/GetClientByCode": {
      "post": {
        "tags": [ "Clients" ],
        "description": "\r\n            Find a client by name.\r\n            ",
        "operationId": "GetClientByCode",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetClientByCodeRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetClientByCodeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Clients.svc/json/GetMatterReadOnlyRelationshipsForClient": {
      "post": {
        "tags": [ "Clients" ],
        "description": "\r\n            See all relationships for a client.\r\n            ",
        "operationId": "GetMatterReadOnlyRelationshipsForClient",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterReadOnlyRelationshipsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterReadOnlyRelationshipsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Clients.svc/json/GetClientsByIds": {
      "post": {
        "tags": [ "Clients" ],
        "description": "\r\n            Get specific client(s) by ID.\r\n            ",
        "operationId": "GetClientsByIds",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetClientsByIdsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetClientsByIdsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/DeleteChannel": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Delete a previously created communicator channel. The account used to delete must have admin rights to delete the channel.\r\n            ",
        "operationId": "DeleteChannel",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteChannelRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/BaseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/SetEmailAlertReminder": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Notify users of new messages over email. ** This method is now obsolete DO NOT USE.\r\n            ",
        "operationId": "SetEmailAlertReminder",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SetEmailAlertReminderRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/BaseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/DeleteMessage": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Delete direct or channel messages by specifying the message Id. Only messages generated by the requester account can be deleted.\r\n            ",
        "operationId": "DeleteMessage",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteMessageRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/BaseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/EditMessage": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Alter the message text of a previously generated message.\r\n            ",
        "operationId": "EditMessage",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/EditMessageRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/BaseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/MatterChannelSubscription": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Subscribe or un-subscribe to matter channels. \r\n            ",
        "operationId": "MatterChannelSubscription",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MatterChannelSubscriptionRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/BaseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/GeFileUploadUrl": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Get URLs to use for updating from JavaScript client.\r\n            ",
        "operationId": "GeFileUploadUrl",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GeFileUploadUrlRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GeFileUploadUrlResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/GetChannelInfo": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Get summary information about specific communicator channel.\r\n            ",
        "operationId": "GetChannelInfo",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetChannelInfoRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetChannelInfoResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/GetChannelsIBelongTo": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Get a list of channels the request has is a member of.\r\n            ",
        "operationId": "GetChannelsIBelongTo",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetChannelsIBelongToRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetChannelsIBelongToResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/SaveChannel": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Use for creating and editing communicator channels.\r\n            ",
        "operationId": "SaveChannel",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveChannelRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveChannelResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/ReadAllMessagesFromSomeone": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Mark all messages for the requestor from a specific person as read.\r\n            ",
        "operationId": "ReadAllMessagesFromSomeone",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ReadAllMessagesFromSomeoneRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/ReadAllMessagesFromSomeoneResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/ReadAllMessagesFromChannel": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Mark all messages for the requestor from a specific channel as read.\r\n            ",
        "operationId": "ReadAllMessagesFromChannel",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ReadAllMessagesFromChannelRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/ReadAllMessagesFromChannelResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/GetUnreadChannelMessages": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Get a list of all channels\\counts for the requestor with unread messages.\r\n            ",
        "operationId": "GetUnreadChannelMessages",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUnreadChannelMessagesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/GetUnreadDirectMessages": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Get a list of all user\\counts for the requestor with unread messages.\r\n            ",
        "operationId": "GetUnreadDirectMessages",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUnreadDirectMessagesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/GetDirectChat": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Get chat details for a direct chat user to user.\r\n            ",
        "operationId": "GetDirectChat",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetDirectChatRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDirectChatResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/GetChannelChat": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Get chat details for a channel chat.\r\n            ",
        "operationId": "GetChannelChat",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetChannelChatRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetChannelChatResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/SendDirectMessage": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Send chat message to a direct user.\r\n            ",
        "operationId": "SendDirectMessage",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SendDirectMessageRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SendDirectMessageResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/SendChannelMessage": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Send chat message to a channel.\r\n            ",
        "operationId": "SendChannelMessage",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SendChannelMessageRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SendChannelMessageResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Communicator.svc/json/GetUsers": {
      "post": {
        "tags": [ "Communicator" ],
        "description": "\r\n            Get list of users available for chat.\r\n            ",
        "operationId": "GetUsers",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetUsersRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUsersResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/DeleteContactCustomField": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Delete custom fields for a particular contact.\r\n            ",
        "operationId": "DeleteContactCustomField",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteContactCustomFieldRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/BaseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/SaveContactCustomFields": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Create or update an existing custom field for a contact.\r\n            ",
        "operationId": "SaveContactCustomFields",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveContactCustomFieldsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveContactCustomFieldsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/GetContactCustomFields": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            View custom fields for a contact.\r\n            ",
        "operationId": "GetContactCustomFields",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetContactCustomFieldsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetContactCustomFieldsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/GetClientByCode": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            View a client by name.\r\n            ",
        "operationId": "GetClientByCode",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetClientByCodeRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetClientByCodeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/IsReceivingInvoicesBySpecifiedEmailType": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            View if a contact receives invoices and payment correspondence at their \"Home\" or \"Work\" email address.\r\n            ",
        "operationId": "IsReceivingInvoicesBySpecifiedEmailType",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/IsReceivingInvoicesBySpecifiedEmailTypeRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/IsReceivingInvoicesBySpecifiedEmailTypeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/UpdateShareInvoiceSettingsToOtherEmail": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Change a contact's preferred email address type to receive invoices and payment correspondence.\r\n            ",
        "operationId": "UpdateShareInvoiceSettingsToOtherEmail",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateShareInvoiceSettingsToOtherEmailRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UpdateShareInvoiceSettingsToOtherEmailResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/GetContactByID": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Get a contact by ID.\r\n            ",
        "operationId": "GetContactByID",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetContactByIDRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetContactByIDResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/GetPersonContacts": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Get a list of all contacts that are of \"person\" type.\r\n            ",
        "operationId": "GetPersonContacts",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetPersonContactsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/SearchPersonContacts": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Search for a \"person\" contact using text.\r\n            ",
        "operationId": "SearchPersonContacts",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SearchPersonContactsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SearchPersonContactsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/SearchContacts": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Search for contacts by text.\r\n            ",
        "operationId": "SearchContacts",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SearchContactsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SearchContactsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/SearchOriginator": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Search for contact originator by text.\r\n            ",
        "operationId": "SearchOriginator",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SearchOriginatorRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SearchOriginatorResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/SearchPortalContacts": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Search for Portal contacts by text keyword.\r\n            ",
        "operationId": "SearchPortalContacts",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SearchContactsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SearchPersonContactsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/GetByFullName": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Find contact using full name.\r\n            ",
        "operationId": "GetByFullName",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetContactByFullNameRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetContactByFullNameResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/Save": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Create or update an existing custom field for a contact.\r\n            ",
        "operationId": "SaveContacts",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveContactRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveContactResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/GetDefaultContactData": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Get all contact custom fields and related contacts.\r\n            ",
        "operationId": "GetDefaultContactData",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDefaultContactDataResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/GetContactData": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Get a contact's information, custom fields, and related contacts.\r\n            ",
        "operationId": "GetContactData",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetContactDataRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetContactDataResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/SaveContactData": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Save custom fields and related contacts to a contact.\r\n            ",
        "operationId": "SaveContactData",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveContactDataRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveContactDataResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/SearchCustomFields": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Search for contact custom fields by text.\r\n            ",
        "operationId": "SearchCustomFields",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SearchCustomFieldsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SearchCustomFieldsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/GetContacts": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Get contacts by text.\r\n            ",
        "operationId": "GetContacts",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetContactsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetContactsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Contacts.svc/json/DeleteContact": {
      "post": {
        "tags": [ "Contacts" ],
        "description": "\r\n            Delete custom fields for a particular contact.\r\n            ",
        "operationId": "DeleteContact",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteContactRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteContactResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CourtRules.svc/json/TriggerMockDeadlineUpdate": {
      "post": {
        "tags": [ "CourtRules" ],
        "description": "\r\n            Simulate court rule event change, this can be used to simulate email notifications when deadlines change in LawToolBox.\r\n            ",
        "operationId": "TriggerMockDeadlineUpdate",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/TriggerMockDeadlineUpdateRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/TriggerMockDeadlineUpdateResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CourtRules.svc/json/GetMatterCourtRuleEvents": {
      "post": {
        "tags": [ "CourtRules" ],
        "description": "\r\n            Get remaining matter court rule events.\r\n            ",
        "operationId": "GetMatterCourtRuleEvents",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterCourtRuleEventsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterCourtRuleEventsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CourtRules.svc/json/GetCourtRule": {
      "post": {
        "tags": [ "CourtRules" ],
        "description": "\r\n            Get jurisdiction by Id.\r\n            ",
        "operationId": "GetCourtRule",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetCourtRuleRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetCourtRuleResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CourtRules.svc/json/DeleteMatterCourtRule": {
      "post": {
        "tags": [ "CourtRules" ],
        "description": "\r\n            Disassociate matter court rule.\r\n            ",
        "operationId": "DeleteMatterCourtRule",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteMatterCourtRuleRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteMatterCourtRuleResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CourtRules.svc/json/GetMatterCourtRules": {
      "post": {
        "tags": [ "CourtRules" ],
        "description": "\r\n            Get associated matter court rule information.\r\n            ",
        "operationId": "GetMatterCourtRules",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterCourtRulesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterCourtRulesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CourtRules.svc/json/AddMatterCourtRule": {
      "post": {
        "tags": [ "CourtRules" ],
        "description": "\r\n            Attach calculated deadlines to matters and bind associated court rule information.\r\n            ",
        "operationId": "AddMatterCourtRule",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/AddMatterCourtRuleRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/AddMatterCourtRuleReponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CourtRules.svc/json/CalculateDeadlines": {
      "post": {
        "tags": [ "CourtRules" ],
        "description": "\r\n            Calculate deadlines and retrieve a list of deadline recommendations.\r\n            ",
        "operationId": "CalculateDeadlines",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CalculateDeadlinesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/CalculateDeadlinesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CourtRules.svc/json/GetTriggerEvents": {
      "post": {
        "tags": [ "CourtRules" ],
        "description": "\r\n            Get trigger events based on tool set.\r\n            ",
        "operationId": "GetTriggerEvents",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTriggerEventsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CourtRules.svc/json/GetAvailableCourtRules": {
      "post": {
        "tags": [ "CourtRules" ],
        "description": "\r\n            Search available jurisdictions.\r\n            ",
        "operationId": "GetAvailableCourtRules",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetAvailableCourtRulesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetAvailableCourtRulesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CourtRules.svc/json/GetCourtRuleDefault": {
      "post": {
        "tags": [ "CourtRules" ],
        "description": "\r\n            Get jurisdiction default preference.\r\n            ",
        "operationId": "GetCourtRuleDefault",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetCourtRuleDefaultResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CourtRules.svc/json/GetCourtRules": {
      "post": {
        "tags": [ "CourtRules" ],
        "description": "\r\n            Get saved jurisdictions and subscription information.\r\n            ",
        "operationId": "GetCourtRules",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetCourtRulesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/CourtRules.svc/json/SaveCourtRules": {
      "post": {
        "tags": [ "CourtRules" ],
        "description": "\r\n            Save selected jurisdiction preferences.\r\n            ",
        "operationId": "SaveCourtRules",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveCourtRulesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Discounts.svc/json/Save": {
      "post": {
        "tags": [ "Discounts" ],
        "description": "\r\n            Create or update a discount configuration for a matter.\r\n            ",
        "operationId": "SaveDiscounts",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveDiscountConfigurationRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveDiscountConfigurationResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Discounts.svc/json/GetAll": {
      "post": {
        "tags": [ "Discounts" ],
        "description": "\r\n            View all discount configurations.\r\n            ",
        "operationId": "GetAll",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetAllDiscountsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/UploadDocument": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Upload document(s) to a specified Matter. \r\n            ",
        "operationId": "UploadDocument",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UploadDocumentResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/GetDocumentsInPath": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Shows all documents that are in specified given path. Returns root path if MatterId is null.\r\n            ",
        "operationId": "GetDocumentsInPath",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetDocumentsInPathRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDocumentsInPathResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/Save": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Saves document to matter in specified directory. If directory is null, document will be saved to root directory.\r\n            ",
        "operationId": "SaveDocuments",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveDocumentRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveDocumentResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/GetDocument": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Shows all documents that are in specified given path. Returns root path if MatterId is null.\r\n            ",
        "operationId": "GetDocument",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetDocumentRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDocumentResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/GetDirectories": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Retrieves all directories of folders from a specified Matter.\r\n            ",
        "operationId": "GetDirectories",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetDirectoriesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDirectoriesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/MoveDocumentsToFolder": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Moves document to folder in specified Matter. Note: Cannot move invoices and billed documents from one matter to another.\r\n            ",
        "operationId": "MoveDocumentsToFolder",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MoveDocumentsToFolderRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/MoveDocumentsToFolderResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/RenameFolder": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Renames specified folder to the new desired name. Note: Folder names must be unique in each matter.\r\n            ",
        "operationId": "RenameFolder",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/RenameFolderRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/RenameFolderResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/GetInvoicedDocuments": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Retrieves all invoices within the same matter where the document specified is.\r\n            ",
        "operationId": "GetInvoicedDocuments",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetInvoicedDocumentsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetInvoicedDocumentsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/DeleteDocument": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Deletes document and logs deletion notification to the matter communicator channel.\r\n            ",
        "operationId": "DeleteDocument",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteDocumentRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteDocumentResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/DeleteNote": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Deletes note and logs deletion notification to the matter stream.\r\n            ",
        "operationId": "DeleteNote",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteNoteRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteNoteResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/GetPortalDocumentContacts": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Retrieves document and portal users full name based on ActivityId.\r\n            ",
        "operationId": "GetPortalDocumentContacts",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetPortalDocumentContactsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetPortalDocumentContactsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/SavePortalDocumentContacts": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Saves document to portal for user. Sends notification to portal user once document is uploaded.\r\n            ",
        "operationId": "SavePortalDocumentContacts",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SavePortalDocumentContactsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SavePortalDocumentContactsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/GetDocumentUploadUrl": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Generates document URL to upload document to specified matter.\r\n            ",
        "operationId": "GetDocumentUploadUrl",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetDocumentUploadUrlRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDocumentUploadUrlResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/GetInvoiceTempateUploadUrl": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Generates invoice URL to upload document to specified matter.\r\n            ",
        "operationId": "GetInvoiceTempateUploadUrl",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetDocumentUploadUrlRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDocumentUploadUrlResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/SaveDocumentsForMatter": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Save multiple documents to a specified matter and logs activity created notification to the matter stream.\r\n            ",
        "operationId": "SaveDocumentsForMatter",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveDocumentsForMatterRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveDocumentsForMatterResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/GetDocumentFileInfo": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Retrieves document info including file URL based on DocumentId.\r\n            ",
        "operationId": "GetDocumentFileInfo",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetDocumentFileInfoRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDocumentFileInfoResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/GetDownloadKey": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Returns file name and file url of document.\r\n            ",
        "operationId": "GetDownloadKey",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DownloadDocumentRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDownloadKeyResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/SetDocumentIntegrationFolder": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Sets integration folder for Matter. Requires current document integration (Dropbox, Box, Evernote, etc..)\r\n            ",
        "operationId": "SetDocumentIntegrationFolder",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SetDocumentIntegrationFolderRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SetDocumentIntegrationFolderResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/GetDocumentIntegration": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Retrieves document integrations for specified matter. (Dropbox, Box, Evernote, etc..)\r\n            ",
        "operationId": "GetDocumentIntegration",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetDocumentIntegrationRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDocumentIntegrationResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/DeleteDocumentsInPath": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Deletes all documents in given path in specified matter.\r\n            ",
        "operationId": "DeleteDocumentsInPath",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteDocumentsInPathRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteDocumentsInPathResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/DocumentContentsChanged": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Compares file contents of given file to what is stored. Returns true if file contents have changed.\r\n            ",
        "operationId": "DocumentContentsChanged",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DocumentContentsChangedRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DocumentContentsChangedResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Documents.svc/json/GetDocumentVersions": {
      "post": {
        "tags": [ "Documents" ],
        "description": "\r\n            Retrieves document version info based on DocumentId.\r\n            ",
        "operationId": "GetDocumentVersions",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetDocumentVersionsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDocumentVersionsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/DocumentTemplates.svc/json/GetDocumentTemplates": {
      "post": {
        "tags": [ "DocumentTemplates" ],
        "description": "\r\n            Get document template by name or tags for merging.\r\n            ",
        "operationId": "GetDocumentTemplates",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetDocumentTemplatesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDocumentTemplatesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/DocumentTemplates.svc/json/DeleteDocumentTemplate": {
      "post": {
        "tags": [ "DocumentTemplates" ],
        "description": "\r\n            Delete a specific document template.\r\n            ",
        "operationId": "DeleteDocumentTemplate",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteDocumentTemplateRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteDocumentTemplateResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Features.svc/json/GetFirmFeatures": {
      "post": {
        "tags": [ "Features" ],
        "description": "\r\n            Retrieves features for current firm. Will show if features are enabled or disabled.\r\n            ",
        "operationId": "GetFirmFeatures",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetFirmFeaturesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Features.svc/json/SetDocumentVersions": {
      "post": {
        "tags": [ "Features" ],
        "description": "\r\n            Enables document versions. Requires admin access and to be an admin user.\r\n            ",
        "operationId": "SetDocumentVersions",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SetDocumentVersionsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SetDocumentVersionsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/FirmRoles.svc/json/GetFirmRoles": {
      "post": {
        "tags": [ "FirmRoles" ],
        "description": "\r\n            Retrieves firm roles for users. Requires admin access and is an admin user.\r\n            ",
        "operationId": "GetFirmRoles",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetFirmRolesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetFirmRolesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/FirmRoles.svc/json/SaveFirmRoles": {
      "post": {
        "tags": [ "FirmRoles" ],
        "description": "\r\n            Saves firm roles for users. Requires admin access and is an admin user.\r\n            ",
        "operationId": "SaveFirmRoles",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetFirmRolesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetFirmRolesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/FirmRoles.svc/json/SaveFirmRole": {
      "post": {
        "tags": [ "FirmRoles" ],
        "description": "\r\n            Saves firm roles for users. Requires admin access and is an admin user.\r\n            ",
        "operationId": "SaveFirmRole",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveFirmRoleRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveFirmRoleResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/FirmRoles.svc/json/DeleteFirmRole": {
      "post": {
        "tags": [ "FirmRoles" ],
        "description": "\r\n            Deletes firm role for user. Requires admin access and is an admin user.\r\n            ",
        "operationId": "DeleteFirmRole",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteFirmRoleRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteFirmRoleResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/FirmRoles.svc/json/FirmRolesRatesCanEdit": {
      "post": {
        "tags": [ "FirmRoles" ],
        "description": "\r\n            Returns value if user can edit firm role. Requires admin access and is an admin user.\r\n            ",
        "operationId": "FirmRolesRatesCanEdit",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/FirmRolesRatesCanEditRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/FirmRolesRatesCanEditResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/FirmRoles.svc/json/GetClientRoleRates": {
      "post": {
        "tags": [ "FirmRoles" ],
        "description": "\r\n            Returns client role rates based on ContactId. Requires admin access and is an admin user.\r\n            ",
        "operationId": "GetClientRoleRates",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetClientRoleRatesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetClientRoleRatesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/FirmRoles.svc/json/SaveClientRoleRates": {
      "post": {
        "tags": [ "FirmRoles" ],
        "description": "\r\n            Saves client role rates based on list of client role rates. Requires admin access and is an admin user.\r\n            ",
        "operationId": "SaveClientRoleRates",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveClientRoleRatesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveClientRoleRatesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Interests.svc/json/Save": {
      "post": {
        "tags": [ "Interests" ],
        "description": "\r\n            Saves and updates interest configuration for firm. \r\n            ",
        "operationId": "SaveInterests",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveInterestConfigurationRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveInterestConfigurationResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Interests.svc/json/GetAll": {
      "post": {
        "tags": [ "Interests" ],
        "description": "\r\n            Retrieves all interest rate configurations for firm.\r\n            ",
        "operationId": "GetAll",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetAllInterestRatesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Interests.svc/json/ChargeInterestFees": {
      "post": {
        "tags": [ "Interests" ],
        "description": "\r\n            Applies interest charges to all matters up to given date.\r\n            ",
        "operationId": "ChargeInterestFees",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ChargeInterestFeesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/ChargeInterestFeesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/DropBox.svc/json/GetDropBoxUri": {
      "post": {
        "tags": [ "DropBox" ],
        "description": "\r\n            Retrieves authorization for DropBox based on CurrentUserId.\r\n            ",
        "operationId": "GetDropBoxUri",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetDropBoxUriRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDropBoxUriResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/SaveRetainerRequest": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Sends retainer request email to contact.\r\n            ",
        "operationId": "SaveRetainerRequest",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveRetainerRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveRetainerRequestResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/DestoryPaymentPlanChargetoken": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Sets PlanId to a new PlanId for Payment Processor Service.\r\n            ",
        "operationId": "DestoryPaymentPlanChargetoken",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DestoryPaymentPlanChargetokenRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DestoryPaymentPlanChargetokenResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/GetCustomPaymentPlanReceiptEmail": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Retrieves custom payment plan receipt email for firm. \r\n            ",
        "operationId": "GetCustomPaymentPlanReceiptEmail",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetCustomPaymentPlanReceiptEmailResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/SetCustomPaymentPlanReceiptEmail": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Saves custom payment plan receipt email for firm. \r\n            ",
        "operationId": "SetCustomPaymentPlanReceiptEmail",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SetCustomPaymentPlanReceiptEmailResquest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SetCustomPaymentPlanReceiptEmailResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/GetRequestRetainerPaymentEmail": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Retrieves request retainer payment email for firm. \r\n            ",
        "operationId": "GetRequestRetainerPaymentEmail",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetRequestRetainerPaymentEmailResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/GetCustomRefundEmail": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Retrieves custom refund email for firm. \r\n            ",
        "operationId": "GetCustomRefundEmail",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetCustomRefundEmailResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/SetCustomRefundEmail": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Saves custom refund email for firm. \r\n            ",
        "operationId": "SetCustomRefundEmail",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SetCustomRefundEmailResquest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SetCustomRefundEmailResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/ProcessRefund": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Processes refund with given TransactionId. Will process refund for Payment Processor as well.\r\n            ",
        "operationId": "ProcessRefund",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ProcessRefundRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/ProcessRefundResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/GetTransactionInfo": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Retrieves payment processor transaction info with given TransactionId.\r\n            ",
        "operationId": "GetTransactionInfo",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetTransactionInfoRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTransactionInfoResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/GetMostRecentInvoiceInfoByClient": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Retrieves invoice info of the last invoice processed by client. \r\n            ",
        "operationId": "GetMostRecentInvoiceInfoByClient",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMostRecentInvoiceInfoByClientRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMostRecentInvoiceInfoByClientResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/GetPaymentProcessor": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Retrieves payment processor(s) which were enabled and configured at one point for the firm. \r\n            ",
        "operationId": "GetPaymentProcessor",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetPaymentProcessorResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/SetPaymentProcessor": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Saves and enables given payment processor. \r\n            ",
        "operationId": "SetPaymentProcessor",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SetPaymentProcessorRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SetPaymentProcessorResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/GetCustomInvoicePaymentEmail": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Retrieves custom invoice payment email for firm.\r\n            ",
        "operationId": "GetCustomInvoicePaymentEmail",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetCustomInvoicePaymentEmailResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/SetRequestRetainerPaymentmail": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Saves and updates the request retainer payment email for firm. \r\n            ",
        "operationId": "SetRequestRetainerPaymentmail",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SetRequestRetainerPaymentmailResquest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SetRequestRetainerPaymentEmailResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/SetCustomInvoicePaymentEmail": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Saves and updates the custom invoice payment email for firm. \r\n            ",
        "operationId": "SetCustomInvoicePaymentEmail",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SetCustomInvoicePaymentEmailResquest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SetCustomInvoicePaymentEmailResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/GetCustomInvoicePaymentReceiptEmail": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Retrieves custom invoice payment receipt email. \r\n            ",
        "operationId": "GetCustomInvoicePaymentReceiptEmail",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetCustomInvoicePaymentReceiptEmailResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/SetCustomInvoicePaymentReceiptEmail": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Saves and updates the custom invoice payment receipt email for firm. \r\n            ",
        "operationId": "SetCustomInvoicePaymentReceiptEmail",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SetCustomInvoicePaymentReceiptEmailResquest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SetCustomInvoicePaymentReceiptEmailResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/deleteInvoiceTemplate": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Deletes invoice template based on id of Invoice Template.\r\n            ",
        "operationId": "deleteInvoiceTemplate",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/deleteInvoiceTemplateRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/deleteInvoiceTemplateResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/getAvailableInvoiceTemplates": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Retrieves all invoice templates for firm that are both inactive and active.\r\n            ",
        "operationId": "getAvailableInvoiceTemplates",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/getAvailableInvoiceTemplatesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/getAvailableInvoiceTemplatesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/RunInvoice": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Process an individual invoice for a matter.\r\n            ",
        "operationId": "RunInvoice",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/RunInvoiceRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/RunInvoiceResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/RecordPaymentsToInvoices": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Processes payments and attaches to multiple invoices.\r\n            ",
        "operationId": "RecordPaymentsToInvoices",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/RecordPaymentsToInvoicesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/RecordPaymentsToInvoicesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/GetInvoicePaymentsForMatter": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Retrieves payments that were applied to invoices for a specified matter.\r\n            ",
        "operationId": "GetInvoicePaymentsForMatter",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetInvoicePaymentsForMatterRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetInvoicePaymentsForMatterResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/DeletePayment": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Deletes payment that was applied to a specified matter.\r\n            ",
        "operationId": "DeletePayment",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeletePaymentRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeletePaymentResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/GetPaymentsForMatter": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Retrieves all payments that were processed for a given matter. \r\n            ",
        "operationId": "GetPaymentsForMatter",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetPaymentsForMatterRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetPaymentsForMatterResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/GetMattersForInvoiceTemplate": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Retrieves invoice template id for given matter.\r\n            ",
        "operationId": "GetMattersForInvoiceTemplate",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMattersForInvoiceTemplateRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMattersForInvoiceTemplateResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/ValidateInvoiceTemplate": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Validates merge fields on invoice template.\r\n            ",
        "operationId": "ValidateInvoiceTemplate",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ValidateInvoiceTemplateRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/ValidateInvoiceTemplateResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/ValidateInvoiceTemplateName": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Validates name of invoice template to check if invoice template name already exists.\r\n            ",
        "operationId": "ValidateInvoiceTemplateName",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ValidateInvoiceTemplateNameRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/ValidateInvoiceTemplateNameResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Invoices.svc/json/SaveInvoiceTemplate": {
      "post": {
        "tags": [ "Invoices" ],
        "description": "\r\n            Saves invoice template to firm template section.\r\n            ",
        "operationId": "SaveInvoiceTemplate",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveInvoiceTemplateRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveInvoiceTemplateResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/DeleteMatterCustomField": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Delete matter custom field(s) by name for a specific matter.\r\n            ",
        "operationId": "DeleteMatterCustomField",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteMatterCustomFieldRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/BaseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/SaveMatterCustomFields": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Save a new matter custom field.\r\n            ",
        "operationId": "SaveMatterCustomFields",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveMatterCustomFieldsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveMatterCustomFieldsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/GetMatterCustomFields": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Get all matter custom fields for a specific matter.\r\n            ",
        "operationId": "GetMatterCustomFields",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterCustomFieldsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterCustomFieldsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/SaveMatterSharedInvoiceSettings": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Set a contact preference to share matter invoices for a particular matter.\r\n            ",
        "operationId": "SaveMatterSharedInvoiceSettings",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveMatterSharedInvoiceSettingsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveMatterSharedInvoiceSettingsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/GetMatterSharedInvoiceSettings": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Get matter shared invoice settings by ID.\r\n            ",
        "operationId": "GetMatterSharedInvoiceSettings",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterSharedInvoiceSettingsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterSharedInvoiceSettingsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/GetMatterNextTemplateByStatusSelection": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Get the next matter template based on matter status history.\r\n            ",
        "operationId": "GetMatterNextTemplateByStatusSelection",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterNextTemplateByStatusSelectionRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterNextTemplateByStatusSelectionResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/Get": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Get all matter custom fields for a specific matter.\r\n            ",
        "operationId": "Get",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MatterGetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/MatterGetResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/Save": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Save a new matter custom field.\r\n            ",
        "operationId": "SaveMatters",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MatterSaveRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/MatterSaveResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/DoesClientMatterExists": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Verify if a client and matter exisits.\r\n            ",
        "operationId": "DoesClientMatterExists",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DoesClientMatterExistsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DoesClientMatterExistsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/GetMattersBySearch": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Search for matters using text.\r\n            ",
        "operationId": "GetMattersBySearch",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterBySearchRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterBySearchResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/GetSystemFoldersBySearch": {
      "post": {
        "tags": [ "Matters" ],
        "operationId": "GetSystemFoldersBySearch",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterBySearchRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterBySearchResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/GetMatterBillingInfo": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            View matter billing information; including balances, invoices processed, and pending billable amounts.\r\n            ",
        "operationId": "GetMatterBillingInfo",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterBillingInfoRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterBillingInfoResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/GetMatterBudgetInfo": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            View matter budget amounts.\r\n            ",
        "operationId": "GetMatterBudgetInfo",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterBudgetInfoRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterBudgetInfoResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/GetMatterBudget": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            View matter budget amounts.\r\n            ",
        "operationId": "GetMatterBudget",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterBudgetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterBudgetResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/UpdateMatterBudget": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Update matter budget configuration.\r\n            ",
        "operationId": "UpdateMatterBudget",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateMatterBudgetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UpdateMatterBudgetResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/GetMatterByClientMatter": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Search for a specific client and matter using Client and Matter name.\r\n            ",
        "operationId": "GetMatterByClientMatter",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterByClientMatterNameRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterByClientMatterNameResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/UpdateMatterStatus": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Change a matter's status to \"Open\", \"Closed\", \"Completed\", \"None\", or \"All\".\r\n            ",
        "operationId": "UpdateMatterStatus",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateMatterStatusRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UpdateMatterStatusResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/SearchCustomFields": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Search for matter custom fields by text.\r\n            ",
        "operationId": "SearchCustomFields",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SearchCustomFieldsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SearchCustomFieldsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/GetEffectiveRatesForMatterFromDate": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            View a matter's tax rates.\r\n            ",
        "operationId": "GetEffectiveRatesForMatterFromDate",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetEffectiveRatesForMatterRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetEffectiveRatesForMatterResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/GetMatterEmailFolders": {
      "post": {
        "tags": [ "Matters" ],
        "operationId": "GetMatterEmailFolders",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterEmailFoldersResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/DeleteMatter": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Delete matter custom field(s) by name for a specific matter.\r\n            ",
        "operationId": "DeleteMatter",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteMatterRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteMatterResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Matters.svc/json/GetDetailsForMatter": {
      "post": {
        "tags": [ "Matters" ],
        "description": "\r\n            Get additional details for a matter, such as: discounts, email folders, interest rates, surcharge rates, taxes, invoice templates,\r\n            and any matter templates being used.\r\n            ",
        "operationId": "GetDetailsForMatter",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDetailsForMatterResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplateDateOptions.svc/json/GetAll": {
      "post": {
        "tags": [ "MatterTemplateDateOptions" ],
        "description": "\r\n            Gets all available date options.\r\n            ",
        "operationId": "GetAll",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/MatterTemplateDateOptionsGetResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplateDateOptions.svc/json/GetByGroup": {
      "post": {
        "tags": [ "MatterTemplateDateOptions" ],
        "description": "\r\n            Gets the available date options for any of the following 'Event', 'Task', 'MatterDetail'.\r\n            ",
        "operationId": "GetByGroup",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MatterTemplateDateOptionsGetByDisplayGroupRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/MatterTemplateDateOptionsGetByDisplayGroupResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplateDateOptions.svc/json/GetMatterTemplateDateOptionDetails": {
      "post": {
        "tags": [ "MatterTemplateDateOptions" ],
        "description": "\r\n            Gets all date options grouped by the different types of actions.\r\n            ",
        "operationId": "GetMatterTemplateDateOptionDetails",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterTemplateDateOptionDetailsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplateDateOptions.svc/json/Get": {
      "post": {
        "tags": [ "MatterTemplateDateOptions" ],
        "description": "\r\n            Gets all available date options.\r\n            ",
        "operationId": "Get",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MatterTemplateDateOptionGetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/MatterTemplateDateOptionGetResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplateMilestoneActions.svc/json/GetActionForItem": {
      "post": {
        "tags": [ "MatterTemplateMilestoneActions" ],
        "description": "\r\n            Retrieves the milestone dependency, if any, that the event or task has to another event/task. If it has no dependency the ActionItem will be null.\r\n            ",
        "operationId": "GetActionForItem",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetActionForItemRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetActionForItemResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplateMilestoneActions.svc/json/DetachMilestoneAction": {
      "post": {
        "tags": [ "MatterTemplateMilestoneActions" ],
        "description": "\r\n            Removes the dependency of the task or event from the task/event that it is a dependent of.\r\n            ",
        "operationId": "DetachMilestoneAction",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DetachMilestoneActionRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DetachMilestoneActionResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplateMilestoneActions.svc/json/CheckMilestoneUpdateStatus": {
      "post": {
        "tags": [ "MatterTemplateMilestoneActions" ],
        "description": "\r\n            Check if the event or task dates can be changed based on any dependency it may have. If the task/event is dependent on another task/event, it cannot be updated and CanUpdate will return false. If the task/event has child dependencies based on its date, CanUpdate will also return false and Items will contain all the child dependencies of the given task/event.\r\n            ",
        "operationId": "CheckMilestoneUpdateStatus",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CheckMilestoneUpdateStatusRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/CheckMilestoneUpdateStatusResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplateMilestoneActions.svc/json/RemoveChildMilestoneActionItems": {
      "post": {
        "tags": [ "MatterTemplateMilestoneActions" ],
        "description": "\r\n            Disassociates all child dependencies from the task or event.\r\n            ",
        "operationId": "RemoveChildMilestoneActionItems",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/RemoveChildMilestoneActionItemsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/RemoveChildMilestoneActionItemsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplateMilestoneActions.svc/json/UpdateChildMilestoneDates": {
      "post": {
        "tags": [ "MatterTemplateMilestoneActions" ],
        "description": "\r\n            Updates all child dependencies by cascading the change in the date of the task or event down to all dependencies.\r\n            ",
        "operationId": "UpdateChildMilestoneDates",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateChildMilestoneDatesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UpdateChildMilestoneDatesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplates.svc/json/Exists": {
      "post": {
        "tags": [ "MatterTemplates" ],
        "description": "\r\n            Checks if the matter template name already exists.\r\n            ",
        "operationId": "Exists",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MatterTemplateExistsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/MatterTemplateExistsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplates.svc/json/GetFutureDate": {
      "post": {
        "tags": [ "MatterTemplates" ],
        "description": "\r\n            Calculates the date in the future bases on the time period and amount of units, after specific date or after \r\n            specific business days.\r\n            ",
        "operationId": "GetFutureDate",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetFutureDateRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetFutureDateResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplates.svc/json/GetAll": {
      "post": {
        "tags": [ "MatterTemplates" ],
        "description": "\r\n            Gets all matter templates for the firm including their tasks and events details.\r\n            ",
        "operationId": "GetAll",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/MatterTemplatesGetAllResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplates.svc/json/GetAllBase": {
      "post": {
        "tags": [ "MatterTemplates" ],
        "description": "\r\n            Gets all matter templates for the firm only including base information such as name, description and number of tasks or events. This doesn't retrieve the event or task details.\r\n            ",
        "operationId": "GetAllBase",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/MatterTemplatesGetAllResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplates.svc/json/Save": {
      "post": {
        "tags": [ "MatterTemplates" ],
        "description": "\r\n            Saves the matter template, if the template is passed with an Id, it does an update on the matter template with that Id, otherwise it will create a new template.\r\n            ",
        "operationId": "SaveMatterTemplates",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MatterTemplateSaveRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/MatterTemplateSaveResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplates.svc/json/GetNewMatterFromTemplate": {
      "post": {
        "tags": [ "MatterTemplates" ],
        "description": "\r\n            Returns a blank matter build from the matter template Id specified, the matter will not be saved, just built and sent back. The user would have to save the matter by calling the Save method on the matter endpoint.\r\n            ",
        "operationId": "GetNewMatterFromTemplate",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetNewMatterFromTemplateRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetNewMatterFromTemplateResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplates.svc/json/Get": {
      "post": {
        "tags": [ "MatterTemplates" ],
        "description": "\r\n            Calculates the date in the future bases on the time period and amount of units, after specific date or after \r\n            specific business days.\r\n            ",
        "operationId": "Get",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterTemplateRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterTemplateResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplates.svc/json/Delete": {
      "post": {
        "tags": [ "MatterTemplates" ],
        "description": "\r\n            Deletes the matter template by Id.\r\n            ",
        "operationId": "Delete",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteMatterTemplateRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteMatterTemplateResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplates.svc/json/GetSortedTaskAndEventSummary": {
      "post": {
        "tags": [ "MatterTemplates" ],
        "description": "\r\n            Gets the summary of tasks and events sorted by the date they occur relative to their milestones.\r\n            ",
        "operationId": "GetSortedTaskAndEventSummary",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetSortedTaskAndEventSummaryInfoRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetSortedTaskAndEventSummaryInfoResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplates.svc/json/GetMilestonesForItem": {
      "post": {
        "tags": [ "MatterTemplates" ],
        "description": "\r\n            Gets the available milestones that the given task or event can be based on.\r\n            ",
        "operationId": "GetMilestonesForItem",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMilestonesForItemRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMilestoneForItemResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTemplates.svc/json/GetDefaultMatterTemplateRoles": {
      "post": {
        "tags": [ "MatterTemplates" ],
        "description": "\r\n            Gets the system defined matter roles that can be used with the template.\r\n            ",
        "operationId": "GetDefaultMatterTemplateRoles",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetDefaultMatterTemplateRolesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/MatterTypes.svc/json/Get": {
      "post": {
        "tags": [ "MatterTypes" ],
        "description": "\r\n            Get the type of a matter. Results can be \"Hourly\", \"Contingency\", or \"FlatFee\".\r\n            ",
        "operationId": "Get",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MatterTypeGetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/MatterTypeGetResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Messages.svc/json/SavePhoneMessage": {
      "post": {
        "tags": [ "Messages" ],
        "description": "\r\n            Create or update a phone message activity.\r\n            ",
        "operationId": "SavePhoneMessage",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SavePhoneMessageRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SavePhoneMessageResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Messages.svc/json/GetPhoneMessage": {
      "post": {
        "tags": [ "Messages" ],
        "description": "\r\n            View existing phone message(s).\r\n            ",
        "operationId": "GetPhoneMessage",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetPhoneMessageRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetPhoneMessageResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Mobile.svc/json/SaveUserToken": {
      "post": {
        "tags": [ "Mobile" ],
        "description": "\r\n            Saves the user token from a mobile device with a unique DeviceId generated by the mobile app and push notification Token generated from the phone.\r\n            ",
        "operationId": "SaveUserToken",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveUserTokenRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveUserTokenResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Mobile.svc/json/GetUserNotifications": {
      "post": {
        "tags": [ "Mobile" ],
        "description": "\r\n            Gets push notifications for the phone for the specified DeviceId.\r\n            ",
        "operationId": "GetUserNotifications",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetUserNotificationsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUserNotificationsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Mobile.svc/json/DeleteUserNotification": {
      "post": {
        "tags": [ "Mobile" ],
        "description": "\r\n            Deletes a push notification by Id\r\n            ",
        "operationId": "DeleteUserNotification",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteUserNotificationRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteUserNotificationResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Mobile.svc/json/ReadUserNotification": {
      "post": {
        "tags": [ "Mobile" ],
        "description": "\r\n            Sets a notification's state to 'read'.\r\n            ",
        "operationId": "ReadUserNotification",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteUserNotificationRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteUserNotificationResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Mobile.svc/json/SetUserMobilePin": {
      "post": {
        "tags": [ "Mobile" ],
        "description": "\r\n            Saves the Pin for the specified DeviceId.\r\n            ",
        "operationId": "SetUserMobilePin",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SetUserMobilePinRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SetUserMobilePinResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Mobile.svc/json/GetAuthenticationToken": {
      "post": {
        "tags": [ "Mobile" ],
        "description": "\r\n            Generates a unique authentication token for the specified DeviceId, this token can be uses to get a new AccessToken and RefreshToken at any time and it does not expire.\r\n            ",
        "operationId": "GetAuthenticationToken",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetAuthenticationTokenRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetAuthenticationTokenResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Mobile.svc/json/ClearAuthenticationToken": {
      "post": {
        "tags": [ "Mobile" ],
        "description": "\r\n            Removes the authentication token associated with the DeviceId, this is used for cleanup purposes.\r\n            ",
        "operationId": "ClearAuthenticationToken",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetAuthenticationTokenRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetAuthenticationTokenResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Office.svc/json/OfficeConfigured": {
      "post": {
        "tags": [ "Office" ],
        "description": "\r\n            Checks if the user has an Office 365 integration enabled and configured.\r\n            ",
        "operationId": "OfficeConfigured",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/OfficeConfiguredResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Office.svc/json/SyncOutlookEmail": {
      "post": {
        "tags": [ "Office" ],
        "description": "\r\n            Saves the email from Office 365 into the system.\r\n            ",
        "operationId": "SyncOutlookEmail",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SyncOutlookEmailRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SyncOutlookEmailResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Office.svc/json/GetOutlookEmail": {
      "post": {
        "tags": [ "Office" ],
        "description": "\r\n            Gets the email by the Office 365 email Id.\r\n            ",
        "operationId": "GetOutlookEmail",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetOutlookEmailRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetOutlookEmailResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Office.svc/json/CanSyncEmail": {
      "post": {
        "tags": [ "Office" ],
        "description": "\r\n            Checks if an email can be synced from Office 365. This will check if the office 365 account that the user has configured in Rocket Matter has access to the email that they are trying to sync.\r\n            ",
        "operationId": "CanSyncEmail",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetOutlookEmailRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/BaseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Office.svc/json/UpdateOfficeUserSetting": {
      "post": {
        "tags": [ "Office" ],
        "description": "\r\n            Updates the settings for the user's office 365 configuration.\r\n            ",
        "operationId": "UpdateOfficeUserSetting",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateOfficeUserSettingRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UpdateOfficeUserSettingResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Office.svc/json/GetOfficeUrl": {
      "post": {
        "tags": [ "Office" ],
        "description": "\r\n            Gets the OAuth URL for the user.\r\n            ",
        "operationId": "GetOfficeUrl",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetOfficeUrlResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Office.svc/json/DisconnectOffice": {
      "post": {
        "tags": [ "Office" ],
        "description": "\r\n            Disconnects the users Rocket Matter account from their Office 365 account.\r\n            ",
        "operationId": "DisconnectOffice",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DisconnectOfficeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Rates.svc/json/GetMatterCustomRates": {
      "post": {
        "tags": [ "Rates" ],
        "description": "\r\n            Get user hourly rates for specified matter(s).\r\n            ",
        "operationId": "GetMatterCustomRates",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterCustomRatesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterCustomRatesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Rates.svc/json/SaveCustomRateConfig": {
      "post": {
        "tags": [ "Rates" ],
        "description": "\r\n            Create or update user hourly rates for specific matter(s).\r\n            ",
        "operationId": "SaveCustomRateConfig",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveCustomRateConfigRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveCustomRateConfigResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Rates.svc/json/DeleteMatterRates": {
      "post": {
        "tags": [ "Rates" ],
        "description": "\r\n            Delete user hourly rates.\r\n            ",
        "operationId": "DeleteMatterRates",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteMatterRatesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteMatterRatesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/RecurringBilling.svc/json/cancelPaymentPlan": {
      "post": {
        "tags": [ "RecurringBilling" ],
        "description": "\r\n            Stop and cancel currently active payment plan.\r\n            ",
        "operationId": "cancelPaymentPlan",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CancelPaymentPlanRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/CancelPaymentPlanResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/RecurringBilling.svc/json/updatePaymentPlanChargeToken": {
      "post": {
        "tags": [ "RecurringBilling" ],
        "description": "\r\n            Update charge token on existing payment plan.\r\n            ",
        "operationId": "updatePaymentPlanChargeToken",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdatePaymentPlanTokenRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UpdatePaymentPlanTokenResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/RecurringBilling.svc/json/getMatterPaymentPlan": {
      "post": {
        "tags": [ "RecurringBilling" ],
        "description": "\r\n            Get currently active matter payment plan.\r\n            ",
        "operationId": "getMatterPaymentPlan",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterPaymentPlanRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterPaymentPlanResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/RecurringBilling.svc/json/CommitPlan": {
      "post": {
        "tags": [ "RecurringBilling" ],
        "description": "\r\n            Commit payment plan and activate.\r\n            ",
        "operationId": "CommitPlan",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CommitPlanRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/CommitPlanResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/RecurringBilling.svc/json/GeneratePaymentPlan": {
      "post": {
        "tags": [ "RecurringBilling" ],
        "description": "\r\n            Generate payment plan schedule based on the given payment plan configuration.\r\n            ",
        "operationId": "GeneratePaymentPlan",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GeneratePaymentPlanResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/RecurringBilling.svc/json/UpdatePlanNotification": {
      "post": {
        "tags": [ "RecurringBilling" ],
        "description": "\r\n            Update payment failure notifications for the payment plan.\r\n            ",
        "operationId": "UpdatePlanNotification",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdatePlanNotificationRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UpdatePlanNotificationResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Reports.svc/json/RunReport": {
      "post": {
        "tags": [ "Reports" ],
        "description": "\r\n            Run any report by name. User must have administrative access.\r\n            ",
        "operationId": "RunReport",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/RunReportRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/RunReportResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Reports.svc/json/GetReportSummary": {
      "post": {
        "tags": [ "Reports" ],
        "description": "\r\n            View the report summary of a given report (if applicable).\r\n            ",
        "operationId": "GetReportSummary",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetReportSummaryRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetReportSummaryResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Reports.svc/json/GetUserReportPreference": {
      "post": {
        "tags": [ "Reports" ],
        "description": "\r\n            Get saved user preferences for certain report filters.\r\n            ",
        "operationId": "GetUserReportPreference",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetUserReportPreferenceRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUserReportPreferenceResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Reports.svc/json/SaveUserReportPreference": {
      "post": {
        "tags": [ "Reports" ],
        "description": "\r\n            Save new or update user preferences for certain report filters.\r\n            ",
        "operationId": "SaveUserReportPreference",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveReportPreferenceRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveUserReportPreferenceResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Reports.svc/json/GetReportMetaData": {
      "post": {
        "tags": [ "Reports" ],
        "description": "\r\n            View the metadata for a particular report.\r\n            ",
        "operationId": "GetReportMetaData",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetReportMedaDataRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetReportMetaDataResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Search.svc/json/SearchOccurenceForType": {
      "post": {
        "tags": [ "Search" ],
        "description": "\r\n            Search for a specific record by type.\r\n            ",
        "operationId": "SearchOccurenceForType",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SearchOccurenceForTypeRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SearchOccurenceForTypeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Search.svc/json/GlobalSearch": {
      "post": {
        "tags": [ "Search" ],
        "description": "\r\n            Search account based on specific keyword, regardless of type.\r\n            ",
        "operationId": "GlobalSearch",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GlobalSearchRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GlobalSearchResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Signup.svc/json/CreateAccount": {
      "post": {
        "tags": [ "Signup" ],
        "description": "\r\n            Create a new account based on billing term. Requires credit card information to activate new account.\r\n            ",
        "operationId": "CreateAccount",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SignupCCEntryRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SignupCCEntryResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Signup.svc/json/RespondToAgreement": {
      "post": {
        "tags": [ "Signup" ],
        "description": "\r\n            New users must accept terms of use agreement prior to accessing account.\r\n            ",
        "operationId": "RespondToAgreement",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SubscriptionAgreementRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SubscriptionAgreementResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Signup.svc/json/FirstTimeUserInfo": {
      "post": {
        "tags": [ "Signup" ],
        "description": "\r\n            Basic user information required to create a new account.\r\n            ",
        "operationId": "FirstTimeUserInfo",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/FirstTimeUserInfoRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/FirstTimeUserInfoResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/GetUserOperations": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Get permissions user has access to.\r\n            ",
        "operationId": "GetUserOperations",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUserOperationsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/DeleteRole": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Delete permission role.\r\n            ",
        "operationId": "DeleteRole",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteRoleRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteRoleResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/GetRoles": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Get configured permission roles.\r\n            ",
        "operationId": "GetRoles",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetRolesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/GetRole": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Get configured permission roles.\r\n            ",
        "operationId": "GetRole",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetRoleRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetRoleResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/GetRoleUsersForPermissions": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Get users bound to permission role.\r\n            ",
        "operationId": "GetRoleUsersForPermissions",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetRoleUsersForPermissionsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetRoleUsersForPermissionsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/GetRolePermissions": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Get permissions associated with role.\r\n            ",
        "operationId": "GetRolePermissions",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetRolePermissionsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetRolePermissionsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/GetUsersForPermissions": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Get list of users available for permission configuration.\r\n            ",
        "operationId": "GetUsersForPermissions",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUsersForPermissionsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/GetPermissions": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Get all available system permissions.\r\n            ",
        "operationId": "GetPermissions",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetPermissionsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/SaveRole": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Save role configuration.\r\n            ",
        "operationId": "SaveRole",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveRoleRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveRoleResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/GetPaymentProcessingFeeDefault": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Get default value for payment processing fee.\r\n            ",
        "operationId": "GetPaymentProcessingFeeDefault",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetPaymentProcessingFeeDefaultResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/SetPaymentProcessingFeeDefault": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Save payment processing fee default.\r\n            ",
        "operationId": "SetPaymentProcessingFeeDefault",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SetPaymentProcessingFeeDefaultRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SetPaymentProcessingFeeDefaultResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/GenerateRocketMatterPaymentLead": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Generate a Slack message expressing interest in Rocket Matter payments.\r\n            ",
        "operationId": "GenerateRocketMatterPaymentLead",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/BaseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/UpdateFedACHDirectory": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Update the FedACH lookup directory.\r\n            ",
        "operationId": "UpdateFedACHDirectory",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateFedACHDirectoryRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UpdateFedACHDirectoryResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/UpdateFedWireDirectory": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Update the Fed Wire lookup directory.\r\n            ",
        "operationId": "UpdateFedWireDirectory",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateFedWireDirectoryRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UpdateFedWireDirectoryResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/CancelSubscription": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Cancel Rocket Matter subscription.\r\n            ",
        "operationId": "CancelSubscription",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CancelSubscriptionRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/CancelSubscriptionResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/GetSessionCancellationInfo": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Get information about the session canceling subscription.\r\n            ",
        "operationId": "GetSessionCancellationInfo",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetSessionCancellationInfoRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetSessionCancellationInfoResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/GetCopy2ContactsJavaScript": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Get copy to contacts JavaScript snippet.\r\n            ",
        "operationId": "GetCopy2ContactsJavaScript",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetCopy2ContactsJavaScriptRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetCopy2ContactsJavaScriptResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/checkIfFeatureIsEnabled": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Check if install has featured enabled.\r\n            ",
        "operationId": "checkIfFeatureIsEnabled",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/checkIfFeatureIsEnabledRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/checkIfFeatureIsEnabledResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/GetInstallScripts": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Get custom scripts for installs.\r\n            ",
        "operationId": "GetInstallScripts",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetInstallScriptsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/SetInstallScriptState": {
      "post": {
        "tags": [ "OriginSystem" ],
        "operationId": "SetInstallScriptState",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SetInstallScriptStateRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SetInstallScriptStateResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/SwitchToNewUI": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Obsolete DO NOT USE, move user to new UI.\r\n            ",
        "operationId": "SwitchToNewUI",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/BaseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/GetTimezoneOptions": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Get available time zone options.\r\n            ",
        "operationId": "GetTimezoneOptions",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTimeZoneOptionsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/OriginSystem.svc/json/SendCancellationNotification": {
      "post": {
        "tags": [ "OriginSystem" ],
        "description": "\r\n            Notify Rocket Matter of account cancellation.\r\n            ",
        "operationId": "SendCancellationNotification",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SendCancellationNotificationResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/SurchargeRates.svc/json/GetAll": {
      "post": {
        "tags": [ "SurchargeRates" ],
        "description": "\r\n            Retrieves all surcharge rates and the history of each.\r\n            ",
        "operationId": "GetAll",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SurchargeRatesGetAllResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/SurchargeRates.svc/json/Save": {
      "post": {
        "tags": [ "SurchargeRates" ],
        "description": "\r\n            Saves a new surcharge rate. Throws a validation if name already exists.\r\n            ",
        "operationId": "SaveSurchargeRates",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SurchargeRatesSaveRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SurchargeRatesSaveResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/SurchargeRates.svc/json/Delete": {
      "post": {
        "tags": [ "SurchargeRates" ],
        "description": "\r\n            Deletes a surcharge rate based on SurchargeRateId.\r\n            ",
        "operationId": "Delete",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SurchargeRatesDeleteResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/SurchargeRates.svc/json/Search": {
      "post": {
        "tags": [ "SurchargeRates" ],
        "description": "\r\n            Searches surcharge rates based on name of surcharge.\r\n            ",
        "operationId": "Search",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SurchargeRatesSearchRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SurchargeRatesSearchResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/SurchargeRates.svc/json/Get": {
      "post": {
        "tags": [ "SurchargeRates" ],
        "description": "\r\n            Retrieves all surcharge rates and the history of each.\r\n            ",
        "operationId": "Get",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SurchargeRatesGetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SurchargeRatesGetResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Tags.svc/json/Search": {
      "post": {
        "tags": [ "Tags" ],
        "description": "\r\n            Search for all items with a specific tag.\r\n            ",
        "operationId": "Search",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SearchTagsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SearchTagsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Tags.svc/json/AddTag": {
      "post": {
        "tags": [ "Tags" ],
        "description": "\r\n            Create a new tag for a specific item.\r\n            ",
        "operationId": "AddTag",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/AddRemoveTagRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/AddRemoveTagResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Tags.svc/json/RemoveTag": {
      "post": {
        "tags": [ "Tags" ],
        "description": "\r\n            Remove a tag for a specific item.\r\n            ",
        "operationId": "RemoveTag",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/AddRemoveTagRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/AddRemoveTagResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Tasks.svc/json/GetTasksForMatter": {
      "post": {
        "tags": [ "Tasks" ],
        "description": "\r\n            Get all tasks for a matter, based on the task state.\r\n            ",
        "operationId": "GetTasksForMatter",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetTasksForMatterRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTasksForMatterResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Tasks.svc/json/GetTasksByFilter": {
      "post": {
        "tags": [ "Tasks" ],
        "description": "\r\n            View tasks based on a variety of filter options.\r\n            ",
        "operationId": "GetTasksByFilter",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetTasksByFilterRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTasksByFilterResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Tasks.svc/json/GetTaskByActivityId": {
      "post": {
        "tags": [ "Tasks" ],
        "description": "\r\n            View a particular task based on ID.\r\n            ",
        "operationId": "GetTaskByActivityId",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetTaskByActivityIdRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTaskByActivityIdResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Tasks.svc/json/Save": {
      "post": {
        "tags": [ "Tasks" ],
        "description": "\r\n            Create a new task, or update an existing task.\r\n            ",
        "operationId": "SaveTasks",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SaveTaskRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SaveTaskResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Tasks.svc/json/Delete": {
      "post": {
        "tags": [ "Tasks" ],
        "description": "\r\n            Delete a particular task.\r\n            ",
        "operationId": "Delete",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteTaskRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DeleteTaskResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Tasks.svc/json/GetCommonTags": {
      "post": {
        "tags": [ "Tasks" ],
        "description": "\r\n            Get all tasks with a specific tag.\r\n            ",
        "operationId": "GetCommonTags",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetCommonTagsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TaxRates.svc/json/GetAll": {
      "post": {
        "tags": [ "TaxRates" ],
        "description": "\r\n            Get all tax rate configurations.\r\n            ",
        "operationId": "GetAll",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/TaxRatesGetAllResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TaxRates.svc/json/Save": {
      "post": {
        "tags": [ "TaxRates" ],
        "description": "\r\n            Create a new tax rate, or update an existing tax rate.\r\n            ",
        "operationId": "Save",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/TaxRatesSaveRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/TaxRatesSaveResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TaxRates.svc/json/Delete": {
      "post": {
        "tags": [ "TaxRates" ],
        "description": "\r\n            Delete a specific tax rate.\r\n            ",
        "operationId": "Delete",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/TaxRatesDeleteResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TaxRates.svc/json/Search": {
      "post": {
        "tags": [ "TaxRates" ],
        "description": "\r\n            Search for tax rates by description.\r\n            ",
        "operationId": "Search",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/TaxRatesSearchRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/TaxRatesSearchResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TaxRates.svc/json/Get": {
      "post": {
        "tags": [ "TaxRates" ],
        "description": "\r\n            Get all tax rate configurations.\r\n            ",
        "operationId": "Get",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/TaxRatesGetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/TaxRatesGetResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TimeOptions.svc/json/GetAll": {
      "post": {
        "tags": [ "TimeOptions" ],
        "description": "\r\n            Retrieves list of times in 15 minute increments. (12:00, 12:15, 12:30, etc..)\r\n            ",
        "operationId": "GetAll",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/TimeOptionsGetAllResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TimeOptions.svc/json/GetNextTimes": {
      "post": {
        "tags": [ "TimeOptions" ],
        "description": "\r\n            Retrieves next available time in 15 minute increments with given current time.\r\n            ",
        "operationId": "GetNextTimes",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/TimeOptionsGetNextTimesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/TimeOptionsGetNextTimesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Timer.svc/json/Start": {
      "post": {
        "tags": [ "Timer" ],
        "description": "\r\n            Start a new timer.\r\n            ",
        "operationId": "Start",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/StartTimerRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/TimerResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Timer.svc/json/Pause": {
      "post": {
        "tags": [ "Timer" ],
        "description": "\r\n            Pause an active timer.\r\n            ",
        "operationId": "Pause",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/PauseTimerRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/TimerResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Timer.svc/json/Bill": {
      "post": {
        "tags": [ "Timer" ],
        "description": "\r\n            Bills for the elapsed time on a timer. Will also delete the active timer.\r\n            ",
        "operationId": "Bill",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/BillTimerRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/BaseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Timer.svc/json/Get": {
      "post": {
        "tags": [ "Timer" ],
        "description": "\r\n            View a specific timer activity based on ID.\r\n            ",
        "operationId": "Get",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetTimerRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/TimerResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Timer.svc/json/GetAllNonBilledForUser": {
      "post": {
        "tags": [ "Timer" ],
        "description": "\r\n            Get all non-billed active timers.\r\n            ",
        "operationId": "GetAllNonBilledForUser",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/TimersResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Timer.svc/json/Save": {
      "post": {
        "tags": [ "Timer" ],
        "description": "\r\n            Saves existing timer information.\r\n            ",
        "operationId": "Save",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/TimerRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/TimerResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Timer.svc/json/Delete": {
      "post": {
        "tags": [ "Timer" ],
        "description": "\r\n            Deletes timer activity based on ID.\r\n            ",
        "operationId": "Delete",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteTimerRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/BaseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Timer.svc/json/GetEvenIfDeleted": {
      "post": {
        "tags": [ "Timer" ],
        "description": "\r\n            Retrieves deleted timer based on ID.\r\n            ",
        "operationId": "GetEvenIfDeleted",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetEvenIfDeletedRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetEvenIfDeletedResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Trust.svc/json/TrustDetailsForMatter": {
      "post": {
        "tags": [ "Trust" ],
        "description": "\r\n            View trust account details for a specific client and matter.\r\n            ",
        "operationId": "TrustDetailsForMatter",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/TrustDetailsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/TrustDetailsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/EnableTwoFactorAuthentication": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Enable two-factor authentication for a user.\r\n            ",
        "operationId": "EnableTwoFactorAuthentication",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/EnableTwoFactorAuthenticationResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/GenerateTwoFactorAuthenticationQRCode": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Generate a Quick Response Code for two-factor authentication.\r\n            ",
        "operationId": "GenerateTwoFactorAuthenticationQRCode",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GenerateTwoFactorAuthenticationQRCodeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/GetTwoFactorAuthenticationSecretKey": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Get the secret key for two-factor authentication.\r\n            ",
        "operationId": "GetTwoFactorAuthenticationSecretKey",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTwoFactorAuthenticationSecretKeyResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/GetTwoFactorAuthenticationCode": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Get authentication code with secret key.\r\n            ",
        "operationId": "GetTwoFactorAuthenticationCode",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetTwoFactorAuthenticationCodeRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTwoFactorAuthenticationCodeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/VerifyAndEnableTwoFactorAuthentication": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Verify and enable two-factor based on authentication code.\r\n            ",
        "operationId": "VerifyAndEnableTwoFactorAuthentication",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/VerifyAndEnableTwoFactorAuthenticationRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/VerifyAndEnableTwoFactorAuthenticationResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/VerifyTwoFactorAuthentication": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Verify two-factor based on authentication code.\r\n            ",
        "operationId": "VerifyTwoFactorAuthentication",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/VerifyTwoFactorAuthenticationRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/VerifyTwoFactorAuthenticationResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/VerifyTwoFactorSmsCode": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Verify two-factor authentication based on SMS code.\r\n            ",
        "operationId": "VerifyTwoFactorSmsCode",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/VerifyTwoFactorSmsCodeRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/VerifyTwoFactorSmsCodeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/GetTwoFactorAuthenticationSetupStatus": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Get the setup status of two-factor authentication.\r\n            ",
        "operationId": "GetTwoFactorAuthenticationSetupStatus",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTwoFactorAuthenticationSetupStatusResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/AddTwoFactorAuthenticationPhoneNumber": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Add phone number for two-factor authentication. \r\n            ",
        "operationId": "AddTwoFactorAuthenticationPhoneNumber",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/AddTwoFactorAuthenticationPhoneNumberRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/AddTwoFactorAuthenticationPhoneNumberResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/GetTwoFactorAuthenticationRecoveryCodes": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Get the multiple recovery codes for two-factor authentication.\r\n            ",
        "operationId": "GetTwoFactorAuthenticationRecoveryCodes",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTwoFactorAuthenticationRecoveryCodesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/GetTwoFactorAuthenticationRecoveryCode": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Get the multiple recovery codes for two-factor authentication.\r\n            ",
        "operationId": "GetTwoFactorAuthenticationRecoveryCode",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTwoFactorAuthenticationRecoveryCodeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/CompleteTwoFactorAuthenticationSetup": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Sets the status to complete for two-factor authentication.\r\n            ",
        "operationId": "CompleteTwoFactorAuthenticationSetup",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/CompleteTwoFactorAuthenticationSetupResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/GetTwoFactorAuthenticationCodeVerification": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Get two-factor authentication verification.\r\n            ",
        "operationId": "GetTwoFactorAuthenticationCodeVerification",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTwoFactorAuthenticationCodeVerificationResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/VerifyTwoFactorAuthenticationRecoveryCode": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Verify the two-factor authentication based on recovery code.\r\n            ",
        "operationId": "VerifyTwoFactorAuthenticationRecoveryCode",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/VerifyTwoFactorAuthenticationRecoveryCodeRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/VerifyTwoFactorAuthenticationRecoveryCodeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/UpdateTwoFactorAuthenticationPhoneNumber": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Updated the SMS phone number for two-factor authentication.\r\n            ",
        "operationId": "UpdateTwoFactorAuthenticationPhoneNumber",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateTwoFactorAuthenticationPhoneNumberRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UpdateTwoFactorAuthenticationPhoneNumberResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/GetTwoFactorAuthenticationPhoneNumber": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Get the SMS phone number for two-factor authentication.\r\n            ",
        "operationId": "GetTwoFactorAuthenticationPhoneNumber",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTwoFactorAuthenticationPhoneNumberResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/SendSMSCode": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Send the SMS code to the user's phone.\r\n            ",
        "operationId": "SendSMSCode",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SendSMSCodeResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/DisableTwoFactor": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Disable the two-factor authentication.\r\n            ",
        "operationId": "DisableTwoFactor",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DisableTwoFactorResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/GetTwoFactorAuthenticationExistingPhoneNumbers": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Get the existing SMS phone number for two-factor authentication.\r\n            ",
        "operationId": "GetTwoFactorAuthenticationExistingPhoneNumbers",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTwoFactorAuthenticationExistingPhoneNumbersResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/TwoFactorAuthentication.svc/json/GetTwoFactorAuthenticationPreviouslyUsedRecoveryCode": {
      "post": {
        "tags": [ "TwoFactorAuthentication" ],
        "description": "\r\n            Get the previously used two-factor recovery code.\r\n            ",
        "operationId": "GetTwoFactorAuthenticationPreviouslyUsedRecoveryCode",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetTwoFactorAuthenticationPreviouslyUsedRecoveryCodeReponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Users.svc/json/Search": {
      "post": {
        "tags": [ "Users" ],
        "description": "\r\n            Get users by search text.\r\n            ",
        "operationId": "Search",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SearchUsersRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SearchUsersResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Users.svc/json/Get": {
      "post": {
        "tags": [ "Users" ],
        "description": "\r\n            Get user by ID.\r\n            ",
        "operationId": "Get",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UserGetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UserGetResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Users.svc/json/GetCurrentUser": {
      "post": {
        "tags": [ "Users" ],
        "description": "\r\n            Gets logged in user information.\r\n            ",
        "operationId": "GetCurrentUser",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UserGetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UserGetResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Users.svc/json/GetByFullName": {
      "post": {
        "tags": [ "Users" ],
        "description": "\r\n            Get a user by their full name.\r\n            ",
        "operationId": "GetByFullName",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetByFullNameRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UserGetResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Users.svc/json/GetByInitials": {
      "post": {
        "tags": [ "Users" ],
        "description": "\r\n            Get a user by their initials.\r\n            ",
        "operationId": "GetByInitials",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetUserByInitialsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/UserGetResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Users.svc/json/SetUserPreference": {
      "post": {
        "tags": [ "Users" ],
        "description": "\r\n            Set user preference for a variety of settings. Use GetUserPreference to see available settings.\r\n            ",
        "operationId": "SetUserPreference",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SetUserPreferenceRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SetUserPreferenceResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Users.svc/json/GetUserPreference": {
      "post": {
        "tags": [ "Users" ],
        "description": "\r\n            Get all user preference settings.\r\n            ",
        "operationId": "GetUserPreference",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetUserPreferenceRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUserPreferenceResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Users.svc/json/GetActiveUsers": {
      "post": {
        "tags": [ "Users" ],
        "description": "\r\n            Get list of all active users.\r\n            ",
        "operationId": "GetActiveUsers",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetActiveUsersResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Users.svc/json/GetUserNavigationPreferences": {
      "post": {
        "tags": [ "Users" ],
        "description": "\r\n            View additional navigation setting preferences for users.\r\n            ",
        "operationId": "GetUserNavigationPreferences",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUserNavigationPreferencesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Users.svc/json/GetUsersAccess": {
      "post": {
        "tags": [ "Users" ],
        "description": "\r\n            View the installs a user has access.\r\n            ",
        "operationId": "GetUsersAccess",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetUsersAccessResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Users.svc/json/GetEffectiveUserRates": {
      "post": {
        "tags": [ "Users" ],
        "description": "\r\n            Get all user default billing rates.\r\n            ",
        "operationId": "GetEffectiveUserRates",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetEffectiveUserRatesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetEffectiveUserRatesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Users.svc/json/GetEffectiveUserRateFromDate": {
      "post": {
        "tags": [ "Users" ],
        "description": "\r\n            Get user billing rates before or on a specified effective date.\r\n            ",
        "operationId": "GetEffectiveUserRateFromDate",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetEffectiveUserRatesRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetEffectiveUserRatesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Validations.svc/json/GetAll": {
      "post": {
        "tags": [ "Validations" ],
        "description": "\r\n            Retrieves rules and mappings of validations. \r\n            ",
        "operationId": "GetAll",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/AllValidationsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/WorkFlow.svc/json/AddEditWorkflowStatus": {
      "post": {
        "tags": [ "WorkFlow" ],
        "operationId": "AddEditWorkflowStatus",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/AddEditWorkflowStatusRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/AddEditWorkflowStatusResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/WorkFlow.svc/json/ApplyNewMatterWorkFlowStatus": {
      "post": {
        "tags": [ "WorkFlow" ],
        "description": "\r\n            Apply new workflow status to matter.\r\n            ",
        "operationId": "ApplyNewMatterWorkFlowStatus",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ApplyNewMatterWorkFlowStatusRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/ApplyNewMatterWorkFlowStatusResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/WorkFlow.svc/json/GetMatterCurrentWorkFlowStatus": {
      "post": {
        "tags": [ "WorkFlow" ],
        "description": "\r\n            Get workflow status bound to matter.\r\n            ",
        "operationId": "GetMatterCurrentWorkFlowStatus",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetMatterCurrentWorkFlowStatusRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterCurrentWorkFlowStatusResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/WorkFlow.svc/json/GetMatterWorkFLowStatuses": {
      "post": {
        "tags": [ "WorkFlow" ],
        "description": "\r\n            Get a list for workflow statuses configured for the instance.\r\n            ",
        "operationId": "GetMatterWorkFLowStatuses",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetMatterWorkFLowStatusesResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Google.svc/json/Connected": {
      "post": {
        "tags": [ "Google" ],
        "description": "\r\n            Returns if Google Calendar is connected or not for specified user.\r\n            ",
        "operationId": "Connected",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetGoogleConnectionStatusResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Google.svc/json/SyncCalendar": {
      "post": {
        "tags": [ "Google" ],
        "description": "\r\n            Syncs Google Calendar for current user.\r\n            ",
        "operationId": "SyncCalendar",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/BaseResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Quickbooks.svc/json/Connect": {
      "post": {
        "tags": [ "Quickbooks" ],
        "description": "\r\n            Re-Connects Rocket Matter to a Quickbooks Online account given the AuthId. You can only re-connect to the last disconnected Quickbooks Online account. If the account was successfully reconnected Success will be returned as 'true'.\r\n            ",
        "operationId": "Connect",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ConnectQuickbooksRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/ConnectQuickbooksResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Quickbooks.svc/json/Prepared": {
      "post": {
        "tags": [ "Quickbooks" ],
        "description": "\r\n            Checks if the Quickbooks Online integration is prepared to do a sync. The integration must be connected and configured.\r\n            ",
        "operationId": "Prepared",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetQuickbooksPreparednessResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Quickbooks.svc/json/GetBuckets": {
      "post": {
        "tags": [ "Quickbooks" ],
        "description": "\r\n            Gets all available buckets from the Quickbooks Online account that can be synced to from Rocket Matter.\r\n            ",
        "operationId": "GetBuckets",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetQuickbooksBucketsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Quickbooks.svc/json/Disconnect": {
      "post": {
        "tags": [ "Quickbooks" ],
        "description": "\r\n            Disconnects Rocket Matter from the Quickbooks Online account.\r\n            ",
        "operationId": "Disconnect",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DisconnectQuickbooksResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Quickbooks.svc/json/Configure": {
      "post": {
        "tags": [ "Quickbooks" ],
        "description": "\r\n            Configures the Quickbooks Online integration.\r\n            ",
        "operationId": "Configure",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetQuickbooksConnectionStatusResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Quickbooks.svc/json/Connected": {
      "post": {
        "tags": [ "Quickbooks" ],
        "description": "\r\n            Checks if the Quickbooks Online integration is connected, and what settings are currently configured.\r\n            ",
        "operationId": "Connected",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetQuickbooksConnectionStatusResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Quickbooks.svc/json/Sync": {
      "post": {
        "tags": [ "Quickbooks" ],
        "description": "\r\n            Initiates a sync.\r\n            ",
        "operationId": "Sync",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SyncQuickbooksResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Quickbooks.svc/json/RevertLastSync": {
      "post": {
        "tags": [ "Quickbooks" ],
        "description": "\r\n            Initiates a reverse sync to undo the last sync.\r\n            ",
        "operationId": "RevertLastSync",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/SyncQuickbooksResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Quickbooks.svc/json/GetSyncs": {
      "post": {
        "tags": [ "Quickbooks" ],
        "description": "\r\n            Gets a paged list of all syncs attempted for the current Quickbooks Online connection.\r\n            ",
        "operationId": "GetSyncs",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetQuickbooksSyncsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetQuickbooksSyncsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Quickbooks.svc/json/GetSyncInfo": {
      "post": {
        "tags": [ "Quickbooks" ],
        "description": "\r\n            Gets a paged list of all items that were synced for the given SyncId, and whether or not they were successful.\r\n            ",
        "operationId": "GetSyncInfo",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetQuickbooksSyncInfoRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetQuickbooksSyncInfoResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Quickbooks.svc/json/Disable": {
      "post": {
        "tags": [ "Quickbooks" ],
        "description": "\r\n            Disables the current Quickbooks Online integration.\r\n            ",
        "operationId": "Disable",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/DisableQuickbooksResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Quickbooks.svc/json/GetQuickbooksFailedItems": {
      "post": {
        "tags": [ "Quickbooks" ],
        "description": "\r\n            Gets all items that failed going over to Quickbooks Online in the last sync.\r\n            ",
        "operationId": "GetQuickbooksFailedItems",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/GetQuickbooksFailedItemsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/Quickbooks.svc/json/ExcludeQuickbooksItems": {
      "post": {
        "tags": [ "Quickbooks" ],
        "description": "\r\n            Excludes or retry items that failed in the last sync. All items with the ExcludedItemIds will be excluded from the next sync and all items from ResyncItemIds will attempt to be re-created in Quickbooks.\r\n            ",
        "operationId": "ExcludeQuickbooksItems",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ExcludeQuickbooksItemsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed request",
            "schema": { "$ref": "#/definitions/ExcludeQuickbooksItemsResponse" }
          },
          "400": { "description": "Internal server error" },
          "401": { "description": "Unauthorized" }
        }
      }
    }
  },
  "definitions": {
    "Client": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Code": { "type": "string" },
        "MiddleName": { "type": "string" },
        "LastName": { "type": "string" },
        "IsCompany": { "type": "boolean" },
        "ContactID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyID": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyName": { "type": "string" },
        "WorkEmail": { "type": "string" },
        "FullName": { "type": "string" },
        "HomeAddress": {
          "type": "object",
          "$ref": "#/definitions/ContactAddress"
        },
        "Relationships": {
          "type": "array",
          "items": { "$ref": "#/definitions/ContactRelationship" }
        },
        "HomeEmail": { "type": "string" },
        "MobilePhone": { "type": "string" },
        "Notes": { "type": "string" },
        "PreferredDisplayName": { "type": "string" },
        "PrimaryContact": { "type": "string" },
        "PrimaryContactId": {
          "type": "integer",
          "format": "int32"
        },
        "Salutation": { "type": "string" },
        "SkypeUserName": { "type": "string" },
        "Suffix": { "type": "string" },
        "Title": { "type": "string" },
        "WorkAddress": {
          "type": "object",
          "$ref": "#/definitions/ContactAddress"
        },
        "WorkFax": { "type": "string" },
        "WorkPhone": { "type": "string" },
        "HomePhone": { "type": "string" },
        "WorkPhoneExt": { "type": "string" },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ContactAddress": {
      "type": "object",
      "properties": {
        "AddressLine1": { "type": "string" },
        "AddressLine2": { "type": "string" },
        "City": { "type": "string" },
        "State": { "type": "string" },
        "PostalCode": { "type": "string" },
        "Country": { "type": "string" },
        "IsEmpty": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ContactRelationship": {
      "type": "object",
      "properties": {
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "RelationshipId": {
          "type": "integer",
          "format": "int32"
        },
        "RelationshipName": { "type": "string" },
        "Role": { "type": "string" },
        "Position": {
          "type": "integer",
          "format": "int32"
        },
        "IsCompany": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BaseMatter": {
      "type": "object",
      "properties": {
        "Client": {
          "type": "object",
          "$ref": "#/definitions/Client"
        },
        "Name": { "type": "string" },
        "ClientMatter": { "type": "string" },
        "MatterTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "MatterStatusTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "TaxRateId": { "type": "string" },
        "DiscountRateId": { "type": "string" },
        "InterestRateId": { "type": "string" },
        "SurchargeRateId": { "type": "string" },
        "DefaultBillingTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ValidationResult": {
      "type": "object",
      "properties": {
        "MinValue": { "type": "boolean" },
        "MaxValue": { "type": "boolean" },
        "MinLength": { "type": "boolean" },
        "MaxLength": { "type": "boolean" },
        "Required": { "type": "boolean" },
        "PropertyDisplayName": { "type": "string" },
        "Precision": { "type": "boolean" },
        "ValueEntered": { "type": "object" },
        "Name": { "type": "string" },
        "ObjectName": { "type": "string" },
        "ExternalID": { "type": "string" },
        "MinValueMessage": { "type": "string" },
        "MaxValueMessage": { "type": "string" },
        "MinLengthMessage": { "type": "string" },
        "MaxLengthMessage": { "type": "string" },
        "RequiredMessage": { "type": "string" },
        "RequiredPrecisionMessage": { "type": "string" },
        "BaseFailureMessage": { "type": "string" },
        "FailedValidationMessages": {
          "type": "array",
          "items": { "type": "string" }
        },
        "FailedCharacterValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/CharacterValidationRule" }
        },
        "IsValid": { "type": "boolean" }
      }
    },
    "CharacterValidationRule": {
      "type": "object",
      "properties": {
        "ShouldMatch": { "type": "boolean" },
        "Message": { "type": "string" },
        "Regex": { "type": "string" }
      }
    },
    "BaseResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetUserIdResponse": {
      "type": "object",
      "properties": {
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterBudget": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "MatterID": {
          "type": "integer",
          "format": "int32"
        },
        "Budget": {
          "type": "number",
          "format": "double"
        },
        "IsEnabled": { "type": "boolean" },
        "IncludeTimeEntries": { "type": "boolean" },
        "IncludeFlatFeeEntries": { "type": "boolean" },
        "IncludeCosts": { "type": "boolean" },
        "UseUserDefaultRate": { "type": "boolean" },
        "ExcludeInvoiced": { "type": "boolean" }
      }
    },
    "MatterBudgetInfo": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "BudgetAmount": {
          "type": "number",
          "format": "double"
        },
        "Fees": {
          "type": "number",
          "format": "double"
        },
        "Costs": {
          "type": "number",
          "format": "double"
        },
        "Remaining": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "MiddleName": { "type": "string" },
        "FullName": { "type": "string" },
        "LastName": { "type": "string" },
        "IsCompany": { "type": "boolean" },
        "WorkEmail": { "type": "string" },
        "WorkPhone": { "type": "string" },
        "WorkPhoneExt": { "type": "string" },
        "WorkFax": { "type": "string" },
        "WorkAddressLine1": { "type": "string" },
        "WorkAddressLine2": { "type": "string" },
        "WorkCity": { "type": "string" },
        "WorkState": { "type": "string" },
        "WorkPostalCode": { "type": "string" },
        "WorkCountry": { "type": "string" },
        "ClientID": {
          "type": "integer",
          "format": "int32"
        },
        "HomeEmail": { "type": "string" },
        "HomePhone": { "type": "string" },
        "HomeAddressLine1": { "type": "string" },
        "HomeAddressLine2": { "type": "string" },
        "HomeCity": { "type": "string" },
        "HomeState": { "type": "string" },
        "HomePostalCode": { "type": "string" },
        "HomeCountry": { "type": "string" },
        "ExternalID2": { "type": "string" },
        "LastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "ContactTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyId": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyName": { "type": "string" },
        "Initials": { "type": "string" },
        "Notes": { "type": "string" },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplateRole": {
      "type": "object",
      "properties": {
        "MatterTemplateID": {
          "type": "integer",
          "format": "int32"
        },
        "Role": { "type": "string" },
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "Contact": {
          "type": "object",
          "$ref": "#/definitions/Contact"
        },
        "Position": {
          "type": "integer",
          "format": "int32"
        },
        "RelationshipName": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "FullName": { "type": "string" },
        "FirstName": { "type": "string" },
        "LastName": { "type": "string" },
        "MiddleName": { "type": "string" },
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "Initials": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BillableActivity": {
      "type": "object",
      "properties": {
        "TotalSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "BillableUnits": {
          "type": "number",
          "format": "double"
        },
        "ActivityName": { "type": "string" },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "IsCredit": { "type": "boolean" },
        "Rate": {
          "type": "number",
          "format": "double"
        },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "DateAndTime": {
          "type": "string",
          "format": "date-time"
        },
        "Notes": { "type": "string" },
        "ActivityTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "UserFullName": { "type": "string" },
        "IsNoCharge": { "type": "boolean" },
        "IsNonBillable": { "type": "boolean" },
        "CurrencySymbol": { "type": "string" },
        "Title": { "type": "string" },
        "User": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "IsInvoiced": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CreateClientFromStringRequest": {
      "type": "object",
      "properties": { "ClientCode": { "type": "string" } }
    },
    "ShareInvoiceSetting": {
      "type": "object",
      "properties": {
        "Contact": {
          "type": "object",
          "$ref": "#/definitions/Contact"
        },
        "ContactID": {
          "type": "integer",
          "format": "int32"
        },
        "FullName": { "type": "string" },
        "ShareByPortal": { "type": "boolean" },
        "ShareByEmail": { "type": "boolean" },
        "EmailTypeSelected": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskEventInfoAttendeeDetail": {
      "type": "object",
      "properties": {
        "NameInfo": { "type": "string" },
        "BillingInfo": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TimeOption": {
      "type": "object",
      "properties": {
        "Time": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplateCustomField": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Value": { "type": "string" },
        "Position": {
          "type": "integer",
          "format": "int32"
        },
        "MatterTemplateID": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplateDateOption": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplateEventDateInfo": {
      "type": "object",
      "properties": {
        "Interval": {
          "type": "integer",
          "format": "int32"
        },
        "Time": { "type": "string" },
        "Date": { "type": "string" },
        "DateOption": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateDateOption"
        },
        "MatterTemplateDateOptionID": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplateEventAttendee": {
      "type": "object",
      "properties": {
        "MatterTemplateEventID": {
          "type": "integer",
          "format": "int32"
        },
        "UserID": {
          "type": "integer",
          "format": "int32"
        },
        "User": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "Bill": { "type": "boolean" },
        "IsRole": { "type": "boolean" },
        "Role": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplateMilestoneAction": {
      "type": "object",
      "properties": {
        "MilestoneId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterTemplateTaskId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterTemplateEventId": {
          "type": "integer",
          "format": "int32"
        },
        "MilestoneOrderId": {
          "type": "integer",
          "format": "int32"
        },
        "MilestoneOrder": {
          "type": "string",
          "enum": [ "Before", "After" ]
        },
        "MilestoneTempId": { "type": "string" },
        "HasPendingMilestone": { "type": "boolean" },
        "MatterTemplateMilestoneTriggerid": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplateMilestone": {
      "type": "object",
      "properties": {
        "MatterTemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterTemplateTaskId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterTemplateEventId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterTemplateMilestoneTriggerId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterTemplateMilestoneTrigger": {
          "type": "string",
          "enum": [ "MatterOpen", "EventDate", "TaskDueDate", "TaskCompletedDate", "StatusDate" ]
        },
        "Name": { "type": "string" },
        "TempId": { "type": "string" },
        "IsPending": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplateEvent": {
      "type": "object",
      "properties": {
        "Title": { "type": "string" },
        "StartDateInfo": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateEventDateInfo"
        },
        "EndDateInfo": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateEventDateInfo"
        },
        "OwnerID": {
          "type": "integer",
          "format": "int32"
        },
        "Owner": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "OwnerIsRole": { "type": "boolean" },
        "OwnerRole": { "type": "string" },
        "Bill": { "type": "boolean" },
        "Attendees": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateEventAttendee" }
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "tmpInfoID": { "type": "string" },
        "Location": { "type": "string" },
        "Notes": { "type": "string" },
        "IsMilestone": { "type": "boolean" },
        "MilestoneAction": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateMilestoneAction"
        },
        "Milestones": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateMilestone" }
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplatePermission": {
      "type": "object",
      "properties": {
        "MatterTemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "UserID": {
          "type": "integer",
          "format": "int32"
        },
        "User": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplatePermissionType": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterType": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplateStatueOfLimitation": {
      "type": "object",
      "properties": {
        "DoesNotExpire": { "type": "boolean" },
        "ExpiresInterval": {
          "type": "integer",
          "format": "int32"
        },
        "MatterTemplateDateOption": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateDateOption"
        },
        "MatterTemplateDateOptionID": {
          "type": "integer",
          "format": "int32"
        },
        "StatuteType": {
          "type": "string",
          "enum": [ "Default", "DoesNotExpire", "Expires" ]
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplateTask": {
      "type": "object",
      "properties": {
        "MatterTemplateID": {
          "type": "integer",
          "format": "int32"
        },
        "MatterTemplateDateOptionID": {
          "type": "integer",
          "format": "int32"
        },
        "Title": { "type": "string" },
        "DueDateIntervalAfter": {
          "type": "integer",
          "format": "int32"
        },
        "DueDate": { "type": "string" },
        "DateOption": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateDateOption"
        },
        "OwnerID": {
          "type": "integer",
          "format": "int32"
        },
        "Owner": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "AssignToID": {
          "type": "integer",
          "format": "int32"
        },
        "AssignTo": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "tmpInfoID": { "type": "string" },
        "IsMilestone": { "type": "boolean" },
        "MilestoneAction": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateMilestoneAction"
        },
        "Milestones": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateMilestone" }
        },
        "AssignedToIsRole": { "type": "boolean" },
        "AssignedToRole": { "type": "string" },
        "OwnerIsRole": { "type": "boolean" },
        "OwnerRole": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplate": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "MatterName": { "type": "string" },
        "MatterType": {
          "type": "object",
          "$ref": "#/definitions/MatterType"
        },
        "MatterTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "FlatFeeOf": {
          "type": "number",
          "format": "double"
        },
        "StatueOfLimitation": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateStatueOfLimitation"
        },
        "MatterTemplatePermissionType": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplatePermissionType"
        },
        "MatterPermissionTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "CustomFields": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateCustomField" }
        },
        "Permissions": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplatePermission" }
        },
        "Events": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateEvent" }
        },
        "Tasks": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateTask" }
        },
        "Roles": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateRole" }
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "DefaultMilestones": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateMilestone" }
        },
        "MatterWorkFlowStatusId": { "type": "string" },
        "IsWorkflowTemplate": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterEverGreenInfo": {
      "type": "object",
      "properties": {
        "IsOn": { "type": "boolean" },
        "MinimumRequiredRetainer": {
          "type": "number",
          "format": "double"
        },
        "ReplenishWhenBelow": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "MatterRelatedContact": {
      "type": "object",
      "properties": {
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "Contact": {
          "type": "object",
          "$ref": "#/definitions/Contact"
        },
        "MatterID": {
          "type": "integer",
          "format": "int32"
        },
        "Role": { "type": "string" },
        "Position": {
          "type": "integer",
          "format": "int32"
        },
        "RelationshipName": { "type": "string" },
        "IsDefault": { "type": "boolean" },
        "IsUser": { "type": "boolean" },
        "IsAttendeeRole": { "type": "boolean" },
        "IsEventOwnerRole": { "type": "boolean" },
        "TaskAssigneeRole": { "type": "boolean" },
        "TaskOwnerRole": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterCustomField": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Value": { "type": "string" },
        "Position": {
          "type": "integer",
          "format": "int32"
        },
        "MatterID": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterCreteFromTemplate": {
      "type": "object",
      "properties": {
        "ClientName": { "type": "string" },
        "Name": { "type": "string" },
        "CreateUsingTemplateID": {
          "type": "integer",
          "format": "int32"
        },
        "MatterTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "FlatFeeeOf": {
          "type": "number",
          "format": "double"
        },
        "ExpireOn": {
          "type": "string",
          "format": "date-time"
        },
        "TrustAccountDeposit": {
          "type": "number",
          "format": "double"
        },
        "MatterTemplatePermissionTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "SpecifiedPermissions": {
          "type": "array",
          "items": { "type": "string" }
        },
        "MatterEverGreenInfo": {
          "type": "object",
          "$ref": "#/definitions/MatterEverGreenInfo"
        },
        "RelatedContacts": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterRelatedContact" }
        },
        "CustomFields": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterCustomField" }
        }
      }
    },
    "MatterPermissionType": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterPermission": {
      "type": "object",
      "properties": {
        "MatterID": {
          "type": "integer",
          "format": "int32"
        },
        "UserID": {
          "type": "integer",
          "format": "int32"
        },
        "User": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "UserFullName": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "ParentEventId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterID": {
          "type": "integer",
          "format": "int32"
        },
        "MatterName": { "type": "string" },
        "Title": { "type": "string" },
        "Notes": { "type": "string" },
        "Location": { "type": "string" },
        "StartDateString": { "type": "string" },
        "StartDate": {
          "type": "string",
          "format": "date-time"
        },
        "StartDay": { "type": "string" },
        "StartTime": { "type": "string" },
        "EndDay": { "type": "string" },
        "EndTime": { "type": "string" },
        "EndDateString": { "type": "string" },
        "EndDate": {
          "type": "string",
          "format": "date-time"
        },
        "BillingDate": {
          "type": "string",
          "format": "date-time"
        },
        "OwnerID": {
          "type": "integer",
          "format": "int32"
        },
        "Owner": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "OwnerName": { "type": "string" },
        "Bill": { "type": "boolean" },
        "NonBillable": { "type": "boolean" },
        "Attendees": {
          "type": "array",
          "items": { "$ref": "#/definitions/EventAttendee" }
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Milestones": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskEventMilestone" }
        },
        "MatterTemplateMilestoneActionId": {
          "type": "integer",
          "format": "int32"
        },
        "IsMilestonePending": { "type": "boolean" },
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        },
        "IsPrivate": { "type": "boolean" },
        "IsFlagged": { "type": "boolean" },
        "IsAllDayEvent": { "type": "boolean" },
        "IsRecurringEvent": { "type": "boolean" },
        "RemindParticipants": { "type": "boolean" },
        "ReminderInterval": {
          "type": "integer",
          "format": "int32"
        },
        "RecurringFrequency": {
          "type": "integer",
          "format": "int32"
        },
        "RecurringInterval": {
          "type": "string",
          "enum": [ "Day", "Weekday", "Week", "Month", "Year", "Custom" ]
        },
        "RecurringEventEndType": {
          "type": "string",
          "enum": [ "Never", "After", "On" ]
        },
        "ReminderIntervalType": {
          "type": "string",
          "enum": [ "Minutes", "Hours", "Days", "Months" ]
        },
        "RecurringEventEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "ReminderDate": {
          "type": "string",
          "format": "date-time"
        },
        "RecurringEventOccurences": {
          "type": "integer",
          "format": "int32"
        },
        "OwnerIsRole": { "type": "boolean" },
        "OwnerRole": { "type": "string" },
        "IsInvoiced": { "type": "boolean" },
        "WebLink": { "type": "string" },
        "IsCourtRule": { "type": "boolean" },
        "MatterCourtRuleId": { "type": "string" },
        "ThirdPartyDeadlineId": { "type": "string" },
        "IsStatute": { "type": "boolean" },
        "EventUser": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EventAttendee": {
      "type": "object",
      "properties": {
        "EventID": {
          "type": "integer",
          "format": "int32"
        },
        "UserID": {
          "type": "integer",
          "format": "int32"
        },
        "User": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "Bill": { "type": "boolean" },
        "NonBillable": { "type": "boolean" },
        "AttendeeName": { "type": "string" },
        "Contact": {
          "type": "object",
          "$ref": "#/definitions/Contact"
        },
        "IsRole": { "type": "boolean" },
        "Role": { "type": "string" },
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "InviteStatusTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskEventMilestone": {
      "type": "object",
      "properties": {
        "TaskId": {
          "type": "integer",
          "format": "int32"
        },
        "EventId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterTemplateMilestoneId": {
          "type": "integer",
          "format": "int32"
        },
        "MilestoneDate": {
          "type": "string",
          "format": "date-time"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "Title": { "type": "string" },
        "DueDate": { "type": "string" },
        "OwnerID": {
          "type": "integer",
          "format": "int32"
        },
        "Owner": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "AssignedToID": {
          "type": "integer",
          "format": "int32"
        },
        "AssignTo": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Position": {
          "type": "integer",
          "format": "int32"
        },
        "MatterID": {
          "type": "integer",
          "format": "int32"
        },
        "MatterPosition": {
          "type": "integer",
          "format": "int32"
        },
        "Milestones": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskEventMilestone" }
        },
        "MatterTemplateMilestoneActionId": {
          "type": "integer",
          "format": "int32"
        },
        "IsMilestonePending": { "type": "boolean" },
        "IsComplete": { "type": "boolean" },
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientMatter": { "type": "object" },
        "IsRead": { "type": "boolean" },
        "Invoiced": { "type": "boolean" },
        "PendingInvoicing": { "type": "boolean" },
        "BillingDate": {
          "type": "string",
          "format": "date-time"
        },
        "TotalSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "BillableUnits": {
          "type": "number",
          "format": "double"
        },
        "Notes": { "type": "string" },
        "Cost": {
          "type": "number",
          "format": "double"
        },
        "IsNoCharge": { "type": "boolean" },
        "IsNonBillable": { "type": "boolean" },
        "CompletedDate": {
          "type": "string",
          "format": "date-time"
        },
        "OwnerIsRole": { "type": "boolean" },
        "AssignedToIsRole": { "type": "boolean" },
        "OwnerRole": { "type": "string" },
        "AssignedToRole": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterStatueOfLimitation": {
      "type": "object",
      "properties": {
        "DoesNotExpire": { "type": "boolean" },
        "ExpirationDate": { "type": "string" }
      }
    },
    "Matter": {
      "type": "object",
      "properties": {
        "Description": { "type": "string" },
        "MatterType": {
          "type": "object",
          "$ref": "#/definitions/MatterType"
        },
        "FlatFeeOf": {
          "type": "number",
          "format": "double"
        },
        "MatterPermissionTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "MatterEverGreenInfo": {
          "type": "object",
          "$ref": "#/definitions/MatterEverGreenInfo"
        },
        "RelatedContacts": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterRelatedContact" }
        },
        "CustomFields": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterCustomField" }
        },
        "MatterPermissionType": {
          "type": "object",
          "$ref": "#/definitions/MatterPermissionType"
        },
        "Permissions": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterPermission" }
        },
        "Events": {
          "type": "array",
          "items": { "$ref": "#/definitions/Event" }
        },
        "Tasks": {
          "type": "array",
          "items": { "$ref": "#/definitions/Task" }
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "PrimaryAttorneyContactID": {
          "type": "integer",
          "format": "int32"
        },
        "StatueOfLimitation": {
          "type": "object",
          "$ref": "#/definitions/MatterStatueOfLimitation"
        },
        "ShareInvoicesAutomaticallyWith": {
          "type": "array",
          "items": { "$ref": "#/definitions/Client" }
        },
        "ShareInvoiceSettings": {
          "type": "array",
          "items": { "$ref": "#/definitions/ShareInvoiceSetting" }
        },
        "InvoiceTemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "IsSystemMatter": { "type": "boolean" },
        "EnablePaymentProcessingFee": { "type": "boolean" },
        "PaymentProcessingFeePercent": {
          "type": "number",
          "format": "double"
        },
        "EnableSurchargeFee": { "type": "boolean" },
        "SurchargeHistoryId": {
          "type": "number",
          "format": "double"
        },
        "OpenDate": {
          "type": "string",
          "format": "date-time"
        },
        "ClosedDate": {
          "type": "string",
          "format": "date-time"
        },
        "CompletedDate": {
          "type": "string",
          "format": "date-time"
        },
        "MatterTemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "EmailFolder": { "type": "string" },
        "IsPendingImport": { "type": "boolean" },
        "MatterWorkFlowStatusId": { "type": "string" },
        "MatterBudget": {
          "type": "object",
          "$ref": "#/definitions/MatterBudget"
        },
        "FireTemplateSelection": { "type": "boolean" },
        "Client": {
          "type": "object",
          "$ref": "#/definitions/Client"
        },
        "Name": { "type": "string" },
        "ClientMatter": { "type": "string" },
        "MatterTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "MatterStatusTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "TaxRateId": { "type": "string" },
        "DiscountRateId": { "type": "string" },
        "InterestRateId": { "type": "string" },
        "SurchargeRateId": { "type": "string" },
        "DefaultBillingTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterDateOption": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TwoFactorAuthenticationInstallation": {
      "type": "object",
      "properties": {}
    },
    "checkIfFeatureIsEnabledResponse": {
      "type": "object",
      "properties": {
        "Enabled": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetMatterSharedInvoiceSettingsResponse": {
      "type": "object",
      "properties": {
        "Settings": {
          "type": "array",
          "items": { "$ref": "#/definitions/ShareInvoiceSetting" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "FirmInfo": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Email": { "type": "string" },
        "AddressLine1": { "type": "string" },
        "AddressLine2": { "type": "string" },
        "Phone": { "type": "string" },
        "State": { "type": "string" },
        "ZipCode": { "type": "string" },
        "City": { "type": "string" },
        "FullAddress": { "type": "string" }
      }
    },
    "GetPublicAPIKeyResponse": {
      "type": "object",
      "properties": {
        "APIUrl": { "type": "string" },
        "HasOperatingAccount": { "type": "boolean" },
        "HasTrustAccount": { "type": "boolean" },
        "OperatingAccountAPIKey": { "type": "string" },
        "OperatingJSSecurityKey": { "type": "string" },
        "OperatingMerchantToken": { "type": "string" },
        "OperatingTransArmorToken": { "type": "string" },
        "PartnerCode": { "type": "string" },
        "TrustAccountAPIKey": { "type": "string" },
        "TrustJSSecurityKey": { "type": "string" },
        "TrustMerchantToken": { "type": "string" },
        "TrustTransArmorToken": { "type": "string" },
        "FirmInfo": {
          "type": "object",
          "$ref": "#/definitions/FirmInfo"
        },
        "hasACHTrust": { "type": "boolean" },
        "hasACHOperating": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "IsReceivingInvoicesBySpecifiedEmailTypeResponse": {
      "type": "object",
      "properties": {
        "IsReceiving": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveMatterSharedInvoiceSettingsResponse": {
      "type": "object",
      "properties": {
        "Settings": {
          "type": "array",
          "items": { "$ref": "#/definitions/ShareInvoiceSetting" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "AddTwoFactorAuthenticationPhoneNumberResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ClientSaveResponse": {
      "type": "object",
      "properties": {
        "Client": {
          "type": "object",
          "$ref": "#/definitions/Client"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "CompleteTwoFactorAuthenticationSetupResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "CreateClientFromStringResponse": {
      "type": "object",
      "properties": {
        "Client": {
          "type": "object",
          "$ref": "#/definitions/Client"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteMatterTemplateResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DisableTwoFactorResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DoesClientMatterExistsResponse": {
      "type": "object",
      "properties": {
        "Exists": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "EnableTwoFactorAuthenticationResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GenerateTwoFactorAuthenticationQRCodeResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetAllClientsReponse": {
      "type": "object",
      "properties": {
        "Clients": {
          "type": "array",
          "items": { "$ref": "#/definitions/Client" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetBillableActivitiesResponse": {
      "type": "object",
      "properties": {
        "Activities": {
          "type": "array",
          "items": { "$ref": "#/definitions/BillableActivity" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetByFullNameResponse": {
      "type": "object",
      "properties": {
        "User": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetClientByCodeResponse": {
      "type": "object",
      "properties": {
        "Client": {
          "type": "object",
          "$ref": "#/definitions/Client"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetFutureDateResponse": {
      "type": "object",
      "properties": {
        "Date": { "type": "string" },
        "DateLong": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetMatterBySearchResponse": {
      "type": "object",
      "properties": {
        "Matters": {
          "type": "array",
          "items": { "$ref": "#/definitions/BaseMatter" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterFromTemplatePackage": {
      "type": "object",
      "properties": {
        "Matter": {
          "type": "object",
          "$ref": "#/definitions/Matter"
        },
        "TaskEventSummary": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskEventInfo" }
        }
      }
    },
    "TaskEventInfo": {
      "type": "object",
      "properties": {
        "Title": { "type": "string" },
        "Type": { "type": "string" },
        "TaskDueDateInfo": { "type": "string" },
        "TaskOwnerInfo": { "type": "string" },
        "TaskDueDate": { "type": "string" },
        "MatterTaskDueDateInfo": { "type": "string" },
        "MatterTaskOwnerInfo": { "type": "string" },
        "MatterTaskAssignToInfo": { "type": "string" },
        "EventStartTimeInfo": { "type": "string" },
        "EventLocation": { "type": "string" },
        "EventOwnerNameInfo": { "type": "string" },
        "EventOwnerBillingInfo": { "type": "string" },
        "AttendeeInfo": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskEventInfoAttendeeDetail" }
        },
        "EventFromInfo": { "type": "string" },
        "EventToInfo": { "type": "string" },
        "EventStartDate": { "type": "string" },
        "EventEndDate": { "type": "string" },
        "SortDate": { "type": "string" },
        "OrderID": {
          "type": "integer",
          "format": "int32"
        },
        "tmpInfoID": { "type": "string" },
        "Milestones": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateMilestone" }
        },
        "MilestoneAction": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateMilestoneAction"
        },
        "IsMilestone": { "type": "boolean" }
      }
    },
    "GetMatterFromTemplatePackageReponse": {
      "type": "object",
      "properties": {
        "MatterFromTemplatePackage": {
          "type": "object",
          "$ref": "#/definitions/MatterFromTemplatePackage"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetMatterTemplateResponse": {
      "type": "object",
      "properties": {
        "MatterTemplate": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplate"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetNewMatterFromTemplateResponse": {
      "type": "object",
      "properties": {
        "Matter": {
          "type": "object",
          "$ref": "#/definitions/Matter"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetPersonContactsResponse": {
      "type": "object",
      "properties": {
        "Contacts": {
          "type": "array",
          "items": { "$ref": "#/definitions/Contact" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetSortedTaskAndEventSummaryInfoResponse": {
      "type": "object",
      "properties": {
        "TaskEventSummary": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaskEventInfo" }
        },
        "Milestones": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateMilestone" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetTwoFactorAuthenticationCodeResponse": {
      "type": "object",
      "properties": {
        "AuthenticationCode": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetTwoFactorAuthenticationCodeVerificationResponse": {
      "type": "object",
      "properties": {
        "Verified": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetTwoFactorAuthenticationExistingPhoneNumbersResponse": {
      "type": "object",
      "properties": {
        "PhoneNumbers": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetTwoFactorAuthenticationPhoneNumberResponse": {
      "type": "object",
      "properties": {
        "PhoneNumber": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetTwoFactorAuthenticationPreviouslyUsedRecoveryCodeReponse": {
      "type": "object",
      "properties": {
        "RecoveryCode": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetTwoFactorAuthenticationRecoveryCodeResponse": {
      "type": "object",
      "properties": {
        "RecoveryCode": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetTwoFactorAuthenticationRecoveryCodesResponse": {
      "type": "object",
      "properties": {
        "RecoveryCodes": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetTwoFactorAuthenticationSecretKeyResponse": {
      "type": "object",
      "properties": {
        "SecretKey": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetTwoFactorAuthenticationSetupStatusResponse": {
      "type": "object",
      "properties": {
        "Status": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterTemplateDateOptionsGetByDisplayGroupResponse": {
      "type": "object",
      "properties": {
        "MatterTemplateDateOptions": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateDateOption" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterTemplateExistsResponse": {
      "type": "object",
      "properties": {
        "Exists": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SearchClientsReponse": {
      "type": "object",
      "properties": {
        "Clients": {
          "type": "array",
          "items": { "$ref": "#/definitions/Client" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SearchPersonContactsResponse": {
      "type": "object",
      "properties": {
        "Contacts": {
          "type": "array",
          "items": { "$ref": "#/definitions/Contact" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SendSMSCodeResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UpdateTwoFactorAuthenticationPhoneNumberResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "VerifyAndEnableTwoFactorAuthenticationResponse": {
      "type": "object",
      "properties": {
        "IsVerified": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "VerifyTwoFactorAuthenticationRecoveryCodeResponse": {
      "type": "object",
      "properties": {
        "Verified": { "type": "boolean" },
        "FailedAttemptCount": {
          "type": "integer",
          "format": "int32"
        },
        "IsLockedOut": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "VerifyTwoFactorAuthenticationResponse": {
      "type": "object",
      "properties": {
        "Verified": { "type": "boolean" },
        "FailedAttemptCount": {
          "type": "integer",
          "format": "int32"
        },
        "IsLockedOut": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "VerifyTwoFactorSmsCodeResponse": {
      "type": "object",
      "properties": {
        "Verified": { "type": "boolean" },
        "FailedAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "IsLockedOut": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UpdateShareInvoiceSettingsToOtherEmailResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterCreateFromTemplateResponse": {
      "type": "object",
      "properties": {
        "Matter": {
          "type": "object",
          "$ref": "#/definitions/Matter"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterGetResponse": {
      "type": "object",
      "properties": {
        "Matter": {
          "type": "object",
          "$ref": "#/definitions/Matter"
        },
        "AccessDenied": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterSaveResponse": {
      "type": "object",
      "properties": {
        "Matter": {
          "type": "object",
          "$ref": "#/definitions/Matter"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterTemplateSaveResponse": {
      "type": "object",
      "properties": {
        "MatterTemplate": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplate"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "TimeOptionsGetAllResponse": {
      "type": "object",
      "properties": {
        "Times": {
          "type": "array",
          "items": { "$ref": "#/definitions/TimeOption" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "TimeOptionsGetNextTimesResponse": {
      "type": "object",
      "properties": {
        "Times": {
          "type": "array",
          "items": { "$ref": "#/definitions/TimeOption" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterWorkFlowStatus": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Name": { "type": "string" },
        "Description": { "type": "string" }
      }
    },
    "AddEditWorkflowStatusResponse": {
      "type": "object",
      "properties": {
        "MatterWorkFlowStatus": {
          "type": "object",
          "$ref": "#/definitions/MatterWorkFlowStatus"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ApplyNewMatterWorkFlowStatusResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetMatterWorkFLowStatusesResponse": {
      "type": "object",
      "properties": {
        "MatterWorkFlowStatuses": { "type": "object" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ValidationRule": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "MinValue": {
          "type": "number",
          "format": "double"
        },
        "MinValueMessage": { "type": "string" },
        "MaxValue": {
          "type": "number",
          "format": "double"
        },
        "MaxValueMessage": { "type": "string" },
        "MinLength": {
          "type": "integer",
          "format": "int32"
        },
        "MinLengthMessage": { "type": "string" },
        "MaxLength": {
          "type": "integer",
          "format": "int32"
        },
        "MaxLengthMessage": { "type": "string" },
        "Required": { "type": "boolean" },
        "RequiredMessage": { "type": "string" },
        "DisplayName": { "type": "string" },
        "Extend": { "type": "string" },
        "Overrides": { "type": "object" },
        "Precision": {
          "type": "integer",
          "format": "int32"
        },
        "RequiresPrecision": { "type": "boolean" },
        "RequiresPrecisionMessage": { "type": "string" },
        "FormatMessage": { "type": "string" },
        "CharacterValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/CharacterValidationRule" }
        }
      }
    },
    "ValidationMappingRef": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Rules": { "type": "object" }
      }
    },
    "AllValidationsResponse": {
      "type": "object",
      "properties": {
        "Rules": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationRule" }
        },
        "Mappings": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationMappingRef" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetActiveUsersResponse": {
      "type": "object",
      "properties": {
        "Users": {
          "type": "array",
          "items": { "$ref": "#/definitions/User" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetUserNavigationPreferencesResponse": {
      "type": "object",
      "properties": {
        "EmbeddedHelpEnabled": { "type": "boolean" },
        "MatterTemplatesEnabled": { "type": "boolean" },
        "CurrentInstall": { "type": "string" },
        "InstallsAccess": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetUserPreferenceResponse": {
      "type": "object",
      "properties": {
        "Value": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetUsersAccessResponse": {
      "type": "object",
      "properties": {
        "CurrentInstall": { "type": "string" },
        "InstallsAccess": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SetUserPreferenceResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "TrustDetailsResponse": {
      "type": "object",
      "properties": {
        "TrustBalance": {
          "type": "number",
          "format": "double"
        },
        "PendingWithdrawal": {
          "type": "number",
          "format": "double"
        },
        "CurrencySymbol": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ActiveTimer": {
      "type": "object",
      "properties": {
        "TimerStart": {
          "type": "string",
          "format": "date-time"
        },
        "AccumulatedTime": {
          "type": "integer",
          "format": "int32"
        },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "BillingDate": {
          "type": "string",
          "format": "date-time"
        },
        "ClientMatter": { "type": "string" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "Description": { "type": "string" },
        "NoCharge": { "type": "boolean" },
        "NonBillable": { "type": "boolean" },
        "BilledActivityId": {
          "type": "integer",
          "format": "int32"
        },
        "BillableUnits": {
          "type": "number",
          "format": "double"
        },
        "IsDeleted": { "type": "boolean" },
        "Id": { "type": "string" }
      }
    },
    "GetEvenIfDeletedResponse": {
      "type": "object",
      "properties": {
        "ActiveTimer": {
          "type": "object",
          "$ref": "#/definitions/ActiveTimer"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "TimerResponse": {
      "type": "object",
      "properties": {
        "ActiveTimer": {
          "type": "object",
          "$ref": "#/definitions/ActiveTimer"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "TimersResponse": {
      "type": "object",
      "properties": {
        "ActiveTimers": {
          "type": "array",
          "items": { "$ref": "#/definitions/ActiveTimer" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteTaskResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetCommonTagsResponse": {
      "type": "object",
      "properties": {
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetTaskByActivityIdResponse": {
      "type": "object",
      "properties": {
        "Task": {
          "type": "object",
          "$ref": "#/definitions/Task"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetTasksByFilterResponse": {
      "type": "object",
      "properties": {
        "Tasks": {
          "type": "array",
          "items": { "$ref": "#/definitions/Task" }
        },
        "TotalCount": {
          "type": "integer",
          "format": "int32"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetTasksForMatterResponse": {
      "type": "object",
      "properties": {
        "Tasks": {
          "type": "array",
          "items": { "$ref": "#/definitions/Task" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveTaskResponse": {
      "type": "object",
      "properties": {
        "Task": {
          "type": "object",
          "$ref": "#/definitions/Task"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "AddRemoveTagResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SubscriptionAgreementResponse": {
      "type": "object",
      "properties": {
        "HasAgreed": { "type": "boolean" },
        "RequiresAgreement": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SignupCCEntryResponse": {
      "type": "object",
      "properties": {
        "CreditCardResponse": {
          "type": "string",
          "enum": [ "CCError", "CCDeclined", "CCSuccess" ]
        },
        "InvalidCoupon": { "type": "boolean" },
        "AccountResponse": {
          "type": "string",
          "enum": [ "Failure", "Success" ]
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "FirstTimeUserInfoResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GlobalSearchResultSet": {
      "type": "object",
      "properties": {
        "GlobalContactsResults": {
          "type": "array",
          "items": { "$ref": "#/definitions/GlobalContactSearchResult" }
        },
        "GlobalClientsResults": {
          "type": "array",
          "items": { "$ref": "#/definitions/GlobalClientSearchResult" }
        },
        "GlobalMattersResults": {
          "type": "array",
          "items": { "$ref": "#/definitions/GlobalMatterSearchResult" }
        },
        "GlobalActivityResults": {
          "type": "array",
          "items": { "$ref": "#/definitions/GlobalActivitySearchResult" }
        },
        "GlobalTagsResults": {
          "type": "array",
          "items": { "$ref": "#/definitions/GlobalTagSearchResult" }
        }
      }
    },
    "GlobalContactSearchResult": {
      "type": "object",
      "properties": {
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "ContactName": { "type": "string" },
        "ContactPhone": { "type": "string" },
        "ResultStrength": {
          "type": "integer",
          "format": "int32"
        },
        "ResultTokens": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GlobalClientSearchResult": {
      "type": "object",
      "properties": {
        "ClientId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientName": { "type": "string" },
        "ResultStrength": {
          "type": "integer",
          "format": "int32"
        },
        "ResultTokens": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GlobalMatterSearchResult": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterName": { "type": "string" },
        "ResultStrength": {
          "type": "integer",
          "format": "int32"
        },
        "ResultTokens": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GlobalActivitySearchResult": {
      "type": "object",
      "properties": {
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        },
        "Description": { "type": "string" },
        "ResultStrength": {
          "type": "integer",
          "format": "int32"
        },
        "ResultTokens": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GlobalTagSearchResult": {
      "type": "object",
      "properties": {
        "TagId": {
          "type": "integer",
          "format": "int32"
        },
        "TagName": { "type": "string" },
        "ResultStrength": {
          "type": "integer",
          "format": "int32"
        },
        "ResultTokens": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GlobalSearchResponse": {
      "type": "object",
      "properties": {
        "SearchResults": {
          "type": "object",
          "$ref": "#/definitions/GlobalSearchResultSet"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SearchResult": {
      "type": "object",
      "properties": {
        "ResultText": { "type": "string" },
        "ResultExtraData": { "type": "string" },
        "ResultType": {
          "type": "string",
          "enum": [ "Contact", "Client", "Matter", "Activity", "Tag", "ContactCustomField", "MatterCustomField" ]
        },
        "ResultLocation": {
          "type": "string",
          "enum": [ "MatterName", "MatterDescription", "MatterRelatedContact", "ContactName", "ContactNotes", "ContactRelationship", "ClientName", "BillingDescription", "NotesTitle", "NotesBody", "CalendarEntryTitle", "PhoneMessageCaller", "PhoneMessageSubject", "DocumentTitle", "EmailSubject", "EmailBody", "TaskTitle", "DeletedActivity", "MatterCustomFieldValue", "MatterCustomFieldName", "ContactCustomFieldValue", "ContactCustomFieldName", "EventLocation" ]
        },
        "ResultId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterContext": { "type": "string" },
        "MatterContextId": {
          "type": "integer",
          "format": "int32"
        },
        "ContactContext": { "type": "string" },
        "ContactContextId": {
          "type": "integer",
          "format": "int32"
        },
        "ResultLocationDisplay": { "type": "string" },
        "ResultTypeDisplay": { "type": "string" }
      }
    },
    "SearchOccurenceForTypeResponse": {
      "type": "object",
      "properties": {
        "Results": {
          "type": "array",
          "items": { "$ref": "#/definitions/SearchResult" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Retainer": {
      "type": "object",
      "properties": {
        "RequestDate": { "type": "string" },
        "MatterName": { "type": "string" },
        "ClientName": { "type": "string" },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetRetainerRequestResponse": {
      "type": "object",
      "properties": {
        "Firm": {
          "type": "object",
          "$ref": "#/definitions/FirmInfo"
        },
        "Client": {
          "type": "object",
          "$ref": "#/definitions/Client"
        },
        "Retainer": {
          "type": "object",
          "$ref": "#/definitions/Retainer"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveRetainerRequestResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ReportMetaData": {
      "type": "object",
      "properties": {
        "ColumnWidths": { "type": "object" },
        "IsPagedReport": { "type": "boolean" },
        "AggregateKeys": {
          "type": "array",
          "items": { "type": "string" }
        },
        "FilterState": {
          "type": "object",
          "$ref": "#/definitions/ReportFilterState"
        },
        "PageSize": {
          "type": "integer",
          "format": "int32"
        },
        "ReportDisplayName": { "type": "string" },
        "HasAccess": { "type": "boolean" },
        "UseWideScreen": { "type": "boolean" },
        "RunOnLoad": { "type": "boolean" },
        "SaveReportState": { "type": "boolean" },
        "HelpfullTips": { "type": "string" },
        "LoadSavedReportStateOnlyOnBack": { "type": "boolean" },
        "BreadCrumbs": {
          "type": "array",
          "items": { "$ref": "#/definitions/BreadCrumb" }
        },
        "DisableSort": { "type": "boolean" },
        "DisableSummary": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReportFilterState": {
      "type": "object",
      "properties": {
        "ShowDateRange": { "type": "boolean" },
        "DateRangeText": { "type": "string" },
        "ShowDateRangeWithCalculateHrs": { "type": "boolean" },
        "SearchClients": { "type": "boolean" },
        "SearchClientsRequired": { "type": "boolean" },
        "ClientSearchText": { "type": "string" },
        "SearchOriginator": { "type": "boolean" },
        "OriginatorSearchText": { "type": "string" },
        "SearchMatters": { "type": "boolean" },
        "SearchMattersRequired": { "type": "boolean" },
        "MatterSearchText": { "type": "string" },
        "ShowMatterCustomFields": { "type": "boolean" },
        "MatterCustomFieldsSearchText": { "type": "string" },
        "SearchContacts": { "type": "boolean" },
        "SearchContactsRequired": { "type": "boolean" },
        "ContactsSearchText": { "type": "string" },
        "ContactRelationship": { "type": "string" },
        "ShowContactCustomFields": { "type": "boolean" },
        "ContactCustomFieldsSearchText": { "type": "string" },
        "SearchUsers": { "type": "boolean" },
        "SearchUsersRequired": { "type": "boolean" },
        "SearchMultipleUsers": { "type": "boolean" },
        "UserSearchText": { "type": "string" },
        "SearchTaxRates": { "type": "boolean" },
        "TaxRateSearchText": { "type": "string" },
        "SearchTaxRatesRequired": { "type": "boolean" },
        "SearchSurchargeRates": { "type": "boolean" },
        "SurchargeRateSearchText": { "type": "string" },
        "SearchSurchargeRatesRequired": { "type": "boolean" },
        "FilterVal": {
          "type": "object",
          "$ref": "#/definitions/FilterVal"
        },
        "MatterCustomFieldsSearchValueText": { "type": "string" },
        "ShowMatterCustomFieldsValues": { "type": "boolean" },
        "AreaOfLawFieldsSearchValueText": { "type": "string" },
        "ShowAreaOfLawFieldsValueSearch": { "type": "boolean" },
        "MatterTagsSearchValueText": { "type": "string" },
        "MatterTagsValueSearch": { "type": "boolean" }
      }
    },
    "FilterVal": {
      "type": "object",
      "properties": {
        "Report": { "type": "string" },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "UserIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "ClientId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "TaxRateId": { "type": "string" },
        "TaxRateDescription": { "type": "string" },
        "SurchargeRateId": { "type": "string" },
        "StartDate": { "type": "string" },
        "EndDate": { "type": "string" },
        "StartDateChange": { "type": "string" },
        "EndDateChange": { "type": "string" },
        "CustomFilters": { "type": "object" },
        "CustomFieldCollection": {
          "type": "array",
          "items": { "type": "string" }
        },
        "MatterTagsCollection": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "BreadCrumb": {
      "type": "object",
      "properties": {
        "PageTitle": { "type": "string" },
        "QueryString": { "type": "string" },
        "Location": { "type": "string" }
      }
    },
    "GetReportMetaDataResponse": {
      "type": "object",
      "properties": {
        "MetaData": {
          "type": "object",
          "$ref": "#/definitions/ReportMetaData"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetReportSummaryResponse": {
      "type": "object",
      "properties": {
        "Summary": { "type": "object" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UserReportPreference": {
      "type": "object",
      "properties": {
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "PreferenceKey": { "type": "string" },
        "PreferenceValue": { "type": "string" },
        "Id": { "type": "string" }
      }
    },
    "GetUserReportPreferenceResponse": {
      "type": "object",
      "properties": {
        "Preference": {
          "type": "object",
          "$ref": "#/definitions/UserReportPreference"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "RunReportResponse": {
      "type": "object",
      "properties": {
        "ReportData": {
          "type": "array",
          "items": { "type": "object" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveUserReportPreferenceResponse": {
      "type": "object",
      "properties": {
        "Preference": {
          "type": "object",
          "$ref": "#/definitions/UserReportPreference"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "AccountsPayableReport": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientId": {
          "type": "integer",
          "format": "int32"
        },
        "Client": { "type": "string" },
        "Matter": { "type": "string" },
        "ClientMatter": { "type": "string" },
        "LastPaymentDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastPaymentAmount": {
          "type": "number",
          "format": "double"
        },
        "Description": { "type": "string" },
        "LastPaymentAmountString": { "type": "string" },
        "LastPaymentDateString": { "type": "string" },
        "IsAdjustment": { "type": "boolean" },
        "IsPayment": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetAccountsPayableReportResponse": {
      "type": "object",
      "properties": {
        "Reports": {
          "type": "array",
          "items": { "$ref": "#/definitions/AccountsPayableReport" }
        },
        "ReportTotal": {
          "type": "number",
          "format": "double"
        },
        "ReportAdjustments": {
          "type": "number",
          "format": "double"
        },
        "ReportPayments": {
          "type": "number",
          "format": "double"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterReport": {
      "type": "object",
      "properties": {
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "UserName": { "type": "string" },
        "ClientId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientContactId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientName": { "type": "string" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterName": { "type": "string" },
        "Type": { "type": "string" },
        "MatterTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "StatusType": { "type": "string" },
        "MatterStatusTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "StatuteOfLimitations": {
          "type": "string",
          "format": "date-time"
        },
        "OpenDate": {
          "type": "string",
          "format": "date-time"
        },
        "MostRecentActivity": {
          "type": "string",
          "format": "date-time"
        },
        "CurrentBalance": {
          "type": "number",
          "format": "double"
        },
        "CurrencySymbol": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetMatterReportsResponse": {
      "type": "object",
      "properties": {
        "Reports": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterReport" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterReportSummary": {
      "type": "object",
      "properties": {
        "TotalCount": {
          "type": "integer",
          "format": "int32"
        },
        "TotalBalance": {
          "type": "number",
          "format": "double"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetMatterReportSummaryResponse": {
      "type": "object",
      "properties": {
        "Summary": {
          "type": "object",
          "$ref": "#/definitions/MatterReportSummary"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "CancelPaymentPlanResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "RecurringBillingPlan": {
      "type": "object",
      "properties": {
        "IsEnabled": { "type": "boolean" },
        "AccountType": { "type": "string" },
        "NameOnAccount": { "type": "string" },
        "PaymentHint": { "type": "string" },
        "ExpDate": { "type": "string" },
        "RecurringBillingPlanMethod": {
          "type": "object",
          "$ref": "#/definitions/RecurringBillingMethod"
        },
        "RecurringBillingMethodId": { "type": "string" },
        "AmountToBePaid": {
          "type": "number",
          "format": "double"
        },
        "DateOfFirstPayment": { "type": "string" },
        "NumberOfPayments": {
          "type": "integer",
          "format": "int32"
        },
        "InitialAmount": {
          "type": "number",
          "format": "double"
        },
        "InterationType": { "type": "string" },
        "PartialAmount": {
          "type": "number",
          "format": "double"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "AutomaticallyCharge": { "type": "boolean" },
        "AutoGenerateInvoice": { "type": "boolean" },
        "ReadOnly_PaymentsMade": {
          "type": "integer",
          "format": "int32"
        },
        "ReadOnly_PaymentsRemaining": {
          "type": "integer",
          "format": "int32"
        },
        "ReadOnly_RecurringBillingPlanStatusId": { "type": "string" },
        "ReadOnly_RecurringBillingPlanStatus": { "type": "string" },
        "RecurringBillingPlanFailureNotifications": {
          "type": "array",
          "items": { "$ref": "#/definitions/RecurringBillingPlanFailureNotification" }
        },
        "RecurringBillingPlanDetails": {
          "type": "array",
          "items": { "$ref": "#/definitions/RecurringBillingPlanDetail" }
        },
        "ChargeToken": { "type": "string" },
        "ChargeTokenTrust": { "type": "string" },
        "PlanType": { "type": "string" },
        "PostPaymentTo": { "type": "string" },
        "ReadOnly_PaymentAmountRemaining": {
          "type": "number",
          "format": "double"
        },
        "ReadOnly_PaymentAmountPaid": {
          "type": "number",
          "format": "double"
        },
        "ReadOnly_TotalPlanAmount": {
          "type": "number",
          "format": "double"
        },
        "TaxAmountToBePaid": {
          "type": "number",
          "format": "double"
        },
        "Id": { "type": "string" }
      }
    },
    "RecurringBillingMethod": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "OrderID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RecurringBillingPlanFailureNotification": {
      "type": "object",
      "properties": {
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "User": {
          "type": "object",
          "$ref": "#/definitions/Contact"
        }
      }
    },
    "RecurringBillingPlanDetail": {
      "type": "object",
      "properties": {
        "Date": { "type": "string" },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "Name": { "type": "string" },
        "Paid": { "type": "boolean" },
        "OrderId": {
          "type": "integer",
          "format": "int32"
        },
        "IsBilledFor": { "type": "boolean" },
        "IsAchFailedPayment": { "type": "boolean" },
        "Id": { "type": "string" }
      }
    },
    "CommitPlanResponse": {
      "type": "object",
      "properties": {
        "Plan": {
          "type": "object",
          "$ref": "#/definitions/RecurringBillingPlan"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterBalance": {
      "type": "object",
      "properties": {
        "CurrentAccountBalance": {
          "type": "number",
          "format": "double"
        },
        "RetainerDue": {
          "type": "number",
          "format": "double"
        },
        "LatestInvoiceId": {
          "type": "integer",
          "format": "int32"
        },
        "Type": { "type": "string" },
        "PendingTrustAmount": {
          "type": "number",
          "format": "double"
        },
        "Balance": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "GetMatterPaymentPlanResponse": {
      "type": "object",
      "properties": {
        "Plan": {
          "type": "object",
          "$ref": "#/definitions/RecurringBillingPlan"
        },
        "MatterBalance": {
          "type": "object",
          "$ref": "#/definitions/MatterBalance"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GeneratePaymentPlanResponse": {
      "type": "object",
      "properties": {
        "Plan": {
          "type": "object",
          "$ref": "#/definitions/RecurringBillingPlan"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ProcessPaymentPlansResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UpdatePlanNotificationResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UpdatePaymentPlanTokenResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteMatterRatesResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UserCustomMatterRate": {
      "type": "object",
      "properties": {
        "MatterRateId": {
          "type": "integer",
          "format": "int32"
        },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "Rate": {
          "type": "number",
          "format": "double"
        },
        "EffectiveDate": {
          "type": "string",
          "format": "date-time"
        },
        "CreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientMatter": { "type": "string" },
        "MatterName": { "type": "string" },
        "ClientCode": { "type": "string" },
        "UserName": { "type": "string" },
        "UserFirmRoleId": { "type": "string" },
        "UserFirmRole": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetMatterCustomRatesResponse": {
      "type": "object",
      "properties": {
        "Rates": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserCustomMatterRate" }
        },
        "TotalCount": {
          "type": "integer",
          "format": "int32"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveCustomRateConfigResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetCopy2ContactsJavaScriptResponse": {
      "type": "object",
      "properties": {
        "ScriptText": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "QuickbooksBucket": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "QBOId": { "type": "string" },
        "Name": { "type": "string" },
        "BucketType": {
          "type": "string",
          "enum": [ "Other", "AccountsReceivables", "CreditAdj", "Expense", "LegalFeeIncome", "OperatingCash", "TrustCash", "TrustLiability" ]
        },
        "SyncCheckType": {
          "type": "string",
          "enum": [ "NoneAsCheck", "AllChecks", "SpecificAsChecks" ]
        },
        "Selected": { "type": "boolean" },
        "ExcludeFromSync": { "type": "boolean" }
      }
    },
    "ConnectQuickbooksResponse": {
      "type": "object",
      "properties": {
        "FailureReason": {
          "type": "string",
          "enum": [ "None", "PreviousAuthWithDifferentCompany", "NoCurrentAuth", "BucketDoesNotExist", "InvalidAuthId" ]
        },
        "BookType": {
          "type": "string",
          "enum": [ "CashBasis", "AccrualBasis" ]
        },
        "MissingBuckets": {
          "type": "array",
          "items": { "$ref": "#/definitions/QuickbooksBucket" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DisableQuickbooksResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DisconnectQuickbooksResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ExcludeQuickbooksItemsResponse": {
      "type": "object",
      "properties": {
        "SyncLogIds": {
          "type": "array",
          "items": { "type": "object" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetQuickbooksBucketsResponse": {
      "type": "object",
      "properties": {
        "Buckets": { "type": "object" },
        "TaxesEnabled": { "type": "boolean" },
        "RMTaxesSetUp": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetQuickbooksConnectionStatusResponse": {
      "type": "object",
      "properties": {
        "Connected": { "type": "boolean" },
        "Configured": { "type": "boolean" },
        "SyncError": { "type": "boolean" },
        "BookType": { "type": "object" },
        "CanSync": { "type": "boolean" },
        "IsSyncing": { "type": "boolean" },
        "StepType": { "type": "object" },
        "ItemsComplete": {
          "type": "integer",
          "format": "int32"
        },
        "TotalItems": {
          "type": "integer",
          "format": "int32"
        },
        "ShouldSyncTrustAccounting": { "type": "boolean" },
        "IsReverting": { "type": "boolean" },
        "HasFailedItems": { "type": "boolean" },
        "StartFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "HasSynced": { "type": "boolean" },
        "CanSyncPayments": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "QuickbooksSyncItem": {
      "type": "object",
      "properties": {
        "DisplayName": { "type": "string" },
        "EntityId": { "type": "string" },
        "ItemType": {
          "type": "string",
          "enum": [ "None", "Client", "Vendor", "Expense", "Invoice", "Payment", "DebitAdjustment", "CreditAdjustment", "TrustDeposit", "TrustDebit", "Refund", "TaxRate", "TaxAgency" ]
        },
        "ErrorMessage": { "type": "string" },
        "FullErrorMessage": { "type": "string" },
        "Success": { "type": "boolean" },
        "EntityDescription": { "type": "string" },
        "ClientMatter": { "type": "string" },
        "Name": { "type": "string" },
        "QboSyncLogId": { "type": "string" },
        "ExcludeFromSync": { "type": "boolean" },
        "CanBeResynced": { "type": "boolean" }
      }
    },
    "GetQuickbooksFailedItemsResponse": {
      "type": "object",
      "properties": {
        "FailedItems": {
          "type": "array",
          "items": { "$ref": "#/definitions/QuickbooksSyncItem" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetQuickbooksPreparednessResponse": {
      "type": "object",
      "properties": {
        "TimezoneSet": { "type": "boolean" },
        "PaymentsToInvoicesIssues": { "type": "boolean" },
        "IsValidForIntegration": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetQuickbooksSyncInfoResponse": {
      "type": "object",
      "properties": {
        "Failures": {
          "type": "array",
          "items": { "$ref": "#/definitions/QuickbooksSyncItem" }
        },
        "AllLogs": {
          "type": "array",
          "items": { "$ref": "#/definitions/QuickbooksSyncItem" }
        },
        "MorePages": { "type": "boolean" },
        "TotalItems": {
          "type": "integer",
          "format": "int32"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "QuickbooksSync": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Description": { "type": "string" },
        "FullDescription": { "type": "string" },
        "StepError": { "type": "boolean" },
        "DateOfSync": {
          "type": "string",
          "format": "date-time"
        },
        "Successful": { "type": "boolean" },
        "IsReverting": { "type": "boolean" }
      }
    },
    "GetQuickbooksSyncsResponse": {
      "type": "object",
      "properties": {
        "Syncs": {
          "type": "array",
          "items": { "$ref": "#/definitions/QuickbooksSync" }
        },
        "MorePages": { "type": "boolean" },
        "TotalSyncs": {
          "type": "integer",
          "format": "int32"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SyncQuickbooksResponse": {
      "type": "object",
      "properties": {
        "SyncStarted": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Permission": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Name": { "type": "string" },
        "Description": { "type": "string" }
      }
    },
    "GetRolePermissionsResponse": {
      "type": "object",
      "properties": {
        "Permissions": {
          "type": "array",
          "items": { "$ref": "#/definitions/Permission" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetPermissionsResponse": {
      "type": "object",
      "properties": {
        "Permissions": {
          "type": "array",
          "items": { "$ref": "#/definitions/Permission" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteRoleResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "Permissions": {
          "type": "array",
          "items": { "$ref": "#/definitions/Permission" }
        },
        "Users": {
          "type": "array",
          "items": { "$ref": "#/definitions/User" }
        }
      }
    },
    "GetRoleResponse": {
      "type": "object",
      "properties": {
        "Role": {
          "type": "object",
          "$ref": "#/definitions/Role"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetRolesResponse": {
      "type": "object",
      "properties": {
        "Roles": {
          "type": "array",
          "items": { "$ref": "#/definitions/Role" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetRoleUsersForPermissionsResponse": {
      "type": "object",
      "properties": {
        "Users": {
          "type": "array",
          "items": { "$ref": "#/definitions/User" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetUserOperationsResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetUsersForPermissionsResponse": {
      "type": "object",
      "properties": {
        "Users": {
          "type": "array",
          "items": { "$ref": "#/definitions/User" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveRoleResponse": {
      "type": "object",
      "properties": {
        "Role": {
          "type": "object",
          "$ref": "#/definitions/Role"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "QueryFinancialInstitutionResponse": {
      "type": "object",
      "properties": {
        "FinancialInstitution": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UpdateFedACHDirectoryResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UpdateFedWireDirectoryResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DisconnectOfficeResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetOfficeUrlResponse": {
      "type": "object",
      "properties": {
        "Url": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Email": {
      "type": "object",
      "properties": {
        "EmailUUId": { "type": "string" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterName": { "type": "string" },
        "Attachments": {
          "type": "array",
          "items": { "type": "string" }
        },
        "BillableUnits": {
          "type": "number",
          "format": "double"
        },
        "BillingDate": {
          "type": "string",
          "format": "date-time"
        },
        "BillingUserId": {
          "type": "integer",
          "format": "int32"
        },
        "BillingUserName": { "type": "string" },
        "BillingDescription": { "type": "string" },
        "IsNoCharge": { "type": "boolean" },
        "IsNonBillable": { "type": "boolean" },
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        },
        "Invoiced": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetOutlookEmailResponse": {
      "type": "object",
      "properties": {
        "Email": {
          "type": "object",
          "$ref": "#/definitions/Email"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "OfficeConfiguredResponse": {
      "type": "object",
      "properties": {
        "IsConfigured": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SyncOutlookEmailResponse": {
      "type": "object",
      "properties": {
        "OutlookEmail": {
          "type": "object",
          "$ref": "#/definitions/Email"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UpdateOfficeUserSettingResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "PhoneMessage": {
      "type": "object",
      "properties": {
        "CallerPhoneNumber": { "type": "string" },
        "CallerName": { "type": "string" },
        "IsRead": { "type": "boolean" },
        "Subject": { "type": "string" },
        "CallTakerId": {
          "type": "integer",
          "format": "int32"
        },
        "CalleeId": {
          "type": "integer",
          "format": "int32"
        },
        "CallerId": {
          "type": "integer",
          "format": "int32"
        },
        "InvoiceId": {
          "type": "integer",
          "format": "int32"
        },
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        },
        "ActivityTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "IsNoCharge": { "type": "boolean" },
        "NonBillable": { "type": "boolean" },
        "BillingDate": {
          "type": "string",
          "format": "date-time"
        },
        "BillableUnits": {
          "type": "number",
          "format": "double"
        },
        "TotalSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "IsLineItemOverride": { "type": "boolean" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "Cost": {
          "type": "number",
          "format": "double"
        },
        "Notes": { "type": "string" },
        "DocumentId": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetPhoneMessageResponse": {
      "type": "object",
      "properties": {
        "PhoneMessage": {
          "type": "object",
          "$ref": "#/definitions/PhoneMessage"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SavePhoneMessageResponse": {
      "type": "object",
      "properties": {
        "PhoneMessage": {
          "type": "object",
          "$ref": "#/definitions/PhoneMessage"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DefaultContactRelationship": {
      "type": "object",
      "properties": {
        "Role": { "type": "string" },
        "IsUser": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetDefaultMatterTemplateRolesResponse": {
      "type": "object",
      "properties": {
        "DefaultRelationships": {
          "type": "array",
          "items": { "$ref": "#/definitions/DefaultContactRelationship" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "LookupItem": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "Name": { "type": "string" },
        "EnumName": { "type": "string" }
      }
    },
    "GetMatterTemplateDateOptionDetailsResponse": {
      "type": "object",
      "properties": {
        "TaskDateOptions": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateDateOption" }
        },
        "EventDateOptions": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateDateOption" }
        },
        "MatterDetailDateOptions": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateDateOption" }
        },
        "MilestoneOrders": {
          "type": "array",
          "items": { "$ref": "#/definitions/LookupItem" }
        },
        "DefaultMilestones": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateMilestone" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetMilestoneForItemResponse": {
      "type": "object",
      "properties": {
        "Milestones": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateMilestone" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MilestoneActionItem": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string",
          "enum": [ "Task", "Event", "Matter" ]
        },
        "Title": { "type": "string" },
        "MilestoneAction": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateMilestoneAction"
        },
        "EntityId": {
          "type": "integer",
          "format": "int32"
        },
        "StartDateOption": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateEventDateInfo"
        },
        "EndDateOption": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateEventDateInfo"
        },
        "ParentMilestone": {
          "type": "object",
          "$ref": "#/definitions/TaskEventMilestone"
        },
        "StartDateDescription": { "type": "string" },
        "Event": {
          "type": "object",
          "$ref": "#/definitions/Event"
        },
        "Task": {
          "type": "object",
          "$ref": "#/definitions/Task"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CheckMilestoneUpdateStatusResponse": {
      "type": "object",
      "properties": {
        "CanUpdate": { "type": "boolean" },
        "Items": {
          "type": "array",
          "items": { "$ref": "#/definitions/MilestoneActionItem" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DetachMilestoneActionResponse": {
      "type": "object",
      "properties": {
        "Event": {
          "type": "object",
          "$ref": "#/definitions/Event"
        },
        "Task": {
          "type": "object",
          "$ref": "#/definitions/Task"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetActionForItemResponse": {
      "type": "object",
      "properties": {
        "ActionItem": {
          "type": "object",
          "$ref": "#/definitions/MilestoneActionItem"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetChildMilestoneActionsResponse": {
      "type": "object",
      "properties": {
        "ActionItems": {
          "type": "array",
          "items": { "$ref": "#/definitions/MilestoneActionItem" }
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RemoveChildMilestoneActionItemsResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UpdateChildMilestoneDatesResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "LexChargeTokenResponse": {
      "type": "object",
      "properties": {
        "Token": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "deleteInvoiceTemplateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "CustomRequestRetainerEmail": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Subject": { "type": "string" },
        "FromEmail": { "type": "string" },
        "PaymentLinkText": { "type": "string" },
        "Body": { "type": "string" }
      }
    },
    "GetRequestRetainerPaymentEmailResponse": {
      "type": "object",
      "properties": {
        "CustomRequestRetainerEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomRequestRetainerEmail"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "CustomPaymentPlanReceiptEmail": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Subject": { "type": "string" },
        "FromEmail": { "type": "string" },
        "Body": { "type": "string" },
        "BccEmails": { "type": "string" }
      }
    },
    "GetCustomPaymentPlanReceiptEmailResponse": {
      "type": "object",
      "properties": {
        "CustomPaymentPlanReceiptEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomPaymentPlanReceiptEmail"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "CustomRefundEmail": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Subject": { "type": "string" },
        "FromEmail": { "type": "string" },
        "Body": { "type": "string" }
      }
    },
    "GetCustomRefundEmailResponse": {
      "type": "object",
      "properties": {
        "CustomRefundEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomRefundEmail"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "CustomInvoicePaymentReceiptEmail": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Subject": { "type": "string" },
        "FromEmail": { "type": "string" },
        "Body": { "type": "string" },
        "BccEmails": { "type": "string" }
      }
    },
    "GetCustomInvoicePaymentReceiptEmailResponse": {
      "type": "object",
      "properties": {
        "CustomInvoicePaymentReceiptEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomInvoicePaymentReceiptEmail"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "CustomInvoicePaymentEmail": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Subject": { "type": "string" },
        "FromEmail": { "type": "string" },
        "PaymentLinkText": { "type": "string" },
        "Body": { "type": "string" }
      }
    },
    "GetCustomInvoicePaymentEmailResponse": {
      "type": "object",
      "properties": {
        "CustomInvoicePaymentEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomInvoicePaymentEmail"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterInvoiceTemplate": {
      "type": "object",
      "properties": {
        "InvoiceTemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientMatter": { "type": "string" },
        "Id": { "type": "string" }
      }
    },
    "GetMattersForInvoiceTemplateResponse": {
      "type": "object",
      "properties": {
        "MatterInvoiceTemplates": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterInvoiceTemplate" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "invoiceTemplate": {
      "type": "object",
      "properties": {
        "isInValid": { "type": "boolean" },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "invoiceTemplateURL": { "type": "string" },
        "isActive": { "type": "boolean" }
      }
    },
    "SaveInvoiceTemplateResponse": {
      "type": "object",
      "properties": {
        "InvoiceTemplate": {
          "type": "object",
          "$ref": "#/definitions/invoiceTemplate"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SetRequestRetainerPaymentEmailResponse": {
      "type": "object",
      "properties": {
        "CustomRequestRetainerEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomRequestRetainerEmail"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SetCustomPaymentPlanReceiptEmailResponse": {
      "type": "object",
      "properties": {
        "CustomPaymentPlanReceiptEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomPaymentPlanReceiptEmail"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SetCustomRefundEmailResponse": {
      "type": "object",
      "properties": {
        "CustomRefundEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomRefundEmail"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SetCustomInvoicePaymentReceiptEmailResponse": {
      "type": "object",
      "properties": {
        "CustomInvoicePaymentReceiptEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomInvoicePaymentReceiptEmail"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SetCustomInvoicePaymentEmailResponse": {
      "type": "object",
      "properties": {
        "CustomInvoicePaymentEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomInvoicePaymentEmail"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ValidateInvoiceTemplateNameResponse": {
      "type": "object",
      "properties": {
        "IsValid": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "TemplateFieldValidation": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "IsValid": { "type": "boolean" },
        "IsColumn": { "type": "boolean" },
        "Field": {
          "type": "object",
          "$ref": "#/definitions/BaseField"
        },
        "ParentTable": { "type": "string" }
      }
    },
    "BaseField": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Index": {
          "type": "integer",
          "format": "int32"
        },
        "ColumnName": { "type": "string" },
        "EmptyRow": { "type": "boolean" }
      }
    },
    "ValidateInvoiceTemplateResponse": {
      "type": "object",
      "properties": {
        "Results": {
          "type": "array",
          "items": { "$ref": "#/definitions/TemplateFieldValidation" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "getAvailableInvoiceTemplatesResponse": {
      "type": "object",
      "properties": {
        "invoiceTemplates": {
          "type": "array",
          "items": { "$ref": "#/definitions/invoiceTemplate" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetGoogleConnectionStatusResponse": {
      "type": "object",
      "properties": {
        "CalendarConnected": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "JobStartResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "FirmFeatures": {
      "type": "object",
      "properties": {
        "ProductivityReportEnabled": { "type": "boolean" },
        "LedesEnabled": { "type": "boolean" },
        "QBOEnabled": { "type": "boolean" },
        "ShowMatterTemplates": { "type": "boolean" },
        "IsOnTiers": { "type": "boolean" },
        "ShowImportedDataOnOrigination": { "type": "boolean" },
        "PortalEnabled": { "type": "boolean" },
        "AdvancedInvoiceSharingEnabled": { "type": "boolean" },
        "TrustEnabled": { "type": "boolean" },
        "FirmTimeZone": { "type": "string" },
        "DocumentVersionsEnabled": { "type": "boolean" },
        "DeleteTaskDisabled": { "type": "boolean" },
        "SyncSelectedExpensesAsCheck": { "type": "boolean" },
        "ShowChatSupport": { "type": "boolean" },
        "EnableClioImportWizard": { "type": "boolean" },
        "IsInImportPreview": { "type": "boolean" },
        "MobileVersion": { "type": "string" },
        "ShowCommunicator": { "type": "boolean" },
        "ShowRMPaymentsConfig": { "type": "boolean" },
        "ShowCourtRules": { "type": "boolean" },
        "MobileV2Enabled": { "type": "boolean" },
        "EnableNewCustomFieldGrids": { "type": "boolean" },
        "HasWorkFlow": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetFirmFeaturesResponse": {
      "type": "object",
      "properties": {
        "Features": {
          "type": "object",
          "$ref": "#/definitions/FirmFeatures"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SetDocumentVersionsResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteDocumentTemplateResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DocumentTemplate": {
      "type": "object",
      "properties": {
        "Title": { "type": "string" },
        "UploadedByUserId": {
          "type": "integer",
          "format": "int32"
        },
        "UploadedByUserName": { "type": "string" },
        "FileUrl": { "type": "string" },
        "IsValidated": { "type": "boolean" },
        "Size": {
          "type": "integer",
          "format": "int32"
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetDocumentTemplatesResponse": {
      "type": "object",
      "properties": {
        "DocumentTemplates": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentTemplate" }
        },
        "Count": {
          "type": "integer",
          "format": "int32"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteDocumentResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteDocumentsInPathResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteNoteResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DocumentContentsChangedResponse": {
      "type": "object",
      "properties": {
        "HasChanged": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DocumentItem": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Path": { "type": "string" },
        "IsFolder": { "type": "boolean" },
        "Ext": { "type": "string" },
        "DocumentTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "NestedPath": {
          "type": "array",
          "items": { "type": "string" }
        },
        "DocumentId": {
          "type": "integer",
          "format": "int32"
        },
        "DocumentUId": { "type": "string" },
        "PendingInvoicing": { "type": "boolean" },
        "Invoiced": { "type": "boolean" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "User": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "CreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "ClientMatter": { "type": "string" },
        "DocumentItems": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentItem" }
        },
        "PortalShared": { "type": "boolean" },
        "IsInvoice": { "type": "boolean" },
        "BillingDate": {
          "type": "string",
          "format": "date-time"
        },
        "FutureBilling": { "type": "boolean" },
        "DisplayOnly": { "type": "boolean" },
        "ClosedMatter": { "type": "boolean" },
        "SystemMatter": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetDirectoriesResponse": {
      "type": "object",
      "properties": {
        "Documents": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentItem" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "RMFile": {
      "type": "object",
      "properties": {
        "ContentType": { "type": "string" },
        "FileName": { "type": "string" },
        "FileContents": { "type": "object" },
        "ParentDirectory": { "type": "string" },
        "ParentPath": { "type": "string" },
        "FullPath": { "type": "string" },
        "FileUUId": { "type": "string" }
      }
    },
    "GetDocumentFileInfoResponse": {
      "type": "object",
      "properties": {
        "File": {
          "type": "object",
          "$ref": "#/definitions/RMFile"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetDocumentIntegrationResponse": {
      "type": "object",
      "properties": {
        "Path": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Document": {
      "type": "object",
      "properties": {
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        },
        "Title": { "type": "string" },
        "FileName": { "type": "string" },
        "Size": {
          "type": "integer",
          "format": "int32"
        },
        "FileUrl": { "type": "string" },
        "DocumentType": {
          "type": "string",
          "enum": [ "None", "Note", "UploadedDocument", "WebAddress", "DropboxFile", "DropboxDirectory", "EvernoteNote", "EvernoteNotebook", "MergedDocument", "BoxFile", "BoxDirectory", "UploadedDirectory", "Invoice", "DocumentTemplate", "InvoiceTemplate", "DefaultInvoiceTemplate", "ImportDocument" ]
        },
        "IsFlagged": { "type": "boolean" },
        "LedgerEntryId": {
          "type": "integer",
          "format": "int32"
        },
        "DocumentUId": { "type": "string" },
        "IsUnavailable": { "type": "boolean" },
        "IsDirectory": { "type": "boolean" },
        "ParentDirectoryId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientMatter": { "type": "string" },
        "MatterDefaultBillingTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "DateAndTime": {
          "type": "string",
          "format": "date-time"
        },
        "TotalSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "BillableUnits": {
          "type": "number",
          "format": "double"
        },
        "Notes": { "type": "string" },
        "IsNoCharge": { "type": "boolean" },
        "IsNonBillable": { "type": "boolean" },
        "InvoiceId": {
          "type": "integer",
          "format": "int32"
        },
        "IsTaxable": { "type": "boolean" },
        "IsSurcharge": { "type": "boolean" },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "UserName": { "type": "string" },
        "Contents": { "type": "string" },
        "IsLineItemOverride": { "type": "boolean" },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "InSystemMatter": { "type": "boolean" },
        "Versions": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentVersion" }
        },
        "ContentBase64String": { "type": "string" },
        "UpdateComment": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DocumentVersion": {
      "type": "object",
      "properties": {
        "VersionId": { "type": "string" },
        "VersionDate": {
          "type": "string",
          "format": "date-time"
        },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "Comment": { "type": "string" },
        "UserName": { "type": "string" }
      }
    },
    "PortalDocumentContact": {
      "type": "object",
      "properties": {
        "ContactFullName": { "type": "string" },
        "Position": {
          "type": "integer",
          "format": "int32"
        },
        "PortalId": {
          "type": "integer",
          "format": "int32"
        },
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "SendNotification": { "type": "boolean" }
      }
    },
    "GetDocumentResponse": {
      "type": "object",
      "properties": {
        "Document": {
          "type": "object",
          "$ref": "#/definitions/Document"
        },
        "PortalContacts": {
          "type": "array",
          "items": { "$ref": "#/definitions/PortalDocumentContact" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetDocumentsInPathResponse": {
      "type": "object",
      "properties": {
        "Documents": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentItem" }
        },
        "ItemsCount": {
          "type": "integer",
          "format": "int32"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DocumentUploadUrl": {
      "type": "object",
      "properties": {
        "Url": { "type": "string" },
        "FileUUId": { "type": "string" },
        "FullPath": { "type": "string" },
        "SourceFileUUId": { "type": "string" }
      }
    },
    "GetDocumentUploadUrlResponse": {
      "type": "object",
      "properties": {
        "UploadUrls": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentUploadUrl" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetDocumentVersionsResponse": {
      "type": "object",
      "properties": {
        "Versions": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentVersion" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetDownloadKeyResponse": {
      "type": "object",
      "properties": {
        "Url": { "type": "string" },
        "FileName": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetInvoicedDocumentsResponse": {
      "type": "object",
      "properties": {
        "Documents": {
          "type": "array",
          "items": { "$ref": "#/definitions/Document" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetPortalDocumentContactsResponse": {
      "type": "object",
      "properties": {
        "Contacts": {
          "type": "array",
          "items": { "$ref": "#/definitions/PortalDocumentContact" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MoveDocumentsToFolderResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "RenameFolderResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveDocumentResponse": {
      "type": "object",
      "properties": {
        "Document": {
          "type": "object",
          "$ref": "#/definitions/Document"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveDocumentsForMatterResponse": {
      "type": "object",
      "properties": {
        "Documents": {
          "type": "array",
          "items": { "$ref": "#/definitions/Document" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SavePortalDocumentContactsResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SetDocumentIntegrationFolderResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UploadDocumentResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UploadedImportFiles": {
      "type": "object",
      "properties": {
        "ImportCompanyId": {
          "type": "integer",
          "format": "int32"
        },
        "SectionId": {
          "type": "integer",
          "format": "int32"
        },
        "SectionName": { "type": "string" },
        "ImportSections": {
          "type": "array",
          "items": { "$ref": "#/definitions/ImportSection" }
        },
        "HasPendingSession": { "type": "boolean" },
        "ImportSessionId": {
          "type": "integer",
          "format": "int32"
        },
        "ContactLink": {
          "type": "array",
          "items": { "$ref": "#/definitions/ContactLink" }
        },
        "Users": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterAttorney" }
        },
        "IsSuccessful": { "type": "boolean" },
        "ShowAddUsers": { "type": "boolean" },
        "ShowAddClientTrust": { "type": "boolean" },
        "ClientTrusts": {
          "type": "array",
          "items": { "$ref": "#/definitions/ImportClientTrust" }
        },
        "Message": { "type": "string" },
        "Error": {
          "type": "object",
          "$ref": "#/definitions/ImportError"
        },
        "IsAccessible": { "type": "boolean" }
      }
    },
    "ImportSection": {
      "type": "object",
      "properties": {
        "SubSectionId": {
          "type": "integer",
          "format": "int32"
        },
        "SubSectionName": { "type": "string" },
        "SubSectionDisplayName": { "type": "string" },
        "File": {
          "type": "object",
          "$ref": "#/definitions/FileUpload"
        },
        "IsRequired": { "type": "boolean" }
      }
    },
    "FileUpload": {
      "type": "object",
      "properties": {
        "Url": { "type": "string" },
        "ContentType": { "type": "string" },
        "FileName": { "type": "string" },
        "FileContents": { "type": "object" },
        "ParentDirectory": { "type": "string" },
        "ParentPath": { "type": "string" },
        "FullPath": { "type": "string" },
        "FileUUId": { "type": "string" }
      }
    },
    "ContactLink": {
      "type": "object",
      "properties": {
        "UniqueId": { "type": "string" },
        "ClientName": { "type": "string" },
        "LinkId": {
          "type": "integer",
          "format": "int32"
        },
        "ContactMatter": { "type": "object" }
      }
    },
    "MatterAttorney": {
      "type": "object",
      "properties": {
        "IsInactive": { "type": "boolean" },
        "FirstName": { "type": "string" },
        "LastName": { "type": "string" },
        "Email": { "type": "string" },
        "WorkPhone": { "type": "string" },
        "Rate": { "type": "string" },
        "RateEffetiveDate": { "type": "string" },
        "FullName": { "type": "string" },
        "Matters": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "ImportClientTrust": {
      "type": "object",
      "properties": {
        "TRNSType": { "type": "string" },
        "Date": {
          "type": "string",
          "format": "date-time"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "Name": { "type": "string" },
        "Memo": { "type": "string" },
        "ContactId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ImportError": {
      "type": "object",
      "properties": {
        "ErrorMessage": { "type": "string" },
        "ErrorList": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetImportUploadUrlResponse": {
      "type": "object",
      "properties": {
        "Data": {
          "type": "object",
          "$ref": "#/definitions/UploadedImportFiles"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "AddMatterCourtRuleReponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Deadline": {
      "type": "object",
      "properties": {
        "DeadlineNumber": { "type": "string" },
        "DeadlineID": { "type": "string" },
        "DeadlineType": { "type": "string" },
        "Location": { "type": "object" },
        "Description_Short": { "type": "string" },
        "Description_Long": { "type": "string" },
        "Link_1": { "type": "string" },
        "Link_Description_1": { "type": "string" },
        "Link_2": { "type": "string" },
        "Link_Description_2": { "type": "string" },
        "StartDate": { "type": "string" },
        "EndDate": { "type": "object" },
        "StartDateTime": { "type": "object" },
        "EndDateTime": { "type": "object" },
        "StartTime": { "type": "object" },
        "EndTime": { "type": "object" },
        "TimeZone": { "type": "object" },
        "ReportCode": { "type": "string" }
      }
    },
    "CalculateDeadlinesResponse": {
      "type": "object",
      "properties": {
        "Deadlines": {
          "type": "array",
          "items": { "$ref": "#/definitions/Deadline" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteMatterCourtRuleResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetAvailableCourtRulesResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "CourtRule": {
      "type": "object",
      "properties": {
        "ExternalId": { "type": "string" },
        "Name": { "type": "string" },
        "Value": { "type": "string" },
        "IsDefault": { "type": "boolean" }
      }
    },
    "GetCourtRuleDefaultResponse": {
      "type": "object",
      "properties": {
        "CourtRule": {
          "type": "object",
          "$ref": "#/definitions/CourtRule"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetCourtRuleResponse": {
      "type": "object",
      "properties": {
        "CourtRule": {
          "type": "object",
          "$ref": "#/definitions/CourtRule"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetCourtRulesResponse": {
      "type": "object",
      "properties": {
        "CourtRules": {
          "type": "array",
          "items": { "$ref": "#/definitions/CourtRule" }
        },
        "Enable": { "type": "boolean" },
        "PaidEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "PaidStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "PricePerUser": { "type": "string" },
        "SubscriptionRenewDate": { "type": "string" },
        "TotalPrice": { "type": "string" },
        "TotalUsers": {
          "type": "integer",
          "format": "int32"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterCourtRuleEvent": {
      "type": "object",
      "properties": {
        "EventId": {
          "type": "integer",
          "format": "int32"
        },
        "Description": { "type": "string" },
        "Date": { "type": "string" },
        "UpdateDescription": { "type": "string" }
      }
    },
    "GetMatterCourtRuleEventsResponse": {
      "type": "object",
      "properties": {
        "Events": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterCourtRuleEvent" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterCourtRule": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "ToolSetId": {
          "type": "integer",
          "format": "int32"
        },
        "Description": { "type": "string" },
        "TriggerId": { "type": "string" },
        "TriggerDate": {
          "type": "string",
          "format": "date-time"
        },
        "ToggleId": { "type": "string" },
        "ToggleOptionId": { "type": "string" },
        "HearingNote": { "type": "string" },
        "HasBeenUpdated": { "type": "boolean" },
        "UpdateDescription": { "type": "string" },
        "UpdateNotifications": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterCourtRuleUpdateNotification" }
        }
      }
    },
    "MatterCourtRuleUpdateNotification": {
      "type": "object",
      "properties": {
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "User": {
          "type": "object",
          "$ref": "#/definitions/Contact"
        }
      }
    },
    "GetMatterCourtRulesResponse": {
      "type": "object",
      "properties": {
        "MatterCourtRules": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterCourtRule" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "TriggerDate": {
      "type": "object",
      "properties": {
        "TriggerID": { "type": "string" },
        "Name": { "type": "string" },
        "NoOfDeadlines": {
          "type": "integer",
          "format": "int32"
        },
        "ToggleID": {
          "type": "integer",
          "format": "int32"
        },
        "ToggleDetails": {
          "type": "object",
          "$ref": "#/definitions/ToggleDetails"
        }
      }
    },
    "ToggleDetails": {
      "type": "object",
      "properties": {
        "ToggleIntro": { "type": "string" },
        "ToggleOptions": {
          "type": "array",
          "items": { "$ref": "#/definitions/ToggleOption" }
        }
      }
    },
    "ToggleOption": {
      "type": "object",
      "properties": {
        "ToggleOptionID": {
          "type": "integer",
          "format": "int32"
        },
        "ToggleDescription": { "type": "string" }
      }
    },
    "GetTriggerEventsResponse": {
      "type": "object",
      "properties": {
        "Triggers": {
          "type": "array",
          "items": { "$ref": "#/definitions/TriggerDate" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveCourtRulesResponse": {
      "type": "object",
      "properties": {
        "CourtRules": {
          "type": "array",
          "items": { "$ref": "#/definitions/CourtRule" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "TriggerMockDeadlineUpdateResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GeFileUploadUrlResponse": {
      "type": "object",
      "properties": {
        "UploadUrls": {
          "type": "array",
          "items": { "$ref": "#/definitions/DocumentUploadUrl" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Channel": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "Members": {
          "type": "array",
          "items": { "$ref": "#/definitions/ChannelMember" }
        },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateModified": {
          "type": "string",
          "format": "date-time"
        },
        "IsMatterChannel": { "type": "boolean" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ChannelMember": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "ChannelId": { "type": "object" },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateModified": {
          "type": "string",
          "format": "date-time"
        },
        "FullName": { "type": "string" },
        "IsAdmin": { "type": "boolean" },
        "SecondSinceLastActive": {
          "type": "number",
          "format": "double"
        },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "ProfileImage": { "type": "string" }
      }
    },
    "GetChannelInfoResponse": {
      "type": "object",
      "properties": {
        "Channel": {
          "type": "object",
          "$ref": "#/definitions/Channel"
        },
        "IsRequestorChannelAdmin": { "type": "boolean" },
        "IsMember": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetChannelsIBelongToResponse": {
      "type": "object",
      "properties": {
        "Channels": {
          "type": "array",
          "items": { "$ref": "#/definitions/Channel" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ChatLog": {
      "type": "object",
      "properties": {
        "FromUserDisplayName": { "type": "string" },
        "ToUserDisplayName": { "type": "string" },
        "Date": {
          "type": "string",
          "format": "date-time"
        },
        "Message": { "type": "string" },
        "FromUserId": {
          "type": "integer",
          "format": "int32"
        },
        "FromUserColor": { "type": "string" },
        "ProfileImage": { "type": "boolean" },
        "Id": { "type": "string" },
        "WasEdited": { "type": "boolean" },
        "CanEdit": { "type": "boolean" },
        "IsActivity": { "type": "boolean" }
      }
    },
    "ChatLogGroup": {
      "type": "object",
      "properties": {
        "Date": {
          "type": "string",
          "format": "date-time"
        },
        "ChatLog": {
          "type": "array",
          "items": { "$ref": "#/definitions/ChatLog" }
        }
      }
    },
    "GetChannelChatResponse": {
      "type": "object",
      "properties": {
        "ChatLog": {
          "type": "array",
          "items": { "$ref": "#/definitions/ChatLog" }
        },
        "ChatLogGroups": {
          "type": "array",
          "items": { "$ref": "#/definitions/ChatLogGroup" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetDirectChatResponse": {
      "type": "object",
      "properties": {
        "ChatLog": {
          "type": "array",
          "items": { "$ref": "#/definitions/ChatLog" }
        },
        "ChatLogGroups": {
          "type": "array",
          "items": { "$ref": "#/definitions/ChatLogGroup" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UnreadChannelMessageInfo": {
      "type": "object",
      "properties": {
        "ChannelId": { "type": "string" },
        "Count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetUnreadChannelMessagesResponse": {
      "type": "object",
      "properties": {
        "UnreadMessageInfo": {
          "type": "array",
          "items": { "$ref": "#/definitions/UnreadChannelMessageInfo" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UnreadDirectMessageInfo": {
      "type": "object",
      "properties": {
        "FromUserId": {
          "type": "integer",
          "format": "int32"
        },
        "Count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetUnreadDirectMessagesResponse": {
      "type": "object",
      "properties": {
        "UnreadMessageInfo": {
          "type": "array",
          "items": { "$ref": "#/definitions/UnreadDirectMessageInfo" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetUsersResponse": {
      "type": "object",
      "properties": {
        "Users": {
          "type": "array",
          "items": { "$ref": "#/definitions/User" }
        },
        "CurrentUser": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ReadAllMessagesFromChannelResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ReadAllMessagesFromSomeoneResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveChannelResponse": {
      "type": "object",
      "properties": {
        "Channel": {
          "type": "object",
          "$ref": "#/definitions/Channel"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveFilesResponse": {
      "type": "object",
      "properties": {}
    },
    "SendChannelMessageResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SendDirectMessageResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetCountriesResponse": {
      "type": "object",
      "properties": {
        "Countries": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetClientsByIdsResponse": {
      "type": "object",
      "properties": {
        "Clients": {
          "type": "array",
          "items": { "$ref": "#/definitions/Client" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetMatterReadOnlyRelationshipsResponse": {
      "type": "object",
      "properties": {
        "RelatedContacts": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterRelatedContact" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "CheckContactAvailabilityResponse": {
      "type": "object",
      "properties": {
        "ContactIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteCalendarEntryResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetCalendarEntriesDatesResponse": {
      "type": "object",
      "properties": {
        "Dates": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetCalendarEntriesForDateRangeResponse": {
      "type": "object",
      "properties": {
        "Events": {
          "type": "array",
          "items": { "$ref": "#/definitions/Event" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetCalendarEntryResponse": {
      "type": "object",
      "properties": {
        "CalendarEntry": {
          "type": "object",
          "$ref": "#/definitions/Event"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveCalendarEntryResponse": {
      "type": "object",
      "properties": {
        "CalendarEntry": {
          "type": "object",
          "$ref": "#/definitions/Event"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SyncEventsResponse": {
      "type": "object",
      "properties": {
        "Events": {
          "type": "array",
          "items": { "$ref": "#/definitions/Event" }
        },
        "CurrentUserContactId": {
          "type": "integer",
          "format": "int32"
        },
        "IsOutlookCalendarSyncEnabled": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetUpcomingEventsResponse": {
      "type": "object",
      "properties": {
        "Events": {
          "type": "array",
          "items": { "$ref": "#/definitions/Event" }
        },
        "MatterNameLookup": { "type": "object" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ChargeInterestFeesResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "CreateCreditCardPaymentTokenResponse": {
      "type": "object",
      "properties": {
        "Token": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeletePaymentResponse": {
      "type": "object",
      "properties": {
        "DeleteSuccessful": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DestoryPaymentPlanChargetokenResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DiscountConfiguration": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateModified": {
          "type": "string",
          "format": "date-time"
        },
        "TenantId": {
          "type": "integer",
          "format": "int32"
        },
        "IsDeleted": { "type": "boolean" },
        "IsEnabled": { "type": "boolean" },
        "Description": { "type": "string" },
        "Rate": {
          "type": "number",
          "format": "double"
        },
        "Term": {
          "type": "integer",
          "format": "int32"
        },
        "AppliedToMatter": { "type": "boolean" }
      }
    },
    "GetAllDiscountsResponse": {
      "type": "object",
      "properties": {
        "Discounts": {
          "type": "array",
          "items": { "$ref": "#/definitions/DiscountConfiguration" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "InterestConfiguration": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "DateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "DateModified": {
          "type": "string",
          "format": "date-time"
        },
        "TenantId": {
          "type": "integer",
          "format": "int32"
        },
        "IsDeleted": { "type": "boolean" },
        "IsEnabled": { "type": "boolean" },
        "Description": { "type": "string" },
        "Rate": {
          "type": "number",
          "format": "double"
        },
        "Term": {
          "type": "integer",
          "format": "int32"
        },
        "MakeRecurring": { "type": "boolean" },
        "ChargeInterestOnInterest": { "type": "boolean" },
        "ApplyToAllUnpaid": { "type": "boolean" },
        "AppliedToMatter": { "type": "boolean" }
      }
    },
    "GetAllInterestRatesResponse": {
      "type": "object",
      "properties": {
        "Interests": {
          "type": "array",
          "items": { "$ref": "#/definitions/InterestConfiguration" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "LedesCodesCache_Lookup": {
      "type": "object",
      "properties": { "billingCodesExpense": { "type": "object" } }
    },
    "GetAllLedesResponse": {
      "type": "object",
      "properties": {
        "Ledes": {
          "type": "object",
          "$ref": "#/definitions/LedesCodesCache_Lookup"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterRate": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "EffectiveDate": {
          "type": "string",
          "format": "date-time"
        },
        "CreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "Rate": {
          "type": "number",
          "format": "double"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaxRate": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Description": { "type": "string" },
        "Rate": {
          "type": "number",
          "format": "double"
        },
        "TaxRateType": {
          "type": "string",
          "enum": [ "FeesAndExpenses", "FeesAndSelectedExpenses", "Expenses", "SelectedExpenses", "SelectedFees", "SelectedFeesAndSelectedExpenses" ]
        },
        "AppliedToMatter": { "type": "boolean" }
      }
    },
    "SurchargeRate": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Description": { "type": "string" },
        "Rate": {
          "type": "number",
          "format": "double"
        },
        "SurchargeRateType": {
          "type": "string",
          "enum": [ "FeesAndExpenses", "FeesAndSelectedExpenses", "Expenses", "SelectedExpenses", "SelectedFees", "SelectedFeesAndSelectedExpenses", "Fees", "ExpensesAndSelectedFees" ]
        },
        "AppliedToMatter": { "type": "boolean" },
        "ActivityType": {
          "type": "string",
          "enum": [ "None", "Activity", "Timer", "TodoItem", "CalendarEntry", "Expense", "BilledTime", "PhoneMessage", "Document", "Note", "Email", "FlatFee" ]
        }
      }
    },
    "GetEffectiveRatesForMatterResponse": {
      "type": "object",
      "properties": {
        "MatterRates": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterRate" }
        },
        "TaxRate": {
          "type": "object",
          "$ref": "#/definitions/TaxRate"
        },
        "SurchargeRate": {
          "type": "object",
          "$ref": "#/definitions/SurchargeRate"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UserRate": {
      "type": "object",
      "properties": {
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "EffectiveDate": {
          "type": "string",
          "format": "date-time"
        },
        "Rate": {
          "type": "number",
          "format": "double"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetEffectiveUserRatesResponse": {
      "type": "object",
      "properties": {
        "UserRates": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserRate" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterInvoicePayments": {
      "type": "object",
      "properties": {
        "Payments": {
          "type": "array",
          "items": { "$ref": "#/definitions/InvoicePayment" }
        },
        "TotalInvoiced": {
          "type": "number",
          "format": "double"
        },
        "TotalPaid": {
          "type": "number",
          "format": "double"
        },
        "TotalDue": {
          "type": "number",
          "format": "double"
        },
        "TotalPaymentAmount": {
          "type": "number",
          "format": "double"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "HasInvoices": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InvoicePayment": {
      "type": "object",
      "properties": {
        "InvoiceId": {
          "type": "integer",
          "format": "int32"
        },
        "CreditId": {
          "type": "integer",
          "format": "int32"
        },
        "Description": { "type": "string" },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "AmountDue": {
          "type": "number",
          "format": "double"
        },
        "AmountPaid": {
          "type": "number",
          "format": "double"
        },
        "PaymentAmount": {
          "type": "number",
          "format": "double"
        },
        "IsChanged": { "type": "boolean" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetInvoicePaymentsForMatterResponse": {
      "type": "object",
      "properties": {
        "InvoicePayments": {
          "type": "object",
          "$ref": "#/definitions/MatterInvoicePayments"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Invoice": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "Date": {
          "type": "string",
          "format": "date-time"
        },
        "DateString": { "type": "string" },
        "BatchId": {
          "type": "integer",
          "format": "int32"
        },
        "InvoiceTemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "Balance": {
          "type": "number",
          "format": "double"
        },
        "Description": { "type": "string" },
        "IsPaid": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetMostRecentInvoiceInfoByClientResponse": {
      "type": "object",
      "properties": {
        "Invoice": {
          "type": "object",
          "$ref": "#/definitions/Invoice"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetPaymentOptionsResponse": {
      "type": "object",
      "properties": {
        "AllowACH": { "type": "boolean" },
        "AllowCreditCard": { "type": "boolean" },
        "AllowTrustPayment": { "type": "boolean" },
        "Enabled": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveDiscountConfigurationResponse": {
      "type": "object",
      "properties": {
        "DiscountConfiguration": {
          "type": "object",
          "$ref": "#/definitions/DiscountConfiguration"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveInterestConfigurationResponse": {
      "type": "object",
      "properties": {
        "InterestConfiguration": {
          "type": "object",
          "$ref": "#/definitions/InterestConfiguration"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SetPaymentProcessingFeeDefaultResponse": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "number",
          "format": "double"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetPaymentProcessingFeeDefaultResponse": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "number",
          "format": "double"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "PaymentProcessor": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "IsEnabled": { "type": "boolean" },
        "TrustAccountAPIKey": { "type": "string" },
        "OperatingAccountAPIKey": { "type": "string" },
        "PartnerCode": { "type": "string" },
        "ACHEnabled": { "type": "boolean" },
        "CCEnabled": { "type": "boolean" },
        "PaymentPlanPaymentsAndOnlinePaymentsToTrustOnly": { "type": "boolean" },
        "OperatingJSSecurityKey": { "type": "string" },
        "OperatingMerchantToken": { "type": "string" },
        "OperatingMerchantID": { "type": "string" },
        "OperatingGatewayID": { "type": "string" },
        "OperatingGatewayPassword": { "type": "string" },
        "OperatingHMACKey": { "type": "string" },
        "TrustJSSecurityKey": { "type": "string" },
        "TrustMerchantToken": { "type": "string" },
        "TrustMerchantID": { "type": "string" },
        "TrustGatewayID": { "type": "string" },
        "TrustGatewayPassword": { "type": "string" },
        "TrustHMACKey": { "type": "string" },
        "IsRMAdmin": { "type": "boolean" },
        "TrustVerificationAmount": {
          "type": "number",
          "format": "double"
        },
        "TrustVerificationAmountConfirmation": {
          "type": "number",
          "format": "double"
        },
        "OperatingVerificationAmount": {
          "type": "number",
          "format": "double"
        },
        "OperatingVerificationAmountConfirmation": {
          "type": "number",
          "format": "double"
        },
        "OperatingTransArmorToken": { "type": "string" },
        "TrustTransArmorToken": { "type": "string" },
        "FDOperatingPpdTerminalID": {
          "type": "integer",
          "format": "int32"
        },
        "FDOperatingCcdTerminalID": {
          "type": "integer",
          "format": "int32"
        },
        "FDOperatingWebTerminalID": {
          "type": "integer",
          "format": "int32"
        },
        "FDOperatingTelTerminalID": {
          "type": "integer",
          "format": "int32"
        },
        "FDOperatingPopTerminalID": {
          "type": "integer",
          "format": "int32"
        },
        "FDTrustPpdTerminalID": {
          "type": "integer",
          "format": "int32"
        },
        "FDTrustCcdTerminalID": {
          "type": "integer",
          "format": "int32"
        },
        "FDTrustWebTerminalID": {
          "type": "integer",
          "format": "int32"
        },
        "FDTrustTelTerminalID": {
          "type": "integer",
          "format": "int32"
        },
        "FDTrustPopTerminalID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetPaymentProcessorResponse": {
      "type": "object",
      "properties": {
        "PaymentProcessor": {
          "type": "object",
          "$ref": "#/definitions/PaymentProcessor"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "DebitId": {
          "type": "integer",
          "format": "int32"
        },
        "CreditId": {
          "type": "integer",
          "format": "int32"
        },
        "AmountDue": {
          "type": "number",
          "format": "double"
        },
        "AmountPaid": {
          "type": "number",
          "format": "double"
        },
        "PaymentAmount": {
          "type": "number",
          "format": "double"
        },
        "Description": { "type": "string" },
        "Date": {
          "type": "string",
          "format": "date-time"
        },
        "Fees": {
          "type": "number",
          "format": "double"
        },
        "Costs": {
          "type": "number",
          "format": "double"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetPaymentsForMatterResponse": {
      "type": "object",
      "properties": {
        "Payments": {
          "type": "array",
          "items": { "$ref": "#/definitions/Payment" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "PaymentProcessorInvoiceInfo": {
      "type": "object",
      "properties": {
        "IsPaymentPlan": { "type": "boolean" },
        "Plan_AmountPaid": {
          "type": "number",
          "format": "double"
        },
        "Plan_AmountRemaining": {
          "type": "number",
          "format": "double"
        },
        "Plan_PaymentsRemaining": {
          "type": "integer",
          "format": "int32"
        },
        "PostPaymentTo": { "type": "string" },
        "Date": { "type": "string" },
        "InvoiceID": {
          "type": "integer",
          "format": "int32"
        },
        "MatterName": { "type": "string" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientEmail": { "type": "string" },
        "ClientFirstName": { "type": "string" },
        "ClientName": { "type": "string" },
        "ClientLastName": { "type": "string" },
        "FirmAddress": { "type": "string" },
        "FirmName": { "type": "string" },
        "FirmPhone": { "type": "string" },
        "InvoiceBalance": {
          "type": "number",
          "format": "double"
        },
        "PassDueBalance": {
          "type": "number",
          "format": "double"
        },
        "RetainerDue": {
          "type": "number",
          "format": "double"
        },
        "AccountBalance": {
          "type": "number",
          "format": "double"
        },
        "Plan_PaymentsMade": {
          "type": "integer",
          "format": "int32"
        },
        "Plan_AmountDue": {
          "type": "number",
          "format": "double"
        },
        "RecurringBillingMethodId": { "type": "string" },
        "PaymentKey": { "type": "string" },
        "PartnerCode": { "type": "string" },
        "Discount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "GetQuickInvoiceInfoResponse": {
      "type": "object",
      "properties": {
        "PaymentProcessorInvoiceInfo": {
          "type": "object",
          "$ref": "#/definitions/PaymentProcessorInvoiceInfo"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetTransactionInfoResponse": {
      "type": "object",
      "properties": {
        "ClientName": { "type": "string" },
        "TransactionId": { "type": "string" },
        "OriginalPaymentDate": { "type": "string" },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "ExternalTransactionID": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "OnlinePaymentResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ProcessRefundResponse": {
      "type": "object",
      "properties": {
        "Status": { "type": "string" },
        "ExternalTransactionID": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ProcessTokenResponse": {
      "type": "object",
      "properties": {
        "ExternalTransactionID": { "type": "string" },
        "IsPending": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "RecordPaymentsToInvoicesResponse": {
      "type": "object",
      "properties": {
        "PaymentSuccess": { "type": "boolean" },
        "PaymentMessage": { "type": "string" },
        "HasUnpaidInvoices": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "RunInvoiceResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "FileName": { "type": "string" },
        "InvoiceId": {
          "type": "integer",
          "format": "int32"
        },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SetPaymentProcessorResponse": {
      "type": "object",
      "properties": {
        "PaymentProcessor": {
          "type": "object",
          "$ref": "#/definitions/PaymentProcessor"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "setPaymentProcessorSettingsResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterBillingInfo": {
      "type": "object",
      "properties": {
        "TotalInvoiced": {
          "type": "number",
          "format": "double"
        },
        "MatterLedgerBalance": {
          "type": "number",
          "format": "double"
        },
        "PendingInvoicingSubtotal": {
          "type": "number",
          "format": "double"
        },
        "PendingInvoicingTaxTotal": {
          "type": "number",
          "format": "double"
        },
        "PendingInvoicingSurchargeTotal": {
          "type": "number",
          "format": "double"
        },
        "PendingInvoicingTotal": {
          "type": "number",
          "format": "double"
        },
        "LastInvoice": {
          "type": "object",
          "$ref": "#/definitions/Invoice"
        },
        "MatterType": { "type": "string" },
        "MatterName": { "type": "string" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "TaxesSetUp": { "type": "boolean" },
        "SurchargesSetUp": { "type": "boolean" },
        "TrustBalance": {
          "type": "number",
          "format": "double"
        },
        "MatterInvoices": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterInvoiceInfo" }
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterInvoiceInfo": {
      "type": "object",
      "properties": {
        "Date": {
          "type": "string",
          "format": "date-time"
        },
        "Number": { "type": "string" },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "IsPaid": { "type": "boolean" }
      }
    },
    "GetMatterBillingInfoResponse": {
      "type": "object",
      "properties": {
        "BillingInfo": {
          "type": "object",
          "$ref": "#/definitions/MatterBillingInfo"
        },
        "AccessDenied": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "BillingTier": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Name": { "type": "string" },
        "MonthlyPrice": {
          "type": "number",
          "format": "double"
        },
        "MonthlyPriceId": {
          "type": "integer",
          "format": "int32"
        },
        "QuarterlyPrice": {
          "type": "number",
          "format": "double"
        },
        "QuarterlyPriceId": {
          "type": "integer",
          "format": "int32"
        },
        "YearlyPrice": {
          "type": "number",
          "format": "double"
        },
        "YearlyPriceId": {
          "type": "integer",
          "format": "int32"
        },
        "BiennialPrice": {
          "type": "number",
          "format": "double"
        },
        "BiennialPriceId": {
          "type": "integer",
          "format": "int32"
        },
        "IsCollapsed": { "type": "boolean" },
        "CreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "UsedInSignup": { "type": "boolean" },
        "MaxNumberOfUsers": {
          "type": "integer",
          "format": "int32"
        },
        "Description": { "type": "string" },
        "BillingFrequency": {
          "type": "string",
          "enum": [ "Monthly", "Yearly", "TriAnnual", "Quarterly", "Biennial" ]
        }
      }
    },
    "GetDefaultBillingTiersResponse": {
      "type": "object",
      "properties": {
        "Tiers": {
          "type": "array",
          "items": { "$ref": "#/definitions/BillingTier" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveBillingFeatureInterestResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteActivityResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetActivitiesForMatterResponse": {
      "type": "object",
      "properties": {
        "Activities": {
          "type": "array",
          "items": { "$ref": "#/definitions/BillableActivity" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetActivityTypeIdResponse": {
      "type": "object",
      "properties": {
        "ActivityTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "BillableTime": {
      "type": "object",
      "properties": {
        "Description": { "type": "string" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientId": {
          "type": "integer",
          "format": "int32"
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Matter": {
          "type": "object",
          "$ref": "#/definitions/Matter"
        },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "User": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "BillingDate": {
          "type": "string",
          "format": "date-time"
        },
        "BillableUnits": {
          "type": "number",
          "format": "double"
        },
        "CostOverride": {
          "type": "number",
          "format": "double"
        },
        "IsLineItemOverride": { "type": "boolean" },
        "IsNoCharge": { "type": "boolean" },
        "NonBillable": { "type": "boolean" },
        "LEDESTaskCode": { "type": "string" },
        "LEDESActivityCode": { "type": "string" },
        "IsTaxable": { "type": "boolean" },
        "IsSurchargeable": { "type": "boolean" },
        "MatterName": { "type": "string" },
        "UserFullName": { "type": "string" },
        "IsInvoiced": { "type": "boolean" },
        "MatterClosed": { "type": "boolean" },
        "ActivityTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "ActivityCodeDescription": { "type": "string" },
        "TaskCodeDescription": { "type": "string" },
        "TotalSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Expense": {
      "type": "object",
      "properties": {
        "Description": { "type": "string" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientId": {
          "type": "integer",
          "format": "int32"
        },
        "Matter": {
          "type": "object",
          "$ref": "#/definitions/Matter"
        },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "User": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "BillingDate": {
          "type": "string",
          "format": "date-time"
        },
        "Cost": {
          "type": "number",
          "format": "double"
        },
        "IsLineItemOverride": { "type": "boolean" },
        "IsNoCharge": { "type": "boolean" },
        "NonBillable": { "type": "boolean" },
        "LEDESExpenseCode": { "type": "string" },
        "IsFlatFee": { "type": "boolean" },
        "MatterName": { "type": "string" },
        "IsTaxable": { "type": "boolean" },
        "IsSurchargeable": { "type": "boolean" },
        "IsConvenienceFee": { "type": "boolean" },
        "UserFullName": { "type": "string" },
        "IsInvoiced": { "type": "boolean" },
        "MatterClosed": { "type": "boolean" },
        "ActivityTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "ExpenseCodeDescription": { "type": "string" },
        "VendorContactId": {
          "type": "integer",
          "format": "int32"
        },
        "VendorFullName": { "type": "string" },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "SyncQBOAsCheck": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetTimeExpenseResponse": {
      "type": "object",
      "properties": {
        "Time": {
          "type": "object",
          "$ref": "#/definitions/BillableTime"
        },
        "Expense": {
          "type": "object",
          "$ref": "#/definitions/Expense"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetUnitsBilledForPeriodResponse": {
      "type": "object",
      "properties": {
        "BillableUnits": {
          "type": "number",
          "format": "double"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveBillableTimeResponse": {
      "type": "object",
      "properties": {
        "BillableTime": {
          "type": "object",
          "$ref": "#/definitions/BillableTime"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveExpenseResponse": {
      "type": "object",
      "properties": {
        "Expense": {
          "type": "object",
          "$ref": "#/definitions/Expense"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetFirmBalancesResponse": {
      "type": "object",
      "properties": {
        "PendingSubtotal": {
          "type": "number",
          "format": "double"
        },
        "PendingTaxes": {
          "type": "number",
          "format": "double"
        },
        "PendingTotal": {
          "type": "number",
          "format": "double"
        },
        "TrustAccountBalance": {
          "type": "number",
          "format": "double"
        },
        "TrustAccountingEnabled": { "type": "boolean" },
        "PendingInvoicingEnabled": { "type": "boolean" },
        "AccessDenied": { "type": "boolean" },
        "TaxesSetUp": { "type": "boolean" },
        "BillableHours": {
          "type": "number",
          "format": "double"
        },
        "TrustPendingWithdrawl": {
          "type": "number",
          "format": "double"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetCurrentBadgeResponse": {
      "type": "object",
      "properties": {
        "CurrentBadge": { "type": "string" },
        "CurrentBadgeViewed": { "type": "boolean" },
        "NextBadge": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "BadgeHistory": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "DateCompleted": {
          "type": "string",
          "format": "date-time"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetUserBadgeHistoryResponse": {
      "type": "object",
      "properties": {
        "BadgeHistories": {
          "type": "array",
          "items": { "$ref": "#/definitions/BadgeHistory" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UserViewBadgeResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetMobileAuthenticationCodeResponse": {
      "type": "object",
      "properties": {
        "AuthenticationCode": { "type": "string" },
        "IsValid": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetAuthenticationTokenResponse": {
      "type": "object",
      "properties": {
        "AuthenticationToken": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SetUserMobilePinResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteUserNotificationResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UserMobileNotification": {
      "type": "object",
      "properties": {
        "Title": { "type": "string" },
        "Message": { "type": "string" },
        "DateSent": {
          "type": "string",
          "format": "date-time"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "EntityNameId": {
          "type": "integer",
          "format": "int32"
        },
        "EntityId": { "type": "string" },
        "MatterName": { "type": "string" },
        "IsRead": { "type": "boolean" },
        "Id": { "type": "string" }
      }
    },
    "GetUserNotificationsResponse": {
      "type": "object",
      "properties": {
        "Count": {
          "type": "integer",
          "format": "int32"
        },
        "Notifications": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserMobileNotification" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveUserTokenResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteFirmRoleResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UserFirmRole": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Users": {
          "type": "array",
          "items": { "$ref": "#/definitions/User" }
        },
        "Id": { "type": "string" }
      }
    },
    "SaveFirmRoleResponse": {
      "type": "object",
      "properties": {
        "Role": {
          "type": "object",
          "$ref": "#/definitions/UserFirmRole"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "FirmRolesRatesCanEditResponse": {
      "type": "object",
      "properties": {
        "CanEdit": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ClientRoleRate": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "ClientId": {
          "type": "integer",
          "format": "int32"
        },
        "UserFirmRoleId": { "type": "string" },
        "Rate": {
          "type": "number",
          "format": "double"
        },
        "Role": { "type": "string" },
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "Enabled": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetClientRoleRatesResponse": {
      "type": "object",
      "properties": {
        "ClientRoleRates": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClientRoleRate" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetFirmRolesResponse": {
      "type": "object",
      "properties": {
        "UserFirmRoles": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserFirmRole" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveClientRoleRatesResponse": {
      "type": "object",
      "properties": {
        "ClientRoleRates": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClientRoleRate" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetMatterCustomFieldsResponse": {
      "type": "object",
      "properties": {
        "CustomFields": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterCustomField" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetMatterNextTemplateByStatusSelectionResponse": {
      "type": "object",
      "properties": {
        "MatterTemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveMatterCustomFieldsResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SearchMatterTagsResponse": {
      "type": "object",
      "properties": {
        "MatterTags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteMatterResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetDetailsForMatterResponse": {
      "type": "object",
      "properties": {
        "Discounts": {
          "type": "array",
          "items": { "$ref": "#/definitions/DiscountConfiguration" }
        },
        "EmailFolders": {
          "type": "array",
          "items": { "type": "string" }
        },
        "EmailIntegrationSetup": { "type": "boolean" },
        "InterestRates": {
          "type": "array",
          "items": { "$ref": "#/definitions/InterestConfiguration" }
        },
        "SurchargeRates": {
          "type": "array",
          "items": { "$ref": "#/definitions/SurchargeRate" }
        },
        "Taxes": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaxRate" }
        },
        "InvoiceTemplates": {
          "type": "array",
          "items": { "$ref": "#/definitions/invoiceTemplate" }
        },
        "MatterTemplates": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplate" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetMatterBudgetResponse": {
      "type": "object",
      "properties": {
        "MatterBudget": {
          "type": "object",
          "$ref": "#/definitions/MatterBudget"
        },
        "AccessDenied": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetMatterBudgetInfoResponse": {
      "type": "object",
      "properties": {
        "MatterBudgetInfo": {
          "type": "object",
          "$ref": "#/definitions/MatterBudgetInfo"
        },
        "AccessDenied": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetMatterByClientMatterNameResponse": {
      "type": "object",
      "properties": {
        "Matter": {
          "type": "object",
          "$ref": "#/definitions/BaseMatter"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetMatterEmailFoldersResponse": {
      "type": "object",
      "properties": {
        "EmailFolders": {
          "type": "array",
          "items": { "type": "string" }
        },
        "EmailIntegrationSetup": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SearchCustomFieldsResponse": {
      "type": "object",
      "properties": {
        "MatterCustomFields": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UpdateMatterBudgetResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UpdateMatterStatusResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ProcessDropBoxResponse": {
      "type": "object",
      "properties": {
        "uri": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetDropBoxUriResponse": {
      "type": "object",
      "properties": {
        "uri": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "OriginContactCustomField": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "Name": { "type": "string" },
        "Value": { "type": "string" },
        "Position": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetContactCustomFieldsResponse": {
      "type": "object",
      "properties": {
        "CustomFields": {
          "type": "array",
          "items": { "$ref": "#/definitions/OriginContactCustomField" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveContactCustomFieldsResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ContactFull": {
      "type": "object",
      "properties": {
        "WorkPhone": { "type": "string" },
        "Salutation": { "type": "string" },
        "Title": { "type": "string" },
        "Suffix": { "type": "string" },
        "MobilePhone": { "type": "string" },
        "CompanyId": {
          "type": "integer",
          "format": "int32"
        },
        "CompanyName": { "type": "string" },
        "Notes": { "type": "string" },
        "WorkFax": { "type": "string" },
        "WorkPhoneExt": { "type": "string" },
        "SkypeUserName": { "type": "string" },
        "PrimaryContact": { "type": "string" },
        "PrimaryContactId": {
          "type": "integer",
          "format": "int32"
        },
        "PreferredDisplayName": { "type": "string" },
        "ContactTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "WorkAddress": {
          "type": "object",
          "$ref": "#/definitions/ContactAddress"
        },
        "HomeAddress": {
          "type": "object",
          "$ref": "#/definitions/ContactAddress"
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Relationships": {
          "type": "array",
          "items": { "$ref": "#/definitions/ContactRelationship" }
        },
        "Matters": {
          "type": "array",
          "items": { "$ref": "#/definitions/BaseMatter" }
        },
        "IsClient": { "type": "boolean" },
        "Name": { "type": "string" },
        "MiddleName": { "type": "string" },
        "FullName": { "type": "string" },
        "LastName": { "type": "string" },
        "IsCompany": { "type": "boolean" },
        "WorkEmail": { "type": "string" },
        "WorkAddressLine1": { "type": "string" },
        "WorkAddressLine2": { "type": "string" },
        "WorkCity": { "type": "string" },
        "WorkState": { "type": "string" },
        "WorkPostalCode": { "type": "string" },
        "WorkCountry": { "type": "string" },
        "ClientID": {
          "type": "integer",
          "format": "int32"
        },
        "HomeEmail": { "type": "string" },
        "HomePhone": { "type": "string" },
        "HomeAddressLine1": { "type": "string" },
        "HomeAddressLine2": { "type": "string" },
        "HomeCity": { "type": "string" },
        "HomeState": { "type": "string" },
        "HomePostalCode": { "type": "string" },
        "HomeCountry": { "type": "string" },
        "ExternalID2": { "type": "string" },
        "Initials": { "type": "string" },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SearchOriginatorResponse": {
      "type": "object",
      "properties": {
        "OriginatorNames": {
          "type": "array",
          "items": { "$ref": "#/definitions/ContactFull" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "DeleteContactResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetContactByFullNameResponse": {
      "type": "object",
      "properties": {
        "Contact": {
          "type": "object",
          "$ref": "#/definitions/Contact"
        },
        "Contacts": {
          "type": "array",
          "items": { "$ref": "#/definitions/Contact" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetContactByIDResponse": {
      "type": "object",
      "properties": {
        "Contact": {
          "type": "object",
          "$ref": "#/definitions/ContactFull"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ContactCustomField": {
      "type": "object",
      "properties": {
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "Position": {
          "type": "integer",
          "format": "int32"
        },
        "Name": { "type": "string" },
        "Value": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetContactDataResponse": {
      "type": "object",
      "properties": {
        "Relationships": {
          "type": "array",
          "items": { "$ref": "#/definitions/ContactRelationship" }
        },
        "CustomFields": {
          "type": "array",
          "items": { "$ref": "#/definitions/ContactCustomField" }
        },
        "Contact": {
          "type": "object",
          "$ref": "#/definitions/Contact"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetContactsResponse": {
      "type": "object",
      "properties": {
        "Contacts": {
          "type": "array",
          "items": { "$ref": "#/definitions/Contact" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetDefaultContactDataResponse": {
      "type": "object",
      "properties": {
        "Relationships": {
          "type": "array",
          "items": { "type": "string" }
        },
        "CustomFields": {
          "type": "array",
          "items": { "type": "string" }
        },
        "AlphabetisizeFields": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveContactDataResponse": {
      "type": "object",
      "properties": {
        "Relationships": {
          "type": "array",
          "items": { "$ref": "#/definitions/ContactRelationship" }
        },
        "CustomFields": {
          "type": "array",
          "items": { "$ref": "#/definitions/ContactCustomField" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveContactResponse": {
      "type": "object",
      "properties": {
        "Contact": {
          "type": "object",
          "$ref": "#/definitions/ContactFull"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SearchContactsResponse": {
      "type": "object",
      "properties": {
        "Contacts": {
          "type": "array",
          "items": { "$ref": "#/definitions/ContactFull" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GrantTokenResponse": {
      "type": "object",
      "properties": {
        "expires_at": {
          "type": "string",
          "format": "date-time"
        },
        "access_token": { "type": "string" },
        "refresh_token": { "type": "string" },
        "expires_in": {
          "type": "integer",
          "format": "int32"
        },
        "error": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "RevokeTokenResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "CancelSubscriptionResponse": {
      "type": "object",
      "properties": {
        "CancellationDate": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "InstallScript": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "ScriptID": {
          "type": "integer",
          "format": "int32"
        },
        "InstallationID": {
          "type": "integer",
          "format": "int32"
        },
        "Enabled": { "type": "boolean" },
        "Script": {
          "type": "object",
          "$ref": "#/definitions/Script"
        }
      }
    },
    "Script": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "Name": { "type": "string" },
        "ScriptText": { "type": "string" },
        "ApplyToTrialsAccounts": { "type": "boolean" },
        "ApplyToPaidAccounts": { "type": "boolean" },
        "InstallScripts": { "type": "object" },
        "LastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "CreatedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GetInstallScriptsResponse": {
      "type": "object",
      "properties": {
        "InstallScripts": {
          "type": "array",
          "items": { "$ref": "#/definitions/InstallScript" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetSessionCancellationInfoResponse": {
      "type": "object",
      "properties": {
        "Email": { "type": "string" },
        "Tenant": { "type": "string" },
        "CancellationDate": { "type": "string" },
        "User": { "type": "string" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetTimeZoneOptionsResponse": {
      "type": "object",
      "properties": {
        "Timezones": { "type": "object" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "IsDevOrTestEnvironmentResponse": {
      "type": "object",
      "properties": {
        "IsDevOrTestEnvironment": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SendCancellationNotificationResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SetInstallScriptStateResponse": {
      "type": "object",
      "properties": {
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "TaxRatesSaveRequest": {
      "type": "object",
      "properties": {
        "TaxRate": {
          "type": "object",
          "$ref": "#/definitions/TaxRate"
        }
      }
    },
    "TaxRatesDeleteResponse": {
      "type": "object",
      "properties": {
        "TaxRate": {
          "type": "object",
          "$ref": "#/definitions/TaxRate"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "TaxRatesGetAllResponse": {
      "type": "object",
      "properties": {
        "TaxRates": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaxRate" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "TaxRatesGetResponse": {
      "type": "object",
      "properties": {
        "TaxRate": {
          "type": "object",
          "$ref": "#/definitions/TaxRate"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "TaxRatesSaveResponse": {
      "type": "object",
      "properties": {
        "TaxRate": {
          "type": "object",
          "$ref": "#/definitions/TaxRate"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "TaxRatesSearchResponse": {
      "type": "object",
      "properties": {
        "TaxRates": {
          "type": "array",
          "items": { "$ref": "#/definitions/TaxRate" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SurchargeRatesSaveRequest": {
      "type": "object",
      "properties": {
        "SurchargeRate": {
          "type": "object",
          "$ref": "#/definitions/SurchargeRate"
        }
      }
    },
    "SurchargeRatesDeleteResponse": {
      "type": "object",
      "properties": {
        "SurchargeRate": {
          "type": "object",
          "$ref": "#/definitions/SurchargeRate"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SurchargeRatesGetAllResponse": {
      "type": "object",
      "properties": {
        "SurchargeRates": {
          "type": "array",
          "items": { "$ref": "#/definitions/SurchargeRate" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SurchargeRatesGetResponse": {
      "type": "object",
      "properties": {
        "SurchargeRate": {
          "type": "object",
          "$ref": "#/definitions/SurchargeRate"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SurchargeRatesSaveResponse": {
      "type": "object",
      "properties": {
        "SurchargeRate": {
          "type": "object",
          "$ref": "#/definitions/SurchargeRate"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SurchargeRatesSearchResponse": {
      "type": "object",
      "properties": {
        "SurchargeRates": {
          "type": "array",
          "items": { "$ref": "#/definitions/SurchargeRate" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "checkIfFeatureIsEnabledRequest": {
      "type": "object",
      "properties": { "FeatureName": { "type": "string" } }
    },
    "GetMatterSharedInvoiceSettingsRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "IsReceivingInvoicesBySpecifiedEmailTypeRequest": {
      "type": "object",
      "properties": {
        "ContactID": {
          "type": "integer",
          "format": "int32"
        },
        "Type": { "type": "string" }
      }
    },
    "SaveMatterSharedInvoiceSettingsRequest": {
      "type": "object",
      "properties": {
        "Settings": {
          "type": "array",
          "items": { "$ref": "#/definitions/ShareInvoiceSetting" }
        },
        "MatterID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AddTwoFactorAuthenticationPhoneNumberRequest": {
      "type": "object",
      "properties": {
        "PhoneNumber": { "type": "string" },
        "SkipSmsConfirmation": { "type": "boolean" }
      }
    },
    "CompleteTwoFactorAuthenticationSetupRequest": {
      "type": "object",
      "properties": {}
    },
    "DisableTwoFactorRequest": {
      "type": "object",
      "properties": {}
    },
    "EnableTwoFactorAuthenticationRequest": {
      "type": "object",
      "properties": {}
    },
    "GenerateTwoFactorAuthenticationQRCodeRequest": {
      "type": "object",
      "properties": {}
    },
    "GetClientByCodeRequest": {
      "type": "object",
      "properties": { "ClientCode": { "type": "string" } }
    },
    "GetFutureDateRequest": {
      "type": "object",
      "properties": {
        "Amount": {
          "type": "integer",
          "format": "int32"
        },
        "Period": {
          "type": "string",
          "enum": [ "Days", "Weeks", "Months", "Years" ]
        },
        "AfterDate": { "type": "string" },
        "NextBusinessDay": { "type": "boolean" }
      }
    },
    "BillableActivityFilter": {
      "type": "object",
      "properties": {
        "Sort": {
          "type": "string",
          "enum": [ "Date", "Type", "Description", "User", "Hours", "Amount" ]
        },
        "IsDescending": { "type": "boolean" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Fetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetBillableActivitiesRequest": {
      "type": "object",
      "properties": {
        "Filter": {
          "type": "object",
          "$ref": "#/definitions/BillableActivityFilter"
        }
      }
    },
    "GetMatterBySearchRequest": {
      "type": "object",
      "properties": {
        "SearchText": { "type": "string" },
        "ExcludeClosed": { "type": "boolean" },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Fetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ClientSaveRequest": {
      "type": "object",
      "properties": {
        "Client": {
          "type": "object",
          "$ref": "#/definitions/Client"
        }
      }
    },
    "DeleteMatterTemplateRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DoesClientMatterExistsRequest": {
      "type": "object",
      "properties": {
        "ClientCode": { "type": "string" },
        "MatterCode": { "type": "string" },
        "ExistingMatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetByFullNameRequest": {
      "type": "object",
      "properties": { "FullName": { "type": "string" } }
    },
    "GetMatterTemplateRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetNewMatterFromTemplateRequest": {
      "type": "object",
      "properties": {
        "MatterTemplateID": {
          "type": "integer",
          "format": "int32"
        },
        "OptionalBaseDate": { "type": "string" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetPersonContactsRequest": {
      "type": "object",
      "properties": {}
    },
    "GetSortedTaskAndEventSummaryInfoRequest": {
      "type": "object",
      "properties": {
        "Events": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateEvent" }
        },
        "Tasks": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateTask" }
        },
        "DefaultMilestones": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateMilestone" }
        }
      }
    },
    "GetTwoFactorAuthenticationCodeRequest": {
      "type": "object",
      "properties": {
        "SecretKey": { "type": "string" },
        "IsSms": { "type": "boolean" }
      }
    },
    "GetTwoFactorAuthenticationCodeVerificationRequest": {
      "type": "object",
      "properties": {}
    },
    "GetTwoFactorAuthenticationExistingPhoneNumbersRequest": {
      "type": "object",
      "properties": {}
    },
    "GetTwoFactorAuthenticationPhoneNumberRequest": {
      "type": "object",
      "properties": {}
    },
    "GetTwoFactorAuthenticationPreviouslyUsedRecoveryCodeRequest": {
      "type": "object",
      "properties": {}
    },
    "GetTwoFactorAuthenticationRecoveryCodeRequest": {
      "type": "object",
      "properties": {}
    },
    "GetTwoFactorAuthenticationRecoveryCodesRequest": {
      "type": "object",
      "properties": {}
    },
    "GetTwoFactorAuthenticationSecretKeyRequest": {
      "type": "object",
      "properties": {}
    },
    "GetTwoFactorAuthenticationSetupStatusRequest": {
      "type": "object",
      "properties": {}
    },
    "MatterTemplateDateOptionsGetByDisplayGroupRequest": {
      "type": "object",
      "properties": { "Group": { "type": "string" } }
    },
    "MatterTemplateExistsRequest": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "CurrentID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SearchClientsRequest": {
      "type": "object",
      "properties": { "SearchText": { "type": "string" } }
    },
    "SearchContactsRequest": {
      "type": "object",
      "properties": {
        "SearchText": { "type": "string" },
        "Relationship": { "type": "string" },
        "ContactType": {
          "type": "integer",
          "format": "int32"
        },
        "RestrictUsers": { "type": "boolean" }
      }
    },
    "SearchPersonContactsRequest": {
      "type": "object",
      "properties": { "SearchText": { "type": "string" } }
    },
    "SendSMSCodeRequest": {
      "type": "object",
      "properties": {}
    },
    "UpdateTwoFactorAuthenticationPhoneNumberRequest": {
      "type": "object",
      "properties": {
        "PhoneNumber": { "type": "string" },
        "SkipSmsConfirmation": { "type": "boolean" }
      }
    },
    "VerifyAndEnableTwoFactorAuthenticationRequest": {
      "type": "object",
      "properties": { "AuthenticationCode": { "type": "string" } }
    },
    "VerifyTwoFactorAuthenticationRecoveryCodeRequest": {
      "type": "object",
      "properties": { "RecoveryCode": { "type": "string" } }
    },
    "VerifyTwoFactorAuthenticationRequest": {
      "type": "object",
      "properties": { "AuthenticationCode": { "type": "string" } }
    },
    "VerifyTwoFactorSmsCodeRequest": {
      "type": "object",
      "properties": { "SmsCode": { "type": "string" } }
    },
    "UpdateShareInvoiceSettingsToOtherEmailRequest": {
      "type": "object",
      "properties": {
        "ContactID": {
          "type": "integer",
          "format": "int32"
        },
        "NewPreference": { "type": "string" }
      }
    },
    "MatterCreateFromTemplateRequest": {
      "type": "object",
      "properties": {
        "Matter": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplate"
        },
        "MatterTemplateID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterGetRequest": {
      "type": "object",
      "properties": {
        "ExcludeSpecialCollections": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "ExcludeCollections": { "type": "boolean" },
        "IsEdit": { "type": "boolean" }
      }
    },
    "MatterSaveRequest": {
      "type": "object",
      "properties": {
        "Matter": {
          "type": "object",
          "$ref": "#/definitions/Matter"
        },
        "TrustAccountDeposit": {
          "type": "number",
          "format": "double"
        },
        "TrustDescription": { "type": "string" },
        "OpenDate": { "type": "string" },
        "OpenDateDateObject": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "MatterTemplateDateOptionGetRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplatesGetAllRequest": {
      "type": "object",
      "properties": {}
    },
    "MatterTemplateSaveRequest": {
      "type": "object",
      "properties": {
        "MatterTemplate": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplate"
        },
        "ReturnNavigationData": { "type": "boolean" }
      }
    },
    "MatterTypeGetRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplateDateOptionsGetRequest": {
      "type": "object",
      "properties": {}
    },
    "SearchTagsRequest": {
      "type": "object",
      "properties": { "SearchText": { "type": "string" } }
    },
    "SearchUsersRequest": {
      "type": "object",
      "properties": { "SearchText": { "type": "string" } }
    },
    "TimeOptionsGetAllRequest": {
      "type": "object",
      "properties": {}
    },
    "TimeOptionsGetNextTimesRequest": {
      "type": "object",
      "properties": { "CurrentTime": { "type": "string" } }
    },
    "UserGetRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MatterTemplatesGetAllResponse": {
      "type": "object",
      "properties": {
        "MatterTemplates": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplate" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterTemplateDateOptionsGetResponse": {
      "type": "object",
      "properties": {
        "MatterTemplateDateOptions": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterTemplateDateOption" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterTemplateDateOptionGetResponse": {
      "type": "object",
      "properties": {
        "MatterTemplateDateOption": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateDateOption"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "MatterTypeGetResponse": {
      "type": "object",
      "properties": {
        "MatterType": {
          "type": "object",
          "$ref": "#/definitions/MatterType"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SearchTagsResponse": {
      "type": "object",
      "properties": {
        "Tags": {
          "type": "array",
          "items": { "$ref": "#/definitions/Tag" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SearchUsersResponse": {
      "type": "object",
      "properties": {
        "Users": {
          "type": "array",
          "items": { "$ref": "#/definitions/User" }
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "UserGetResponse": {
      "type": "object",
      "properties": {
        "User": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "AddEditWorkflowStatusRequest": {
      "type": "object",
      "properties": {
        "MatterWorkFlowStatus": {
          "type": "object",
          "$ref": "#/definitions/MatterWorkFlowStatus"
        }
      }
    },
    "ApplyNewMatterWorkFlowStatusRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterWorkFlowStatusId": { "type": "string" }
      }
    },
    "GetMatterCurrentWorkFlowStatusRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetMatterWorkFLowStatusesRequest": {
      "type": "object",
      "properties": {}
    },
    "GetMatterCurrentWorkFlowStatusResponse": {
      "type": "object",
      "properties": {
        "MatterWorkFlowStatus": {
          "type": "object",
          "$ref": "#/definitions/MatterWorkFlowStatus"
        },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetActiveUsersRequest": {
      "type": "object",
      "properties": {}
    },
    "GetPermissionsForUserRequest": {
      "type": "object",
      "properties": {}
    },
    "GetUserByInitialsRequest": {
      "type": "object",
      "properties": { "Initials": { "type": "string" } }
    },
    "GetUserNavigationPreferencesRequest": {
      "type": "object",
      "properties": {}
    },
    "GetUsersAccessRequest": {
      "type": "object",
      "properties": {}
    },
    "GetUserPreferenceRequest": {
      "type": "object",
      "properties": {
        "Preference": { "type": "string" },
        "DefaultValue": { "type": "string" }
      }
    },
    "UserPreference": {
      "type": "object",
      "properties": {
        "Preference": { "type": "string" },
        "Value": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SetUserPreferenceRequest": {
      "type": "object",
      "properties": {
        "Preference": {
          "type": "object",
          "$ref": "#/definitions/UserPreference"
        }
      }
    },
    "TrustDetailsRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DeleteTimerRequest": {
      "type": "object",
      "properties": { "Id": { "type": "string" } }
    },
    "GetEvenIfDeletedRequest": {
      "type": "object",
      "properties": { "Id": { "type": "string" } }
    },
    "BillTimerRequest": {
      "type": "object",
      "properties": {
        "PausedAt": {
          "type": "string",
          "format": "date-time"
        },
        "ActiveTimer": {
          "type": "object",
          "$ref": "#/definitions/ActiveTimer"
        },
        "BrowserSession": { "type": "string" }
      }
    },
    "TimerRequest": {
      "type": "object",
      "properties": {
        "ActiveTimer": {
          "type": "object",
          "$ref": "#/definitions/ActiveTimer"
        },
        "BrowserSession": { "type": "string" }
      }
    },
    "GetTimerRequest": {
      "type": "object",
      "properties": { "Id": { "type": "string" } }
    },
    "StartTimerRequest": {
      "type": "object",
      "properties": {
        "StartedAt": {
          "type": "string",
          "format": "date-time"
        },
        "ActiveTimer": {
          "type": "object",
          "$ref": "#/definitions/ActiveTimer"
        },
        "BrowserSession": { "type": "string" }
      }
    },
    "PauseTimerRequest": {
      "type": "object",
      "properties": {
        "PausedAt": {
          "type": "string",
          "format": "date-time"
        },
        "ActiveTimer": {
          "type": "object",
          "$ref": "#/definitions/ActiveTimer"
        },
        "BrowserSession": { "type": "string" }
      }
    },
    "TaxRatesGetAllRequest": {
      "type": "object",
      "properties": {}
    },
    "TaxRatesGetRequest": {
      "type": "object",
      "properties": {
        "TaxRateId": { "type": "string" },
        "TaxRateDescription": { "type": "string" }
      }
    },
    "TaxRatesSearchRequest": {
      "type": "object",
      "properties": { "SearchText": { "type": "string" } }
    },
    "DeleteTaskRequest": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetCommonTagsRequest": {
      "type": "object",
      "properties": {}
    },
    "GetTaskByActivityIdRequest": {
      "type": "object",
      "properties": {
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskFilter": {
      "type": "object",
      "properties": {
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "CurrentUserId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "State": {
          "type": "string",
          "enum": [ "Pending", "Completed", "Deleted", "All", "Due" ]
        },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Fetch": {
          "type": "integer",
          "format": "int32"
        },
        "FilterType": {
          "type": "string",
          "enum": [ "UserTasks", "MatterTasks", "CreatedByOrAssignedByMe", "CreatedByMeNotAssigned", "CreatedByMeAssignedToOthers", "Custom" ]
        },
        "CreatedByUsers": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "AssignedToUsers": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "OnlyDueDates": { "type": "boolean" }
      }
    },
    "GetTasksByFilterRequest": {
      "type": "object",
      "properties": {
        "Filter": {
          "type": "object",
          "$ref": "#/definitions/TaskFilter"
        },
        "RetrieveCount": { "type": "boolean" }
      }
    },
    "GetTasksForMatterRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "State": {
          "type": "string",
          "enum": [ "Pending", "Completed", "Deleted", "All", "Due" ]
        },
        "ShowDueDates": { "type": "boolean" },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Fetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SaveTaskRequest": {
      "type": "object",
      "properties": {
        "Task": {
          "type": "object",
          "$ref": "#/definitions/Task"
        }
      }
    },
    "AddRemoveTagRequest": {
      "type": "object",
      "properties": {
        "Tag": {
          "type": "object",
          "$ref": "#/definitions/Tag"
        },
        "EntityTypeId": {
          "type": "string",
          "enum": [ "None", "Contact", "User", "Matter", "Document", "Note", "Activity", "CalendarEntry", "TodoItem", "LedgerEntry", "Expense", "BilledTime", "Timer", "PhoneMessage", "MatterTrustLedgerEntry", "ClientTrustLedgerEntry", "DocumentTemplate", "Email", "Portal", "FlatFee", "ChatMessage" ]
        },
        "EntityId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SurchargeRatesGetAllRequest": {
      "type": "object",
      "properties": {}
    },
    "SurchargeRatesGetRequest": {
      "type": "object",
      "properties": {
        "SurchargeRateId": { "type": "string" },
        "SurchargeRateDescription": { "type": "string" }
      }
    },
    "SurchargeRatesSearchRequest": {
      "type": "object",
      "properties": { "SearchText": { "type": "string" } }
    },
    "SubscriptionAgreementRequest": {
      "type": "object",
      "properties": { "UserAgreed": { "type": "boolean" } }
    },
    "AccountStatusRequest": {
      "type": "object",
      "properties": {}
    },
    "SignupCCEntryRequest": {
      "type": "object",
      "properties": {
        "CCNumber": { "type": "string" },
        "ExpMonth": { "type": "string" },
        "ExpYear": { "type": "string" },
        "CvvCode": { "type": "string" },
        "CouponCode": { "type": "string" },
        "BillingFrequency": {
          "type": "string",
          "enum": [ "Monthly", "Yearly", "TriAnnual", "Quarterly", "Biennial" ]
        },
        "BillingTierId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SignupUserInfo": {
      "type": "object",
      "properties": {
        "FirstName": { "type": "string" },
        "MiddleName": { "type": "string" },
        "LastName": { "type": "string" },
        "TimeZoneId": { "type": "string" },
        "UserRate": {
          "type": "number",
          "format": "double"
        },
        "Phone": { "type": "string" },
        "FirmName": { "type": "string" },
        "Password": { "type": "string" }
      }
    },
    "FirstTimeUserInfoRequest": {
      "type": "object",
      "properties": {
        "UserInfo": {
          "type": "object",
          "$ref": "#/definitions/SignupUserInfo"
        }
      }
    },
    "SearchResultType": {
      "type": "object",
      "properties": {}
    },
    "ExportResultsRequest": {
      "type": "object",
      "properties": {
        "Types": {
          "type": "array",
          "items": { "$ref": "#/definitions/SearchResultType" }
        },
        "Searches": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GlobalSearchRequest": {
      "type": "object",
      "properties": {
        "SearchText": { "type": "string" },
        "IsMobile": { "type": "boolean" }
      }
    },
    "SearchOccurenceForTypeRequest": {
      "type": "object",
      "properties": {
        "Search": { "type": "string" },
        "Type": {
          "type": "string",
          "enum": [ "Contact", "Client", "Matter", "Activity", "Tag", "ContactCustomField", "MatterCustomField" ]
        }
      }
    },
    "GetRetainerRequest": {
      "type": "object",
      "properties": { "PaymentKey": { "type": "string" } }
    },
    "SaveRetainerRequest": {
      "type": "object",
      "properties": {
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "Email": { "type": "string" }
      }
    },
    "GetReportMedaDataRequest": {
      "type": "object",
      "properties": {
        "Report": { "type": "string" },
        "IsCustom": { "type": "boolean" }
      }
    },
    "ReportFilter": {
      "type": "object",
      "properties": {
        "StartDate": {
          "type": "string",
          "format": "date-time"
        },
        "EndDate": {
          "type": "string",
          "format": "date-time"
        },
        "StartDateChange": {
          "type": "string",
          "format": "date-time"
        },
        "EndDateChange": {
          "type": "string",
          "format": "date-time"
        },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "ClientId": {
          "type": "integer",
          "format": "int32"
        },
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "Report": { "type": "string" },
        "IsCustom": { "type": "boolean" },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Fetch": {
          "type": "integer",
          "format": "int32"
        },
        "Sort": { "type": "string" },
        "IsDescending": { "type": "boolean" },
        "CustomFilters": { "type": "object" },
        "UserIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "TaxRateId": { "type": "string" },
        "TaxRateDescription": { "type": "string" },
        "SurchargeRateId": { "type": "string" },
        "CustomFieldCollection": {
          "type": "array",
          "items": { "type": "string" }
        },
        "MatterTagsCollection": {
          "type": "array",
          "items": { "type": "string" }
        },
        "OriginatorName": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetReportSummaryRequest": {
      "type": "object",
      "properties": {
        "Filter": {
          "type": "object",
          "$ref": "#/definitions/ReportFilter"
        }
      }
    },
    "GetUserReportPreferenceRequest": {
      "type": "object",
      "properties": { "Preference": { "type": "string" } }
    },
    "RunReportRequest": {
      "type": "object",
      "properties": {
        "Filter": {
          "type": "object",
          "$ref": "#/definitions/ReportFilter"
        }
      }
    },
    "SaveReportPreferenceRequest": {
      "type": "object",
      "properties": {
        "Preference": {
          "type": "object",
          "$ref": "#/definitions/UserReportPreference"
        }
      }
    },
    "AccountsPayableReportFilter": {
      "type": "object",
      "properties": {
        "StartDate": {
          "type": "string",
          "format": "date-time"
        },
        "EndDate": {
          "type": "string",
          "format": "date-time"
        },
        "StartDateString": { "type": "string" },
        "EndDateString": { "type": "string" },
        "ShowTrustAccount": { "type": "boolean" },
        "ShowOperating": { "type": "boolean" },
        "IncludePayments": { "type": "boolean" },
        "IncludeAdjustments": { "type": "boolean" },
        "ClientId": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetAccountsPayableReportRequest": {
      "type": "object",
      "properties": {
        "Filter": {
          "type": "object",
          "$ref": "#/definitions/AccountsPayableReportFilter"
        }
      }
    },
    "MatterReportFilter": {
      "type": "object",
      "properties": {
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "ShowOpened": { "type": "boolean" },
        "ShowCompleted": { "type": "boolean" },
        "ShowClosed": { "type": "boolean" },
        "ShowWithStatute": { "type": "boolean" },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Fetch": {
          "type": "integer",
          "format": "int32"
        },
        "Sort": {
          "type": "string",
          "enum": [ "MatterName", "UserName", "ClientName", "Type", "Status", "StatuteOfLimitation", "OpenedDate", "RecentActivity", "CurrentBalance" ]
        },
        "IsDescending": { "type": "boolean" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetMatterReportSummaryRequest": {
      "type": "object",
      "properties": {
        "Filter": {
          "type": "object",
          "$ref": "#/definitions/MatterReportFilter"
        }
      }
    },
    "GetMattersReportRequest": {
      "type": "object",
      "properties": {
        "Filter": {
          "type": "object",
          "$ref": "#/definitions/MatterReportFilter"
        }
      }
    },
    "CancelPaymentPlanRequest": {
      "type": "object",
      "properties": { "Id": { "type": "string" } }
    },
    "InvoiceShare": {
      "type": "object",
      "properties": {
        "ContactID": {
          "type": "integer",
          "format": "int32"
        },
        "EmailTypeSelected": { "type": "string" }
      }
    },
    "CommitPlanRequest": {
      "type": "object",
      "properties": {
        "Plan": {
          "type": "object",
          "$ref": "#/definitions/RecurringBillingPlan"
        },
        "InvoiceShares": {
          "type": "array",
          "items": { "$ref": "#/definitions/InvoiceShare" }
        }
      }
    },
    "GetMatterPaymentPlanRequest": {
      "type": "object",
      "properties": {
        "matterID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProcessPaymentPlansRequest": {
      "type": "object",
      "properties": { "PaymentPlanCode": { "type": "string" } }
    },
    "UpdatePlanNotificationRequest": {
      "type": "object",
      "properties": {
        "PlanId": { "type": "string" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "FailureNotifications": {
          "type": "array",
          "items": { "$ref": "#/definitions/RecurringBillingPlanFailureNotification" }
        },
        "InvoiceShares": {
          "type": "array",
          "items": { "$ref": "#/definitions/InvoiceShare" }
        }
      }
    },
    "UpdatePaymentPlanTokenRequest": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "ChargeToken": { "type": "string" },
        "PaymentHint": { "type": "string" }
      }
    },
    "DeleteMatterRatesRequest": {
      "type": "object",
      "properties": {
        "RateIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "MatterCustomRateFilter": {
      "type": "object",
      "properties": {
        "ClientIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "ExcludeClients": { "type": "boolean" },
        "MatterIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "ExcludeMatters": { "type": "boolean" },
        "UserIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "ExcludeUsers": { "type": "boolean" },
        "RoleIds": {
          "type": "array",
          "items": { "type": "object" }
        },
        "StartDate": {
          "type": "string",
          "format": "date-time"
        },
        "EndDate": {
          "type": "string",
          "format": "date-time"
        },
        "IncludeMattersWitoutRate": { "type": "boolean" },
        "ExcludeMattersWithRate": { "type": "boolean" },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Fetch": {
          "type": "integer",
          "format": "int32"
        },
        "Sort": { "type": "string" },
        "SortDescending": { "type": "boolean" }
      }
    },
    "GetMatterCustomRatesRequest": {
      "type": "object",
      "properties": {
        "Filter": {
          "type": "object",
          "$ref": "#/definitions/MatterCustomRateFilter"
        }
      }
    },
    "CustomRateConfig": {
      "type": "object",
      "properties": {
        "UserMatters": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserCustomMatterRate" }
        },
        "Rate": {
          "type": "number",
          "format": "double"
        },
        "EffectiveDate": {
          "type": "string",
          "format": "date-time"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SaveCustomRateConfigRequest": {
      "type": "object",
      "properties": {
        "RateConfig": {
          "type": "object",
          "$ref": "#/definitions/CustomRateConfig"
        }
      }
    },
    "ConnectQuickbooksRequest": {
      "type": "object",
      "properties": { "Request": { "type": "string" } }
    },
    "ExcludeQuickbooksItemsRequest": {
      "type": "object",
      "properties": {
        "ExcludedItemIds": {
          "type": "array",
          "items": { "type": "object" }
        },
        "ResyncItemIds": {
          "type": "array",
          "items": { "type": "object" }
        }
      }
    },
    "GetQuickbooksBucketsRequest": {
      "type": "object",
      "properties": {}
    },
    "GetQuickbooksSyncInfoRequest": {
      "type": "object",
      "properties": {
        "SyncId": { "type": "string" },
        "Page": {
          "type": "integer",
          "format": "int32"
        },
        "PageSize": {
          "type": "integer",
          "format": "int32"
        },
        "IncludeAll": { "type": "boolean" },
        "IncludeTotal": { "type": "boolean" }
      }
    },
    "GetQuickbooksSyncsRequest": {
      "type": "object",
      "properties": {
        "Page": {
          "type": "integer",
          "format": "int32"
        },
        "PageSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SaveQuickbooksConfigurationRequest": {
      "type": "object",
      "properties": {
        "Mapping": { "type": "object" },
        "UseTrustAccounting": { "type": "boolean" },
        "CancelAuth": { "type": "boolean" },
        "StartFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "SyncPayments": { "type": "boolean" },
        "Success": { "type": "boolean" },
        "Message": { "type": "string" },
        "ErrorMessage": { "type": "string" },
        "ErrorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "FailedValidations": {
          "type": "array",
          "items": { "$ref": "#/definitions/ValidationResult" }
        },
        "Errors": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetRolePermissionsRequest": {
      "type": "object",
      "properties": { "RoleId": { "type": "string" } }
    },
    "GetPermissionsRequest": {
      "type": "object",
      "properties": {}
    },
    "DeleteRoleRequest": {
      "type": "object",
      "properties": { "RoleId": { "type": "string" } }
    },
    "GetRoleRequest": {
      "type": "object",
      "properties": { "RoleId": { "type": "string" } }
    },
    "GetRolesRequest": {
      "type": "object",
      "properties": {}
    },
    "GetRoleUsersForPermissionsRequest": {
      "type": "object",
      "properties": { "RoleId": { "type": "string" } }
    },
    "GetUserOperationsRequest": {
      "type": "object",
      "properties": {}
    },
    "GetUsersForPermissionsRequest": {
      "type": "object",
      "properties": {}
    },
    "SaveRoleRequest": {
      "type": "object",
      "properties": {
        "Role": {
          "type": "object",
          "$ref": "#/definitions/Role"
        }
      }
    },
    "BasePaymentProcessorRequest": {
      "type": "object",
      "properties": {
        "ServiceCode": { "type": "string" },
        "IsTesting": { "type": "boolean" },
        "FailPendingPayments": { "type": "boolean" }
      }
    },
    "QueryFinancialInstitutionRequest": {
      "type": "object",
      "properties": { "RoutingNumber": { "type": "string" } }
    },
    "UpdateFedACHDirectoryRequest": {
      "type": "object",
      "properties": { "TextBlob": { "type": "string" } }
    },
    "UpdateFedWireDirectoryRequest": {
      "type": "object",
      "properties": { "TextBlob": { "type": "string" } }
    },
    "GetCopy2ContactsJavaScriptRequest": {
      "type": "object",
      "properties": { "Form": { "type": "string" } }
    },
    "DisconnectOfficeRequest": {
      "type": "object",
      "properties": {}
    },
    "GetOfficeUrlRequest": {
      "type": "object",
      "properties": {}
    },
    "GetOutlookEmailRequest": {
      "type": "object",
      "properties": { "EmailUId": { "type": "string" } }
    },
    "OfficeConfiguredRequest": {
      "type": "object",
      "properties": {}
    },
    "SyncOutlookEmailRequest": {
      "type": "object",
      "properties": {
        "OutlookEmail": {
          "type": "object",
          "$ref": "#/definitions/Email"
        }
      }
    },
    "UpdateOfficeUserSettingRequest": {
      "type": "object",
      "properties": {
        "SyncContacts": { "type": "boolean" },
        "SyncCalendar": { "type": "boolean" }
      }
    },
    "GetPhoneMessageRequest": {
      "type": "object",
      "properties": {
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SavePhoneMessageRequest": {
      "type": "object",
      "properties": {
        "PhoneMessage": {
          "type": "object",
          "$ref": "#/definitions/PhoneMessage"
        }
      }
    },
    "GetMatterTemplateDateOptionDetailsRequest": {
      "type": "object",
      "properties": {}
    },
    "GetDefaultMatterTemplateRolesRequest": {
      "type": "object",
      "properties": {}
    },
    "GetMilestonesForItemRequest": {
      "type": "object",
      "properties": {
        "Task": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateTask"
        },
        "Event": {
          "type": "object",
          "$ref": "#/definitions/MatterTemplateEvent"
        }
      }
    },
    "CheckMilestoneUpdateStatusRequest": {
      "type": "object",
      "properties": {
        "ItemId": {
          "type": "integer",
          "format": "int32"
        },
        "Type": {
          "type": "string",
          "enum": [ "Task", "Event", "Matter" ]
        },
        "MilestoneDate": {
          "type": "string",
          "format": "date-time"
        },
        "TriggerType": {
          "type": "string",
          "enum": [ "MatterOpen", "EventDate", "TaskDueDate", "TaskCompletedDate", "StatusDate" ]
        }
      }
    },
    "DetachMilestoneActionRequest": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string",
          "enum": [ "Task", "Event", "Matter" ]
        },
        "ItemId": {
          "type": "integer",
          "format": "int32"
        },
        "Event": {
          "type": "object",
          "$ref": "#/definitions/Event"
        },
        "Task": {
          "type": "object",
          "$ref": "#/definitions/Task"
        }
      }
    },
    "GetActionForItemRequest": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string",
          "enum": [ "Task", "Event", "Matter" ]
        },
        "ItemId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetChildMilestoneActionsRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "ItemId": {
          "type": "integer",
          "format": "int32"
        },
        "IsRecursive": { "type": "boolean" },
        "Type": {
          "type": "string",
          "enum": [ "Task", "Event", "Matter" ]
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RemoveChildMilestoneActionItemsRequest": {
      "type": "object",
      "properties": {
        "ItemId": {
          "type": "integer",
          "format": "int32"
        },
        "Type": {
          "type": "string",
          "enum": [ "Task", "Event", "Matter" ]
        },
        "TriggerType": {
          "type": "string",
          "enum": [ "MatterOpen", "EventDate", "TaskDueDate", "TaskCompletedDate", "StatusDate" ]
        }
      }
    },
    "UpdateChildMilestoneDatesRequest": {
      "type": "object",
      "properties": {
        "ItemId": {
          "type": "integer",
          "format": "int32"
        },
        "Type": {
          "type": "string",
          "enum": [ "Task", "Event", "Matter" ]
        },
        "MilestoneDate": {
          "type": "string",
          "format": "date-time"
        },
        "TriggerType": {
          "type": "string",
          "enum": [ "MatterOpen", "EventDate", "TaskDueDate", "TaskCompletedDate", "StatusDate" ]
        },
        "MilestoneEndDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LexChargeTokenRequest": {
      "type": "object",
      "properties": {
        "RoutingNumber": { "type": "string" },
        "AccountNumber": { "type": "string" },
        "AccountType": { "type": "string" },
        "IsOperating": { "type": "boolean" },
        "SEC_Code": { "type": "string" },
        "StreetAddress": { "type": "string" },
        "City": { "type": "string" },
        "State": { "type": "string" },
        "ZipCode": { "type": "string" },
        "Phone": { "type": "string" },
        "CheckNumber": { "type": "string" },
        "FirstName": { "type": "string" },
        "LastName": { "type": "string" }
      }
    },
    "UpdateACHTransactionRequest": {
      "type": "object",
      "properties": {
        "ServiceCode": { "type": "string" },
        "TransactionId": { "type": "string" },
        "Status": { "type": "string" }
      }
    },
    "DownloadInvoiceTemplateRequest": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string",
          "enum": [ "Default", "Custom", "ClassicBlue", "ClassicGreen", "LuxuryBrown", "ModernBlack", "ModernBlue" ]
        },
        "TemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "IsSummary": { "type": "boolean" }
      }
    },
    "getAvailableInvoiceTemplatesRequest": {
      "type": "object",
      "properties": { "IsSummary": { "type": "boolean" } }
    },
    "GetRequestRetainerPaymentEmailRequest": {
      "type": "object",
      "properties": {}
    },
    "GetCustomInvoicePaymentEmailRequest": {
      "type": "object",
      "properties": {}
    },
    "GetCustomPaymentPlanReceiptEmailRequest": {
      "type": "object",
      "properties": {}
    },
    "GetCustomInvoicePaymentReceiptEmailRequest": {
      "type": "object",
      "properties": {}
    },
    "GetCustomRefundEmailRequest": {
      "type": "object",
      "properties": {}
    },
    "GetMattersForInvoiceTemplateRequest": {
      "type": "object",
      "properties": {
        "InvoiceTemplateId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RMDirectory": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "ParentDirectory": { "type": "string" },
        "ParentPath": { "type": "string" },
        "FullPath": { "type": "string" },
        "Files": {
          "type": "array",
          "items": { "$ref": "#/definitions/RMFile" }
        },
        "Directories": {
          "type": "array",
          "items": { "$ref": "#/definitions/RMDirectory" }
        },
        "FileUUId": { "type": "string" }
      }
    },
    "SaveInvoiceTemplateRequest": {
      "type": "object",
      "properties": {
        "Files": {
          "type": "array",
          "items": { "$ref": "#/definitions/RMFile" }
        },
        "Directories": {
          "type": "array",
          "items": { "$ref": "#/definitions/RMDirectory" }
        },
        "Type": {
          "type": "string",
          "enum": [ "Default", "Custom", "ClassicBlue", "ClassicGreen", "LuxuryBrown", "ModernBlack", "ModernBlue" ]
        },
        "IsSummary": { "type": "boolean" }
      }
    },
    "SetCustomInvoicePaymentEmailResquest": {
      "type": "object",
      "properties": {
        "CustomInvoicePaymentEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomInvoicePaymentEmail"
        }
      }
    },
    "SetRequestRetainerPaymentmailResquest": {
      "type": "object",
      "properties": {
        "CustomRequestRetainerEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomRequestRetainerEmail"
        }
      }
    },
    "SetCustomPaymentPlanReceiptEmailResquest": {
      "type": "object",
      "properties": {
        "CustomPaymentPlanReceiptEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomPaymentPlanReceiptEmail"
        }
      }
    },
    "SetCustomInvoicePaymentReceiptEmailResquest": {
      "type": "object",
      "properties": {
        "CustomInvoicePaymentReceiptEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomInvoicePaymentReceiptEmail"
        }
      }
    },
    "SetCustomRefundEmailResquest": {
      "type": "object",
      "properties": {
        "CustomRefundEmail": {
          "type": "object",
          "$ref": "#/definitions/CustomRefundEmail"
        }
      }
    },
    "ValidateInvoiceTemplateNameRequest": {
      "type": "object",
      "properties": { "FileUrl": { "type": "string" } }
    },
    "ValidateInvoiceTemplateRequest": {
      "type": "object",
      "properties": {
        "InvoiceTemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "IsSummary": { "type": "boolean" }
      }
    },
    "deleteInvoiceTemplateRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "JobStartRequest": {
      "type": "object",
      "properties": { "Code": { "type": "string" } }
    },
    "GetFirmFeaturesRequest": {
      "type": "object",
      "properties": {}
    },
    "SetDocumentVersionsRequest": {
      "type": "object",
      "properties": { "IsEnabled": { "type": "boolean" } }
    },
    "DeleteDocumentTemplateRequest": {
      "type": "object",
      "properties": {
        "DocumentTemplateId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DownloadDocumentTemplateRequest": {
      "type": "object",
      "properties": {
        "DocumentTemplateId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetDocumentTemplatesRequest": {
      "type": "object",
      "properties": {
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Fetch": {
          "type": "integer",
          "format": "int32"
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "Search": { "type": "string" },
        "SortByTitle": { "type": "boolean" },
        "SortDescending": { "type": "boolean" },
        "GetCount": { "type": "boolean" },
        "State": {
          "type": "string",
          "enum": [ "None", "Valid", "NotValid" ]
        }
      }
    },
    "DeleteDocumentRequest": {
      "type": "object",
      "properties": {
        "DocumentId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DeleteDocumentsInPathRequest": {
      "type": "object",
      "properties": {
        "DocumentPaths": {
          "type": "array",
          "items": { "type": "string" }
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DeleteNoteRequest": {
      "type": "object",
      "properties": {
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DocumentContentsChangedRequest": {
      "type": "object",
      "properties": {
        "DocumentId": {
          "type": "integer",
          "format": "int32"
        },
        "Base64Contents": { "type": "string" }
      }
    },
    "DownloadDocumentRequest": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string",
          "enum": [ "None", "Note", "UploadedDocument", "WebAddress", "DropboxFile", "DropboxDirectory", "EvernoteNote", "EvernoteNotebook", "MergedDocument", "BoxFile", "BoxDirectory", "UploadedDirectory", "Invoice", "DocumentTemplate", "InvoiceTemplate", "DefaultInvoiceTemplate", "ImportDocument" ]
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "DocumentId": {
          "type": "integer",
          "format": "int32"
        },
        "Path": { "type": "string" },
        "DocumentUUId": { "type": "string" },
        "VersionId": { "type": "string" }
      }
    },
    "GetDirectoriesRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetDocumentFileInfoRequest": {
      "type": "object",
      "properties": {
        "Files": {
          "type": "array",
          "items": { "$ref": "#/definitions/RMFile" }
        },
        "DocumentId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetDocumentIntegrationRequest": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string",
          "enum": [ "Dropbox", "Evernote", "Box" ]
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetDocumentRequest": {
      "type": "object",
      "properties": {
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        },
        "IsNote": { "type": "boolean" },
        "DocumentUId": { "type": "string" }
      }
    },
    "DocumentPageFilter": {
      "type": "object",
      "properties": {
        "DocumentType": {
          "type": "string",
          "enum": [ "None", "Note", "UploadedDocument", "WebAddress", "DropboxFile", "DropboxDirectory", "EvernoteNote", "EvernoteNotebook", "MergedDocument", "BoxFile", "BoxDirectory", "UploadedDirectory", "Invoice", "DocumentTemplate", "InvoiceTemplate", "DefaultInvoiceTemplate", "ImportDocument" ]
        },
        "RootDirectory": { "type": "string" },
        "DocumentPath": { "type": "string" },
        "DirectoryId": {
          "type": "integer",
          "format": "int32"
        },
        "Search": { "type": "string" },
        "SortExpression": { "type": "string" },
        "SortDescending": { "type": "boolean" },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Fetch": {
          "type": "integer",
          "format": "int32"
        },
        "DocumentUId": { "type": "string" },
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "ExcludeChildren": { "type": "boolean" },
        "Tags": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetDocumentsInPathRequest": {
      "type": "object",
      "properties": {
        "Filter": {
          "type": "object",
          "$ref": "#/definitions/DocumentPageFilter"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "ReturnCount": { "type": "boolean" }
      }
    },
    "GetDocumentUploadUrlRequest": {
      "type": "object",
      "properties": {
        "Files": {
          "type": "array",
          "items": { "$ref": "#/definitions/RMFile" }
        },
        "Directories": {
          "type": "array",
          "items": { "$ref": "#/definitions/RMDirectory" }
        },
        "DirectoryId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "UseTemp": { "type": "boolean" }
      }
    },
    "GetDocumentVersionsRequest": {
      "type": "object",
      "properties": {
        "DocumentId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetInvoicedDocumentsRequest": {
      "type": "object",
      "properties": {
        "DocumentId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetPortalDocumentContactsRequest": {
      "type": "object",
      "properties": {
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MoveDocumentsToFolderRequest": {
      "type": "object",
      "properties": {
        "DirectoryId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "DocumentIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "RenameFolderRequest": {
      "type": "object",
      "properties": {
        "DocumentId": {
          "type": "integer",
          "format": "int32"
        },
        "NewName": { "type": "string" }
      }
    },
    "SaveDocumentRequest": {
      "type": "object",
      "properties": {
        "Document": {
          "type": "object",
          "$ref": "#/definitions/Document"
        },
        "DirectoryId": {
          "type": "integer",
          "format": "int32"
        },
        "IsNote": { "type": "boolean" },
        "FileUpdated": { "type": "boolean" },
        "CleanupFileUrls": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SaveDocumentsForMatterRequest": {
      "type": "object",
      "properties": {
        "Files": {
          "type": "array",
          "items": { "$ref": "#/definitions/RMFile" }
        },
        "Directories": {
          "type": "array",
          "items": { "$ref": "#/definitions/RMDirectory" }
        },
        "DirectoryId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SavePortalDocumentContactsRequest": {
      "type": "object",
      "properties": {
        "Contacts": {
          "type": "array",
          "items": { "$ref": "#/definitions/PortalDocumentContact" }
        },
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SetDocumentIntegrationFolderRequest": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string",
          "enum": [ "Dropbox", "Evernote", "Box" ]
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "Folder": { "type": "string" }
      }
    },
    "GetImportUploadUrlRequest": {
      "type": "object",
      "properties": {
        "Files": {
          "type": "array",
          "items": { "$ref": "#/definitions/RMFile" }
        },
        "Directories": {
          "type": "array",
          "items": { "$ref": "#/definitions/RMDirectory" }
        },
        "DirectoryId": {
          "type": "integer",
          "format": "int32"
        },
        "UseTemp": { "type": "boolean" }
      }
    },
    "AddMatterCourtRuleRequest": {
      "type": "object",
      "properties": {
        "CalendarEntries": {
          "type": "array",
          "items": { "$ref": "#/definitions/Event" }
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "ToolSetId": {
          "type": "integer",
          "format": "int32"
        },
        "ToggleID": { "type": "string" },
        "ToggleOptionID": { "type": "string" },
        "Description": { "type": "string" },
        "HearingNote": { "type": "string" },
        "TriggerID": { "type": "string" },
        "TriggerDate": { "type": "string" },
        "EditMatterCourtRuleId": { "type": "string" },
        "DeadLines": {
          "type": "array",
          "items": { "$ref": "#/definitions/Deadline" }
        },
        "UpdateNotifications": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterCourtRuleUpdateNotification" }
        }
      }
    },
    "CalculateDeadlinesRequest": {
      "type": "object",
      "properties": {
        "TriggerID": { "type": "string" },
        "TriggerDate": { "type": "string" },
        "ToggleID": {
          "type": "integer",
          "format": "int32"
        },
        "ToggleOptionID": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "ToolSetId": {
          "type": "integer",
          "format": "int32"
        },
        "HearingNote": { "type": "string" }
      }
    },
    "DeleteMatterCourtRuleRequest": {
      "type": "object",
      "properties": { "MatterCourtRuleId": { "type": "string" } }
    },
    "GetAvailableCourtRulesRequest": {
      "type": "object",
      "properties": { "Filter": { "type": "string" } }
    },
    "GetCourtRuleDefaultRequest": {
      "type": "object",
      "properties": {}
    },
    "GetCourtRuleRequest": {
      "type": "object",
      "properties": { "Id": { "type": "string" } }
    },
    "GetMatterCourtRuleEventsRequest": {
      "type": "object",
      "properties": { "Id": { "type": "string" } }
    },
    "GetMatterCourtRulesRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TriggerMockDeadlineUpdateRequest": {
      "type": "object",
      "properties": {
        "EventId": {
          "type": "integer",
          "format": "int32"
        },
        "DeadlineUpdateText": { "type": "string" }
      }
    },
    "GetCountriesRequest": {
      "type": "object",
      "properties": { "SearchText": { "type": "string" } }
    },
    "GetClientsByIdsRequest": {
      "type": "object",
      "properties": {
        "ClientIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "GetMatterReadOnlyRelationshipsRequest": {
      "type": "object",
      "properties": {
        "ClientId": {
          "type": "integer",
          "format": "int32"
        },
        "Relationship": { "type": "string" }
      }
    },
    "CheckContactAvailabilityRequest": {
      "type": "object",
      "properties": {
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        },
        "StartDate": {
          "type": "string",
          "format": "date-time"
        },
        "EndDate": {
          "type": "string",
          "format": "date-time"
        },
        "ContactIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "DeleteCalendarEntryRequest": {
      "type": "object",
      "properties": {
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        },
        "DeleteFutureEvents": { "type": "boolean" }
      }
    },
    "GetCalendarEntriesForDateRangeRequest": {
      "type": "object",
      "properties": {
        "UserIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "FromDate": {
          "type": "string",
          "format": "date-time"
        },
        "ToDate": {
          "type": "string",
          "format": "date-time"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetCalendarEntryRequest": {
      "type": "object",
      "properties": {
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SaveCalendarEntryRequest": {
      "type": "object",
      "properties": {
        "CalendarEntry": {
          "type": "object",
          "$ref": "#/definitions/Event"
        },
        "UpdateFutureEvents": { "type": "boolean" }
      }
    },
    "SyncEventsRequest": {
      "type": "object",
      "properties": {
        "ShouldCreateContactAttendees": { "type": "boolean" },
        "StartUTC": {
          "type": "string",
          "format": "date-time"
        },
        "EndUTC": {
          "type": "string",
          "format": "date-time"
        },
        "Events": {
          "type": "array",
          "items": { "$ref": "#/definitions/Event" }
        },
        "IsInitialSync": { "type": "boolean" }
      }
    },
    "GetUpcomingEventsForUserRequest": {
      "type": "object",
      "properties": {
        "Date": {
          "type": "string",
          "format": "date-time"
        },
        "GetFlagged": { "type": "boolean" }
      }
    },
    "GetUpcomingEventsRequest": {
      "type": "object",
      "properties": { "GetFlagged": { "type": "boolean" } }
    },
    "GetUpcomingEventsForMatterRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "GetFlagged": { "type": "boolean" }
      }
    },
    "GetDefaultBillingTiersRequest": {
      "type": "object",
      "properties": {}
    },
    "BillingFeatureInterest": {
      "type": "object",
      "properties": {
        "InstallationId": {
          "type": "integer",
          "format": "int32"
        },
        "FeatureId": {
          "type": "integer",
          "format": "int32"
        },
        "InterestTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "Date": {
          "type": "string",
          "format": "date-time"
        },
        "UserId": { "type": "string" },
        "BillingFeatureInterestType": {
          "type": "object",
          "$ref": "#/definitions/BillingFeatureInterestType"
        },
        "BillingFeature": {
          "type": "object",
          "$ref": "#/definitions/BillingFeature"
        },
        "Installation": {
          "type": "object",
          "$ref": "#/definitions/Install"
        },
        "aspnet_Users": {
          "type": "object",
          "$ref": "#/definitions/aspnet_Users"
        },
        "FeatureIdentifier": { "type": "string" },
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "IsDeleted": { "type": "boolean" },
        "IsSaved": { "type": "boolean" }
      }
    },
    "BillingFeatureInterestType": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "BillingFeatureInterests": { "type": "object" },
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "IsDeleted": { "type": "boolean" },
        "IsSaved": { "type": "boolean" }
      }
    },
    "BillingFeature": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "Description": { "type": "string" },
        "Identifier": { "type": "string" },
        "BillingModuleFeatures": { "type": "object" },
        "BillingFeatureInterests": { "type": "object" },
        "BillingTierIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "IsDeleted": { "type": "boolean" },
        "IsSaved": { "type": "boolean" }
      }
    },
    "Install": {
      "type": "object",
      "properties": {
        "Name": { "type": "string" },
        "VaultId": { "type": "string" },
        "InstallType": { "type": "string" },
        "InstallDate": {
          "type": "string",
          "format": "date-time"
        },
        "BillingEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "RemovedDate": {
          "type": "string",
          "format": "date-time"
        },
        "TotalUsers": {
          "type": "integer",
          "format": "int32"
        },
        "IsDeleted": { "type": "boolean" },
        "Status": {
          "type": "integer",
          "format": "int32"
        },
        "TrialTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "BillingFeatureInterests": { "type": "object" },
        "InstallScripts": { "type": "object" },
        "InstallSegments": { "type": "object" },
        "AccessTokens": { "type": "object" },
        "TenantContractConfigs": { "type": "object" },
        "InstallationsBilling": {
          "type": "object",
          "$ref": "#/definitions/InstallationsBilling"
        },
        "TenantContractExpirationNotificationHistories": { "type": "object" },
        "TenantContractExpirationNotificationHistories1": { "type": "object" },
        "TenantContracts": { "type": "object" },
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "IsSaved": { "type": "boolean" }
      }
    },
    "InstallationsBilling": {
      "type": "object",
      "properties": {
        "InstallationId": {
          "type": "integer",
          "format": "int32"
        },
        "LastInvoiceDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastPaymentReceived": {
          "type": "string",
          "format": "date-time"
        },
        "Balance": {
          "type": "number",
          "format": "double"
        },
        "Charge": {
          "type": "number",
          "format": "double"
        },
        "BillingFrequency": {
          "type": "integer",
          "format": "int32"
        },
        "StoreCreditBalance": {
          "type": "number",
          "format": "double"
        },
        "SubscriptionPriceId": {
          "type": "integer",
          "format": "int32"
        },
        "BillingTierId": {
          "type": "integer",
          "format": "int32"
        },
        "BillingTier": {
          "type": "object",
          "$ref": "#/definitions/BillingTier"
        },
        "Installation": {
          "type": "object",
          "$ref": "#/definitions/Install"
        },
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "IsDeleted": { "type": "boolean" },
        "IsSaved": { "type": "boolean" }
      }
    },
    "aspnet_Users": {
      "type": "object",
      "properties": {
        "ApplicationId": { "type": "string" },
        "UserId": { "type": "string" },
        "UserName": { "type": "string" },
        "LoweredUserName": { "type": "string" },
        "MobileAlias": { "type": "string" },
        "IsAnonymous": { "type": "boolean" },
        "LastActivityDate": {
          "type": "string",
          "format": "date-time"
        },
        "AccessTokens": { "type": "object" },
        "BillingFeatureInterests": { "type": "object" },
        "BillingTierAudits": { "type": "object" },
        "TwoFactorAuthenticationRecoveryCodes": { "type": "object" },
        "TwoFactorAuthenticationUsers": { "type": "object" },
        "UserRoles": { "type": "object" },
        "UsersAccesses": { "type": "object" },
        "aspnet_Membership": {
          "type": "object",
          "$ref": "#/definitions/aspnet_Membership"
        },
        "TenantContracts": { "type": "object" },
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "IsDeleted": { "type": "boolean" },
        "IsSaved": { "type": "boolean" }
      }
    },
    "aspnet_Membership": {
      "type": "object",
      "properties": {
        "ApplicationId": { "type": "string" },
        "UserId": { "type": "string" },
        "Password": { "type": "string" },
        "PasswordFormat": {
          "type": "integer",
          "format": "int32"
        },
        "PasswordSalt": { "type": "string" },
        "MobilePIN": { "type": "string" },
        "Email": { "type": "string" },
        "LoweredEmail": { "type": "string" },
        "PasswordQuestion": { "type": "string" },
        "PasswordAnswer": { "type": "string" },
        "IsApproved": { "type": "boolean" },
        "IsLockedOut": { "type": "boolean" },
        "CreateDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastLoginDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastPasswordChangedDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastLockoutDate": {
          "type": "string",
          "format": "date-time"
        },
        "FailedPasswordAttemptCount": {
          "type": "integer",
          "format": "int32"
        },
        "FailedPasswordAttemptWindowStart": {
          "type": "string",
          "format": "date-time"
        },
        "FailedPasswordAnswerAttemptCount": {
          "type": "integer",
          "format": "int32"
        },
        "FailedPasswordAnswerAttemptWindowStart": {
          "type": "string",
          "format": "date-time"
        },
        "Comment": { "type": "string" },
        "aspnet_Users": {
          "type": "object",
          "$ref": "#/definitions/aspnet_Users"
        },
        "Id": {
          "type": "integer",
          "format": "int32"
        },
        "CreatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "LastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "IsDeleted": { "type": "boolean" },
        "IsSaved": { "type": "boolean" }
      }
    },
    "SaveBillingFeatureInterestRequest": {
      "type": "object",
      "properties": {
        "FeatureInterest": {
          "type": "object",
          "$ref": "#/definitions/BillingFeatureInterest"
        }
      }
    },
    "DeleteActivityRequest": {
      "type": "object",
      "properties": {
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        },
        "SendToTimerBar": { "type": "boolean" }
      }
    },
    "GetActivityTypeIdRequest": {
      "type": "object",
      "properties": {
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetTimeExpenseRequest": {
      "type": "object",
      "properties": {
        "ActivityId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetUnitsBilledForPeriodRequest": {
      "type": "object",
      "properties": { "TimePeriod": { "type": "string" } }
    },
    "SaveBillableTimeRequest": {
      "type": "object",
      "properties": {
        "BillableTime": {
          "type": "object",
          "$ref": "#/definitions/BillableTime"
        }
      }
    },
    "SaveExpenseRequest": {
      "type": "object",
      "properties": {
        "Expense": {
          "type": "object",
          "$ref": "#/definitions/Expense"
        }
      }
    },
    "GetActivitiesForMatterRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Fetch": {
          "type": "integer",
          "format": "int32"
        },
        "ActivityTypeId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetFirmBalancesRequest": {
      "type": "object",
      "properties": { "IncludeFullDetails": { "type": "boolean" } }
    },
    "GetCurrentBadgeRequest": {
      "type": "object",
      "properties": {}
    },
    "GetUserBadgeHistoryRequest": {
      "type": "object",
      "properties": {}
    },
    "UserViewBadgeRequest": {
      "type": "object",
      "properties": { "BadgeName": { "type": "string" } }
    },
    "CancellationSurvey": {
      "type": "object",
      "properties": {
        "QuestionAnswers": {
          "type": "array",
          "items": { "$ref": "#/definitions/CancellationSurveyItem" }
        }
      }
    },
    "CancellationSurveyItem": {
      "type": "object",
      "properties": {
        "Question": { "type": "string" },
        "Answer": { "type": "string" }
      }
    },
    "CancelSubscriptionRequest": {
      "type": "object",
      "properties": {
        "CancellationSurvey": {
          "type": "object",
          "$ref": "#/definitions/CancellationSurvey"
        }
      }
    },
    "GetSessionCancellationInfoRequest": {
      "type": "object",
      "properties": { "NotifySlack": { "type": "boolean" } }
    },
    "IsDevOrTestEnvironmentRequest": {
      "type": "object",
      "properties": {}
    },
    "SendCancellationNotificationRequest": {
      "type": "object",
      "properties": {}
    },
    "GetInstallScriptsRequest": {
      "type": "object",
      "properties": {}
    },
    "SetInstallScriptStateRequest": {
      "type": "object",
      "properties": {
        "InstallScriptID": {
          "type": "integer",
          "format": "int32"
        },
        "Enabled": { "type": "boolean" }
      }
    },
    "DeleteChannelRequest": {
      "type": "object",
      "properties": { "Id": { "type": "string" } }
    },
    "DeleteMessageRequest": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "IsDirectMessage": { "type": "boolean" }
      }
    },
    "EditMessageRequest": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "NewMessage": { "type": "string" },
        "IsDirectMessage": { "type": "boolean" }
      }
    },
    "GeFileUploadUrlRequest": {
      "type": "object",
      "properties": {
        "Files": {
          "type": "array",
          "items": { "$ref": "#/definitions/RMFile" }
        },
        "Directories": {
          "type": "array",
          "items": { "$ref": "#/definitions/RMDirectory" }
        },
        "ToUserID": {
          "type": "integer",
          "format": "int32"
        },
        "ToChannelId": { "type": "string" },
        "PostToMatterDocuments": { "type": "boolean" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SaveFilesRequest": {
      "type": "object",
      "properties": {}
    },
    "GetChannelInfoRequest": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetChannelsIBelongToRequest": {
      "type": "object",
      "properties": { "Filter": { "type": "string" } }
    },
    "GetChannelChatRequest": {
      "type": "object",
      "properties": {
        "BeforeDate": {
          "type": "string",
          "format": "date-time"
        },
        "AfterDate": {
          "type": "string",
          "format": "date-time"
        },
        "ChannelId": { "type": "string" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "FeedType": { "type": "string" }
      }
    },
    "GetDirectChatRequest": {
      "type": "object",
      "properties": {
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "BeforeDate": {
          "type": "string",
          "format": "date-time"
        },
        "AfterDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GetUnreadChannelMessagesRequest": {
      "type": "object",
      "properties": {}
    },
    "GetUnreadDirectMessagesRequest": {
      "type": "object",
      "properties": {}
    },
    "GetUsersRequest": {
      "type": "object",
      "properties": { "Filter": { "type": "string" } }
    },
    "ReadAllMessagesFromChannelRequest": {
      "type": "object",
      "properties": { "Id": { "type": "string" } }
    },
    "ReadAllMessagesFromSomeoneRequest": {
      "type": "object",
      "properties": {
        "FromUserID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SaveChannelRequest": {
      "type": "object",
      "properties": {
        "Channel": {
          "type": "object",
          "$ref": "#/definitions/Channel"
        }
      }
    },
    "SendChannelMessageRequest": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Message": { "type": "string" }
      }
    },
    "SendDirectMessageRequest": {
      "type": "object",
      "properties": {
        "UserId": {
          "type": "integer",
          "format": "int32"
        },
        "Message": { "type": "string" }
      }
    },
    "MatterChannelSubscriptionRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "Remove": { "type": "boolean" }
      }
    },
    "SetEmailAlertReminderRequest": {
      "type": "object",
      "properties": { "Value": { "type": "boolean" } }
    },
    "GetAllLedesRequest": {
      "type": "object",
      "properties": {}
    },
    "ChargeInterestFeesRequest": {
      "type": "object",
      "properties": {
        "ChargeInterestFeesCode": { "type": "string" },
        "Date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CreditCardPaymentInfo": {
      "type": "object",
      "properties": {
        "APIKey": { "type": "string" },
        "CreditCardNumber": { "type": "string" },
        "Expiry": { "type": "string" },
        "ZipCode": { "type": "string" },
        "StreetAddress": { "type": "string" },
        "CVV": { "type": "string" },
        "Amount": { "type": "string" },
        "AccountHolderName": { "type": "string" }
      }
    },
    "CreateCreditCardPaymentTokenRequest": {
      "type": "object",
      "properties": {
        "CreditCardPaymentInfo": {
          "type": "object",
          "$ref": "#/definitions/CreditCardPaymentInfo"
        }
      }
    },
    "DeletePaymentRequest": {
      "type": "object",
      "properties": {
        "LedgerId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DestoryPaymentPlanChargetokenRequest": {
      "type": "object",
      "properties": { "PlanId": { "type": "string" } }
    },
    "GetAllDiscountsRequest": {
      "type": "object",
      "properties": {}
    },
    "GetAllInterestRatesRequest": {
      "type": "object",
      "properties": {}
    },
    "GetEffectiveRatesForMatterRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "BillingDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GetEffectiveUserRatesRequest": {
      "type": "object",
      "properties": {
        "BillingDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GetInvoicePaymentsForMatterRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetMostRecentInvoiceInfoByClientRequest": {
      "type": "object",
      "properties": {
        "ClientID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetPaymentOptionsRequest": {
      "type": "object",
      "properties": {}
    },
    "SaveDiscountConfigurationRequest": {
      "type": "object",
      "properties": {
        "DiscountConfiguration": {
          "type": "object",
          "$ref": "#/definitions/DiscountConfiguration"
        }
      }
    },
    "SaveInterestConfigurationRequest": {
      "type": "object",
      "properties": {
        "InterestConfiguration": {
          "type": "object",
          "$ref": "#/definitions/InterestConfiguration"
        }
      }
    },
    "SetPaymentProcessingFeeDefaultRequest": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "GetPaymentProcessingFeeDefaultRequest": {
      "type": "object",
      "properties": {}
    },
    "GetPaymentProcessorRequest": {
      "type": "object",
      "properties": {}
    },
    "GetPaymentsForMatterRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetQuickInvoiceInfoRequest": {
      "type": "object",
      "properties": {
        "PaymentKey": { "type": "string" },
        "IsUser": { "type": "boolean" }
      }
    },
    "GetTransactionInfoRequest": {
      "type": "object",
      "properties": { "TransactionId": { "type": "string" } }
    },
    "OnlinePaymentRequest": {
      "type": "object",
      "properties": {
        "TrustToken": { "type": "string" },
        "OperatingToken": { "type": "string" },
        "PaymentKey": { "type": "string" },
        "InvoiceAmount": {
          "type": "number",
          "format": "double"
        },
        "TrustDepositAmount": {
          "type": "number",
          "format": "double"
        },
        "isACH": { "type": "boolean" },
        "IsRetainerRequest": {
          "type": "boolean",
          "description": "\r\n            Payments will go directly as intended\r\n            InvoiceAmount to operation\r\n            TRrustDepostiAmount to trust\r\n            "
        },
        "PaymentHint": { "type": "string" }
      }
    },
    "ProcessRefundRequest": {
      "type": "object",
      "properties": { "TransactionId": { "type": "string" } }
    },
    "ProcessTokenRequest": {
      "type": "object",
      "properties": {
        "IsOperating": { "type": "boolean" },
        "Token": { "type": "string" },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "ClientID": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "PaymentKey": { "type": "string" },
        "isACH": { "type": "boolean" },
        "PendingSelectedDate": { "type": "string" },
        "TestToken": { "type": "boolean" },
        "PaymentHint": { "type": "string" }
      }
    },
    "RecordPaymentsToInvoicesRequest": {
      "type": "object",
      "properties": {
        "InvoicePayments": {
          "type": "object",
          "$ref": "#/definitions/MatterInvoicePayments"
        },
        "Date": {
          "type": "string",
          "format": "date-time"
        },
        "Description": { "type": "string" },
        "IsAdjustment": { "type": "boolean" }
      }
    },
    "BillingParams": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "FromDate": {
          "type": "string",
          "format": "date-time"
        },
        "ToDate": {
          "type": "string",
          "format": "date-time"
        },
        "ViewBillableActivities": { "type": "boolean" },
        "ViewExpenses": { "type": "boolean" },
        "ExcludePreviouslyInvoicedItems": { "type": "boolean" },
        "ExportType": { "type": "string" },
        "IsPrebill": { "type": "boolean" },
        "TrustActionType": {
          "type": "string",
          "enum": [ "ConfirmFunds", "HoldFunds", "DoNothing" ]
        },
        "CheckNumber": { "type": "string" },
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RunInvoiceRequest": {
      "type": "object",
      "properties": {
        "BillingParams": {
          "type": "object",
          "$ref": "#/definitions/BillingParams"
        }
      }
    },
    "setPaymentProcessorSettingsRequest": {
      "type": "object",
      "properties": {
        "Secret": { "type": "string" },
        "OperatingAPIKey": { "type": "string" },
        "TrustAPIKey": { "type": "string" }
      }
    },
    "SetPaymentProcessorRequest": {
      "type": "object",
      "properties": {
        "PaymentProcessor": {
          "type": "object",
          "$ref": "#/definitions/PaymentProcessor"
        }
      }
    },
    "GetMatterBillingInfoRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "GetAdditionalInfo": { "type": "boolean" }
      }
    },
    "GetMobileAuthenticationCodeRequest": {
      "type": "object",
      "properties": {
        "DeviceId": { "type": "string" },
        "AuthenticationToken": { "type": "string" }
      }
    },
    "GetAuthenticationTokenRequest": {
      "type": "object",
      "properties": { "DeviceId": { "type": "string" } }
    },
    "SetUserMobilePinRequest": {
      "type": "object",
      "properties": {
        "DeviceId": { "type": "string" },
        "Pin": { "type": "string" }
      }
    },
    "DeleteUserNotificationRequest": {
      "type": "object",
      "properties": { "NotificationId": { "type": "string" } }
    },
    "GetUserNotificationsRequest": {
      "type": "object",
      "properties": {
        "DeviceId": { "type": "string" },
        "GetCount": { "type": "boolean" },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Fetch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SaveUserTokenRequest": {
      "type": "object",
      "properties": {
        "Token": { "type": "string" },
        "DeviceId": { "type": "string" }
      }
    },
    "DeleteFirmRoleRequest": {
      "type": "object",
      "properties": { "FirmRoleId": { "type": "string" } }
    },
    "SaveFirmRoleRequest": {
      "type": "object",
      "properties": {
        "Role": {
          "type": "object",
          "$ref": "#/definitions/UserFirmRole"
        }
      }
    },
    "FirmRolesRatesCanEditRequest": {
      "type": "object",
      "properties": {
        "ContactId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetClientRoleRatesRequest": {
      "type": "object",
      "properties": {
        "ContactId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetFirmRolesRequest": {
      "type": "object",
      "properties": {
        "UserFirmRoles": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserFirmRole" }
        }
      }
    },
    "SaveClientRoleRatesRequest": {
      "type": "object",
      "properties": {
        "ClientRoleRates": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClientRoleRate" }
        }
      }
    },
    "DeleteMatterCustomFieldRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "FieldNames": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetMatterCustomFieldsRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "Filter": { "type": "string" },
        "TempCustomFieldValues": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterCustomField" }
        }
      }
    },
    "GetMatterNextTemplateByStatusSelectionRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SaveMatterCustomFieldsRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "CustomFields": {
          "type": "array",
          "items": { "$ref": "#/definitions/MatterCustomField" }
        }
      }
    },
    "SearchMatterTagsRequest": {
      "type": "object",
      "properties": { "SearchText": { "type": "string" } }
    },
    "DeleteMatterRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetMatterBudgetRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetMatterBudgetInfoRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetDetailsForMatterRequest": {
      "type": "object",
      "properties": {}
    },
    "GetMatterEmailFoldersRequest": {
      "type": "object",
      "properties": {}
    },
    "SearchCustomFieldsRequest": {
      "type": "object",
      "properties": { "SearchText": { "type": "string" } }
    },
    "UpdateMatterBudgetRequest": {
      "type": "object",
      "properties": {
        "MatterBudget": {
          "type": "object",
          "$ref": "#/definitions/MatterBudget"
        }
      }
    },
    "GetMatterByClientMatterNameRequest": {
      "type": "object",
      "properties": { "ClientMatter": { "type": "string" } }
    },
    "UpdateMatterStatusRequest": {
      "type": "object",
      "properties": {
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "Status": {
          "type": "string",
          "enum": [ "Open", "Closed", "Completed", "None", "All" ]
        }
      }
    },
    "IsPathValidRequest": {
      "type": "object",
      "properties": { "path": { "type": "string" } }
    },
    "ProcessDropBoxRequest": {
      "type": "object",
      "properties": {
        "accessCode": { "type": "string" },
        "state": { "type": "string" }
      }
    },
    "GetDropBoxUriRequest": {
      "type": "object",
      "properties": { "redirectUrl": { "type": "string" } }
    },
    "DeleteContactCustomFieldRequest": {
      "type": "object",
      "properties": {
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "FieldNames": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetContactCustomFieldsRequest": {
      "type": "object",
      "properties": {
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "Filter": { "type": "string" },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "TempCustomFieldValues": {
          "type": "array",
          "items": { "$ref": "#/definitions/OriginContactCustomField" }
        }
      }
    },
    "SaveContactCustomFieldsRequest": {
      "type": "object",
      "properties": {
        "ContactId": {
          "type": "integer",
          "format": "int32"
        },
        "MatterId": {
          "type": "integer",
          "format": "int32"
        },
        "CustomFields": {
          "type": "array",
          "items": { "$ref": "#/definitions/OriginContactCustomField" }
        }
      }
    },
    "SearchOriginatorRequest": {
      "type": "object",
      "properties": { "SearchText": { "type": "string" } }
    },
    "DeleteContactRequest": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetContactByFullNameRequest": {
      "type": "object",
      "properties": {
        "FullName": { "type": "string" },
        "Relationship": { "type": "string" },
        "PortalContact": { "type": "boolean" },
        "FullNames": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "GetContactByIDRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetContactDataRequest": {
      "type": "object",
      "properties": {
        "ContactId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetContactsRequest": {
      "type": "object",
      "properties": {
        "Letter": { "type": "string" },
        "Offset": {
          "type": "integer",
          "format": "int32"
        },
        "Fetch": {
          "type": "integer",
          "format": "int32"
        },
        "Search": { "type": "string" },
        "Sort": {
          "type": "string",
          "enum": [ "FirstName", "LastName" ]
        },
        "IsDescending": { "type": "boolean" }
      }
    },
    "GetDefaultContactDataRequest": {
      "type": "object",
      "properties": {}
    },
    "SaveContactDataRequest": {
      "type": "object",
      "properties": {
        "Relationships": {
          "type": "array",
          "items": { "$ref": "#/definitions/ContactRelationship" }
        },
        "CustomFields": {
          "type": "array",
          "items": { "$ref": "#/definitions/ContactCustomField" }
        },
        "ContactId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SaveContactRequest": {
      "type": "object",
      "properties": {
        "Contact": {
          "type": "object",
          "$ref": "#/definitions/ContactFull"
        }
      }
    },
    "RevokeTokenRequest": {
      "type": "object",
      "properties": { "token": { "type": "string" } }
    },
    "GrantTokenRequest": {
      "type": "object",
      "properties": {
        "grant_type": { "type": "string" },
        "code": { "type": "string" },
        "client_id": { "type": "string" },
        "client_secret": { "type": "string" },
        "username": { "type": "string" },
        "password": { "type": "string" },
        "token": { "type": "string" }
      }
    },
    "RefreshTokenRequest": {
      "type": "object",
      "properties": { "refresh_token": { "type": "string" } }
    }
  }
}